#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.." || exit
DOTFILES_ROOT=$(pwd -P)
# shellcheck source=bin/lib.sh
source ./bin/lib.sh
export DEFAULT_SHELL="fish"

echo ''

setup_gitconfig () {
  if ! [ -f git/gitconfig.symlink ]; then
    info 'Setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]; then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -re git_authorname
    user ' - What is your github author email?'
    read -re git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.symlink.example > git/gitconfig.symlink

    success 'gitconfig'
  fi
}

create_my_std_dirs() {
  cd "$HOME" || exit 1
  local dirs="bin tmp/trash Development"

  if [ -d ~/Downloads ]; then
    if [ ! -L ~/tmp ]; then
      msg='Linked ~/Downloads to ~/tmp'
      if ln -s Downloads tmp; then success "$msg"; else fail "$msg"; fi
    else
      success "Skipped ~/tmp already a symlink"
    fi
  else
    dirs="tmp $dirs"
  fi

  for dir in $dirs; do
    if [ ! -d "$HOME/$dir" ]; then
      msg="Created ~/$dir"
      if mkdir "$HOME/$dir"; then success "$msg"; else fail "$msg"; fi
    else
      success "Skipped ~/$dir already exists"
    fi
  done
}

setup_gitconfig
install_dotfiles
[ "$(uname -s)" = "Darwin" ] && create_my_std_dirs

info "Installing dependencies..."
# shellcheck source=bin/dot
if source "$DOTFILES_ROOT/bin/dot" | tee /tmp/dotfiles-dot 2>&1; then
  success "Dependencies installed"
else
  fail "Error installing dependencies"
fi

echo ''
success '  All installed!'
