#!/usr/bin/env bash
#
# Extract my secrets from the Dotfile vault on 1Password
#
set -euo pipefail

DOTFILES=$(cd "$(dirname "$0")/.." && pwd)
# shellcheck source=bin/lib.sh
source "$DOTFILES/bin/lib.sh"

# Exit early if not on macos
[ -z "$MACOS" ] && ( info "This only runs on macOS" && exit 0)

if ! [ -L "$HOME/.gnupg" ] || ! [ -L "$HOME/.ssh" ]; then
  fail "Run script/bootstrap first!"
  exit 1
fi

# Log in to 1password if not already
if ! command -v op >/dev/null; then
  fail "1password-cli not installed!"
  exit 1
fi

# shellcheck disable=SC2154
if [ -z "${OP_SESSION_my:-}" ]; then
  info "Logging into 1Password..."
  eval "$(op signin my)"
fi

# Everything in the Dotfiles vault should be downloaded to the file in the path field
# templateUuid == 006 means pull only documents
download_documents(){
  local item_uuids=$(op list items --vault Dotfiles | jq -r '.[] | select(.templateUuid=="006") | .uuid')
  for item_id in $item_uuids; do
    read -r filename path <<<$(op get item $item_id --vault Dotfiles | jq -r '[.details.documentAttributes.fileName, .details.sections[1].fields[].v]|join(" ")' | sed -e 's|$HOME|'$HOME'|g')
    # Ensure the saved path ends in the filename, if not error
    [ "$(basename $path)" != "$filename" ] && fail "Whoops, $path doesn't end with the saved filename $filename"
    # Move on if the file already exits
    if [ -s "$path" ]; then
      success "Skipped $path"
      continue
    fi
    # Make the holding dir, just in case
    mkdir -p $(dirname $path)
    # Download document
    if op get document $item_id --vault Dotfiles > $path; then
      chmod 600 $path
      success "Restored $path"
    else
      fail "Failed to restore $path"
    fi
  done
}

download_documents

info "Setting up GPG..."
if ! command -v gpg >/dev/null; then
    fail "Install GPG first!"
    exit 1
fi

chmod 700 ~/.gnupg
gpg --import ~/.gnupg/colin@symr.io.asc 2>&1 | indent

# TODO: set GITHUB_TOKEN from the keychain (may need tweaking):
# GITHUB_TOKEN=$(security find-internet-password -a lildude -s github.com -l 'ghi token' -w)
echo
info "🏁 All done! 🏁"
