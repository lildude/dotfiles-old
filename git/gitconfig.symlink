[credential]
  helper = osxkeychain

[core]
  editor = vim          # Change to 'atom --wait' if feeling bold.
  trustctime = false    # Make `git rebase` safer on OS X - http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
  excludesfile = ~/.gitignore  # Exclude everything this file. Used for general exclusions.
  attributesfile = ~/.gitattributes  # Set attributes on files. Used for general diff improvements.
  # Use the diff-highlighter, if it's available.
  pager = "[ -f /usr/local/share/git-core/contrib/diff-highlight/diff-highlight ] &&  /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less -r || less -r"
  # Don't prompt for commit messages for merge commits.
  mergeoptions = --no-edit

#[user]
#  name = Colin Seymour
#  email = lildood@gmail.com
#  signingkey = lildood@gmail.com
# Using conditional includes for user info instead.
# NB: Order is important.
[includeIf "gitdir:~/"]
  path = ~/.dotfiles/git/gitconfig-personal
[includeIf "gitdir:~/github/"]
  path = ~/.dotfiles/git/gitconfig-github

[github]
  user = lildude

[color]
  ui = always   # Cos everyone loves colours
  branch = auto
  diff = auto
  status = auto

# Supported colors: normal, black, red, green, yellow, blue, magenta, cyan, or white
# Supported effects: bold, dim, ul (underline), blink, and reverse (swap foreground and background)
[color "branch"]
  #current = green # Default: green
  #local = yellow
  #remote = green

[color "diff"]
  commit = green
  meta = yellow # Default: unset
  frag = magenta bold # Default: unset - Appears as purple on my current customised Solarized iTerm2 theme.
  old = red # Default: red
  new = green # Default: green
  whitespace = red reverse # Default: unset - Protects me from committin ws changes

[color "status"]
  added = green # Default: green
  changed = red # Default: red
  untracked = magenta bold  # Default: red - Appears as purple on my current customised Solarized iTerm2 theme.

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22

[help]
  autocorrect = 1   # Autocorrect mistyped commands.

[alias]
  branch-name = "!git rev-parse --abbrev-ref HEAD"  # Get branch. Used by other aliases.
  st = "status --short --branch"
  rem = remote -v
  co = checkout
  #lg = log --graph --pretty=oneline --abbrev-commit --decorate
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset' --abbrev-commit
  cob = checkout -b
  b = branch
  # OSX's xargs doesn't support -r so install GNU xargs from `findutils` with homebrew
  # Remove all local branches that were tracking remote branches that have been deleted.
  up = !git checkout master && git pull --rebase --prune && git branch -vv | grep ': gone]' | awk '{print $1}' | $(which gxargs xargs | grep -v \"not found\" | head -1) -r git branch -d
  # Open the current branch on janky to see our build results
  janky = "!open https://janky.githubapp.com/r/github/$(basename $(pwd))/$(git branch-name)"
  # Create a pull request on GitHub using the `hub` command.
  pr = !hub pull-request -o


[gist]
  browse = true  # Open GitHub Gist in browser after submission.

[fetch]
  prune = 1  # Always prune when fetching (and pulling).

[push]
  default = current # Default: simple

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[diff]
  renames = copies  # Detect copies as well as renames

[http]
  sslVerify = true

[filter "lfs"]
  required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[archive]
  restrictRemote = false

[commit]
  gpgSign = true

#[branch]
#  autosetupmerge = always

[gpg]
  program = gpg2
