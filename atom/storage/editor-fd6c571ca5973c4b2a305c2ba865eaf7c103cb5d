{"mode":"editor","version":1,"windowDimensions":{"x":2,"y":22,"width":1267,"height":829},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap","buffers":[{"text":"# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  # All Vagrant configuration is done here. The most common configuration\n  # options are documented and commented below. For a complete reference,\n  # please see the online documentation at vagrantup.com.\n\n  # Every Vagrant virtual environment requires a box to build off of;\n  # download this one by running `vagrant box add precise64`\n  config.vm.box = \"hashicorp/precise64\"\n\n  # A fully qualified host name helps avoid errors in start up.\n  config.vm.hostname = \"openldap.ghe.local\"\n\n  # The url from where the 'config.vm.box' box will be fetched if it\n  # doesn't already exist on the user's system.\n  # config.vm.box_url = \"http://domain.com/path/to/above.box\"\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  config.vm.network :forwarded_port, guest: 80, host: 8180\n  config.vm.network :forwarded_port, guest: 389, host: 3890\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n  # config.vm.network :private_network, ip: \"192.168.33.20\"\n  config.vm.network \"private_network\", type: :dhcp, auto_config: false\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network :public_network\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  # config.vm.synced_folder \"../data\", \"/vagrant_data\"\n\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n  config.vm.provider :virtualbox do |vb|\n   \t# Use VBoxManage to customize the VM. For example to change memory:\n\tvb.customize [\"modifyvm\", :id, \"--memory\", \"512\"]\n\n\t# Enable DNS behind NAT\n\tvb.customize [\"modifyvm\", :id, \"--natdnshostresolver1\", \"on\"]\n  end\n  #\n  # View the documentation for the provider you're using for more\n  # information on available options.\n\n  # Enable provisioning with Puppet stand alone.  Puppet manifests\n  # are contained in a directory path relative to this Vagrantfile.\n  # You will need to create the manifests directory and a manifest in\n  # the file precise64.pp in the manifests_path directory.\n  #\n  # An example Puppet manifest to provision the message of the day:\n  #\n  # group { \"puppet\":\n  #   ensure => \"present\",\n  # }\n  #\n  # File { owner => 0, group => 0, mode => 0644 }\n  #\n  # file { '/etc/motd':\n  #   content => \"Welcome to your Vagrant-built virtual machine!\n  #               Managed by Puppet.\\n\"\n  # }\n  config.vm.provision :puppet do |puppet|\n\t# Autoload and make available the openldap module and stdlib\n  \tpuppet.module_path = \"modules\"\n    puppet.manifests_path = \"manifests\"\n    puppet.manifest_file = \"default.pp\"\n\t# Enable verbose logging if you are having trouble\n\t# puppet.options = \"--verbose --debug\"\n  end\n\n  # Enable provisioning with chef solo, specifying a cookbooks path, roles\n  # path, and data_bags path (all relative to this Vagrantfile), and adding\n  # some recipes and/or roles.\n  #\n  # config.vm.provision :chef_solo do |chef|\n  #   chef.cookbooks_path = \"../my-recipes/cookbooks\"\n  #   chef.roles_path = \"../my-recipes/roles\"\n  #   chef.data_bags_path = \"../my-recipes/data_bags\"\n  #   chef.add_recipe \"mysql\"\n  #   chef.add_role \"web\"\n  #\n  #   # You may also specify custom JSON attributes:\n  #   chef.json = { :mysql_password => \"foo\" }\n  # end\n\n  # Enable provisioning with chef server, specifying the chef server URL,\n  # and the path to the validation key (relative to this Vagrantfile).\n  #\n  # The Opscode Platform uses HTTPS. Substitute your organization for\n  # ORGNAME in the URL and validation key.\n  #\n  # If you have your own Chef Server, use the appropriate URL, which may be\n  # HTTP instead of HTTPS depending on your configuration. Also change the\n  # validation key to validation.pem.\n  #\n  # config.vm.provision :chef_client do |chef|\n  #   chef.chef_server_url = \"https://api.opscode.com/organizations/ORGNAME\"\n  #   chef.validation_key_path = \"ORGNAME-validator.pem\"\n  # end\n  #\n  # If you're using the Opscode platform, your validator client is\n  # ORGNAME-validator, replacing ORGNAME with your organization name.\n  #\n  # If you have your own Chef Server, the default validation client name is\n  # chef-validator, unless you changed the configuration.\n  #\n  #   chef.validation_client_name = \"ORGNAME-validator\"\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":11},"deserializer":"Marker"},"7":{"id":7,"range":[[9,0],[10,39]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[13,0],[13,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"9":{"id":9,"range":[[22,0],[22,58]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[27,0],[28,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[45,0],[45,40]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/Vagrantfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0413260ac0c8eb8406fdcb5f08aab3be6cb51427","deserializer":"TextBuffer"},{"text":"# update the packages on the system\nexec { \"apt-get update\":\n  path => \"/usr/bin\",\n}\n\n# Bootstrap ldap\nnode default {\n  class { 'ldap':\n    server      => true,\n    ssl         => false,\n  }\n}\n\nldap::define::domain {'openldap.ghe.local':\n  basedn   => 'dc=openldap,dc=ghe,dc=local',\n  rootdn   => 'cn=admin',\n  rootpw   => 'secret',\n  auth_who => 'anonymous'\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16},"deserializer":"Marker"},"5":{"id":5,"range":[[12,0],[14,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[16,0],[16,23]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[18,0],[18,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/manifests/default.pp","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ec21866c93275889646245329bf8761915c4b81a","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":11,"softTabs":true,"displayBuffer":{"id":12,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/Vagrantfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/manifests/default.pp","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/manifests/default.pp","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":345652203},"fuzzy-finder":{"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/Vagrantfile":1408008122295,"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/manifests/default.pp":1408008135800},"keybinding-resolver":{"attached":false},"tree-view":{"directoryExpansionStates":{"manifests":{}},"selectedPath":"/Users/lildude/Development/vagrant_configs/vagrant_ubuntu_openldap/manifests/default.pp","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}