{"mode":"editor","version":1,"windowDimensions":{"x":34,"y":23,"width":1380,"height":829,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"paths":["/Users/lildude/Documents/GHE"],"buffers":[{"text":"Git Errors & How to Fix Them\n============================\n\nThis is a document of explanations of the various git errors I've encountered over time, what they mean and how to resolve them.\n\nAs a general rule, always attempt to resolve issues by first running:\n\n`sudo -u git git reflog expire --stale-fix --expire-unreachable=now â€“all`\n\nIt could be that the missing objects are only needed by the reflogs and are not even reachable from the current references. Since we don't use the reflogs for anything critical, the first recommended step is to expire any reflog entries that refer to broken objects as above.\n\nIf that doesn't resolve the issue, then follow the appropriate steps for the error below.\n\n---\n\n* `error: refs/pull/53/merge does not point to a valid object!`\n\n    #### Context\n\n    ```\n    $ sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    Checking objects: 100% (2230/2230), done.\n    error: refs/pull/53/merge does not point to a valid object!\n    ```\n\n    #### Explanation\n\n    This error isn't a serious one. The `refs/pull/[ID]/merge` references are automatically created when we check to see if a pull request is merge-able or not. Over time these are automatically created and deleted as the pull requests progresses through development.\n\n    #### Resolution\n\n    You can ignore this if you want. Or you can manually, and safely, delete it using: `sudo -u git git update-ref -d refs/pull/[ID]/merge`.\n\n---\n\n* `error: file ./objects/pack/pack-[SHA].pack is not a GIT packfile`\n* `error: file ./objects/pack/pack-[SHA].pack is far too short to be a packfile`\n* `error: packfile ./objects/pack/pack-[SHA].pack claims to have [X] objects while index indicates [Y] objects`\n* `fatal: packfile ./objects/pack/pack-[SHA].pack cannot be accessed`\n\n    #### Context\n\n    ````\n    $ sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    error: file ./objects/pack/pack-f161bf931fd28c561b4739e9942ed9df523a1f15.pack is not a GIT packfile\n    fatal: packfile ./objects/pack/pack-f161bf931fd28c561b4739e9942ed9df523a1f15.pack cannot be accessed\n    ```\n\n    #### Explanation\n\n    These errors all indicate that the pack file in question is corrupt. This could be a problem and may not be 100% recoverable.\n\n    #### Resolution\n\n    To try and recover the information in each one, you can try to run the following commands:\n\n    ```\n    cd /data/repositories/[USER|ORG]/[REPO].git\n    cp objects/pack/pack-[SHA].pack /tmp\n    sudo rm objects/pack/pack-[SHA].pack\n    sudo -u git git unpack-objects -r < /tmp/pack-[SHA].pack\n    ```\n\n    This procedure copies the corrupt pack file to the /tmp directory, deletes it from the repository, then attempts to unpack its contents to the repository. You will likely encounter some errors while running the last command because the pack file is corrupt. However, this may still recover some objects and possibly restore your repository to a usable state.  \n\n    This will need to be repeated for each pack file mentioned in the errors.\n\n    If the pack file can't be recovered and `sudo -u git git fsck --no-dangling` continues to report problems, you'll need to resolve those issues as detailed elsewhere in this document or recover the entire repository from a known good backup, clone or fork as per:\n\n    * Remove & recreate the repository on the GitHub Enterprise appliance:\n\n        ```\n        cd /data/repositories/[USER|ORG]\n        sudo rm -rf [REPO].git\n        sudo -u git git  init --bare [REPO].git\n        ```\n\n    * Repopulate the contents of the repository from a host with the good backup/clone/fork:\n\n        ```\n        git remote add ghe-origin [REPO]\n        git push --mirror ghe-origin http(s)://[HOSTNAME]/path/to/[REPO].git\n        git push --mirror ghe-origin\n        ```\n\n---\n\n* `fatal: Remote branch are not found in upstream origin`\n\n    #### Context\n\n    ```\n    $ git clone -bare /d1/git_fix/home_25/jenkins/git_backups/current/repositories/di/Android-SDK-IMAdNetwork.git\n    Cloning into 'Android-SDK-IMAdNetwork'...\n    fatal: Remote branch are not found in upstream origin\n    The remote end hung up unexpectedly\n    ```\n\n    #### Explanation\n\n    This is a user error typo.  The user has used `-bare` instead of `--bare`\n\n    #### Resolution\n\n    Re-run the command, but use `--bare` instead of `-bare`\n\n---\n\n* `warning: Remote branch [XXX] not found in upstream origin, using HEAD instead`\n\n    #### Context\n\n    ```\n    $ git clone -b br6-1-0 ssh://gitolite@myservername/testrep\n    Cloning into 'testrep'...\n    remote: Counting objects: 19536, done.\n    remote: Compressing objects: 100% (5850/5850), done.\n    remote: Total 19536 (delta 13869), reused 18869 (delta 13202)\n    Receiving objects: 100% (19536/19536), 61.44 MiB | 17 KiB/s, done.\n    Resolving deltas: 100% (13869/13869), done.\n    warning: Remote branch br6-0 not found in upstream origin, using HEAD instead\n    ```\n\n    #### Explanation\n\n    git versions before v1.7.10 did not expect a tag name with the `-b` switch.\n\n    #### Resolution\n\n    Either upgrade to git v1.7.10 or later, or clone and manually switch to the tag, like this:\n\n    ```\n    $ git clone [REPO]\n    $ cd [REPO]\n    $ git checkout [TAG]\n    ```\n\n    Note that if you are planning on doing work based on the tag, you probably want to create a new branch, like:\n\n    ```\n    $ git checkout -b [BRANCH-NAME] [TAG]\n    ```\n\n---\n\n* `error: refs/heads/[BRANCH] does not point to a valid object!`\n* `remote: error: failed to lock refs/heads/dev`\n\n    #### Context\n\n    *Local:*\n    ```\n    $ git push --mirror ghe-origin\n    Total 0 (delta 0), reused 0 (delta 0)\n    remote: error: failed to lock refs/heads/dev\n    To https://github.corp.inmobi.com/web-2-0/ee-web.git\n    ! [remote rejected] dev -> dev (failed to lock)\n    error: failed to push some refs to 'https://github.corp.inmobi.com/web-2-0/ee-web.git'\n    ```\n\n    *GHE:*\n    ```\n    $ sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    Checking objects: 100% (20132/20132), done.\n    error: refs/heads/dev does not point to a valid object!\n    broken link from tree c81e90a39daebad5bc242bfafbb33d3133c935ad\n              to    tree 74c31a861eee9e0909ada717ab9232a49ac2b361\n    missing commit 74a048824c1a9e7a418da7bdc8a3677ef8459a1e\n    missing tree 74c31a861eee9e0909ada717ab9232a49ac2b361\n    ```\n\n    #### Explanation\n\n    The branch in question points to an object that is missing.  It is probably pointing to one of those objects reported missing later on in the `sudo -u git git fsck --no-dangling` output.\n\n    #### Resolution\n\n    Recover the missing objects as per the generic \"Recover missing objects\" procedure at the end of this document.\n\n---\n\n* `remote: error: Could not read [SHA]`\n* `remote: fatal: bad tree object [SHA]`\n* `fatal: protocol error: bad pack header`\n\n    ```\n    $ git clone https://[HOSTNAME]/[USER|ORG]/[REPO].git\n    Cloning into '[REPO]'...\n    remote: error: Could not read 68f9009b250a0d3b8bd79fbe9bbd93692489486e\n    remote: fatal: bad tree object 68f9009b250a0d3b8bd79fbe9bbd93692489486e\n    remote: aborting due to possible repository corruption on the remote side.\n    fatal: protocol error: bad pack header\n    ```\n\n    #### Explanation\n\n    There is some sort of corruption with the object(s) mentioned on the remote repository.\n\n    #### Resolution\n\n    Run `sudo -u git git fsck --no-dangling` on the remote repository and correct the errors reported using the appropriate steps mentioned elsewhere in this document.\n\n---\n\n* `error in commit [SHA]: invalid author/committer line - bad date`\n\n    #### Context\n\n    ```\n    $ sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    error in commit fb0c0fc3d8284f1e5c5173fdd664a263dfbf3592: invalid author/committer line - bad date\n    error in commit be018a63db4f5702d8c1af36d9bee4df4d8a5f0a: invalid author/committer line - bad date\n    error in commit 1d598ed76d2175603f814ea07c2623c4173cc912: invalid author/committer line - bad date\n    ```\n\n    #### Explanation\n\n    This error indicates that the commits identified have invalid username or email address information in the commits.  This most likely stems from an error in the user's local configuration when they made the commit.\n\n    #### Resolution\n\n    To resolve this, you'll need to determine what the error is by running: `git cat-file -p [SHA]` on the commit SHA in question and then use the script detailed in [Changing Author Info](https://help.github.com/articles/changing-author-info) to correct the user informaton.\n\n    **Warning:** This action is destructive to your repository's history. It's best to do this on a clone, just in case. Also beware that this should not be performed on a repository that has been shared with others. Use at your own risk.\n\n    If you must correct this on a repository shared by others, they'll need to reclone this repository as the entire history would have been rewritten.\n\n---\n\n* `error: refs/tags/[TAG] does not point to a valid object!`\n\n    #### Context\n\n    ```\n    sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    Checking objects: 100% (249/249), done.\n    error: refs/tags/[TAG] does not point to a valid object!\n    ```\n\n    No other messages about missing objects are reported in the above output.\n\n    #### Explanation\n\n    This error indicates there is a reference to a tag that no longer exists.  The most likely explanation is there has been a force-push at some point after the tag was created that has resulted in the reference object being removed.  A subsequent updating of the tag has not taken place.\n\n    #### Resolution\n\n    If this tag should exist, you'll need to locate a clone of the repository that has this tag and remove the tag from the remote server by running: `git push origin :ref/tags/[TAG]]` and then re-push the good tag using: `git push origin [TAG]`.\n\n    If you can't find a repository with this tag, or you know for sure it shouldn't exist, you can remove the reference on the GitHub Enterprise side of things using: `sudo -u git git update-ref -d ref/tags/[TAG]`\n\n---\n\n* `error: index file ./objects/pack/pack-[SHA].idx is too small`\n* `error: non-monotonic index ./objects/pack/pack-[SHA].idx`\n\n    #### Context\n\n    ```\n    $ sudo -u git git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    error: index file ./objects/pack/pack-4b0bb1b5c44fc68dad3597b517d729cdfe0af70b.idx is too small\n    error: non-monotonic index ./objects/pack/pack-30a281079ffd14bf31908e366c6f672c9fbe3782.idx\n    ```\n\n    #### Explanation\n\n    This isn't a major issue and indicates that the pack index files are corrupt, commonly caused by filesystem corruption.  This is easy to recover provided the corresponding pack files are in good order, though there is a chance this isn't the case if there has been filesystem corruption.\n\n    There's no harm attempting to rectify this, though it will likely result in subsequent errors about missing objects that would need to be recovered as per the \"Recover missing objects\" procedure.\n\n    #### Resolution\n\n    ```\n    $ sudo rm ./objects/pack/pack-[SHA].idx\n    $ sudo -u git git index-pack ./objects/pack/pack-[SHA].pack\n    ```\n\n    ... where the two [SHA] values are the same and the SHA from the error message.\n\n    This may fail with `fatal: early EOF` which would indicate a corrupt pack file too.\n\n---\n\n* `error: Invalid HEAD`\n* `error: bad ref for HEAD`\n\n    #### Context\n\n    ```\n    sudo -u git git fsck --no-dangling\n    error: Invalid HEAD\n    Checking object directories: 100% (256/256), done.\n    error: sha1 mismatch 66982321b4aa56a0e331634e22d38fa033071747\n    error: 66982321b4aa56a0e331634e22d38fa033071747: object corrupt or missing\n    error: sha1 mismatch 6691bd61a558a0087f09c7b6f8bf82775b5ef2bc\n    error: 6691bd61a558a0087f09c7b6f8bf82775b5ef2bc: object corrupt or missing\n    Checking objects: 100% (10029/10029), done.\n    error: bad ref for HEAD\n    ```\n\n    #### Explanation\n\n    The file referenced in HEAD, normally refs/heads/master, is pointing to a file that does not contain just a SHA reference.\n\n    This can be confirmed with `cat HEAD` which should return `:refs/heads/master` and `cat refs/heads/master` which should return just a SHA.\n\n    #### Resolution\n\n    If this is a corrupt `refs/heads/master` file, remove the file and recreate the reference using:\n\n    ```\n    sudo rm refs/heads/master\n    sudo -u git git update-ref refs/heads/master [SHA]\n    ```\n\n    ... where [SHA] is the latest reference for master taken from the `audit_log` file.\n\n---\n\n* `error in tree [SHA]: contains duplicate file entries`\n\n    #### Context\n\n    ```\n    $ sudo -u git\n    git fsck --no-dangling\n    Checking object directories: 100% (256/256), done.\n    error in tree 30546108324724aedfaa0eee2c07c13457a6cbab: contains duplicate file entries\n    Checking objects: 100% (33697/33697), done.\n    ```\n\n    #### Explanation\n\n    This error is telling us that the tree referenced in the SHA has identical file entries. This is a violation of Git's object format and shouldn't be possible to do.\n\n    The duplication can be confirmed by running `git show [SHA]`.  \n\n    This isn't likely to have been caused by any sort of repository corruption, but more likely a bug in a user's version of git or even GitHub, if done via the web UI, which somehow allowed this to happen.\n\n    #### Resolution\n\n    The ultimate solution is to rewrite the history to remove this duplicate entry using `git filter-branch` or `bfg` and force-push the updated repository.\n\n    The procedure is that used to remove sensitive data or files as detailed in [Remove Sensitive Data](https://help.github.com/articles/remove-sensitive-data).\n\n    The other way to \"resolve\" this is as follows but it comes with the caveat that the duplicate entries are still in the history so `git fsck` will continue to report the problem:\n\n    1. First we grab the bad tree: `git ls-tree [BAD_SHA] > tmpfile.txt` This writes out your bad tree. For example:\n\n        ```\n        040000Â·treeÂ·3cdcc756ee0ed636c44828927126911d0ab28a18 â†’  xNotAlphabetic\n        040000Â·treeÂ·4ad0d8ef014b8cc09c95694399254eff43217bfb â†’  EXT\n        040000Â·treeÂ·d65085e4a05ea9ac8b79e37b87202dd64d402c2e â†’  duplicateFolder\n        040000Â·treeÂ·d65085e4a05ea9ac8b79e37b87202dd64d402c2e â†’  duplicateFolder\n        040000Â·treeÂ·fd0661d698ace91135a8473b26707892b7c89c32 â†’  ToolTester\n        040000Â·treeÂ·d65085e4a05ea9ac8b79e37b87202dd64d402c2e â†’  duplicateFolder\n        ```\n\n        **NOTE:** Â· & â†’ are whitespace [space] and [tab]\n\n    2. Next, edit the text, removing the offending lines, and save with Unix-style endings (ie only LF, not CRLF). With this example, we make this:\n\n        ```\n        040000Â·treeÂ·4ad0d8ef014b8cc09c95694399254eff43217bfb â†’  EXT\n        040000Â·treeÂ·d65085e4a05ea9ac8b79e37b87202dd64d402c2e â†’  duplicateFolder\n        040000Â·treeÂ·fd0661d698ace91135a8473b26707892b7c89c32 â†’  ToolTester\n        040000Â·treeÂ·3cdcc756ee0ed636c44828927126911d0ab28a18 â†’  xNotAlphabetic\n        ```\n\n    3. Type `cat tmpfile.txt | git mktree` which will make a new, fixed tree object and save it, and return the new hash: `a55115e4a05ea9ac8b79e37b872024d64d4r2c2e`\n\n    4. Next `git replace` will create a new reference, which forces all previously incident links to use the new, fixed object instead: `git replace [OLD_SHA] [NEW_SHA]``\n\n    This will solve your immediate problem. If you're interested, look at the overriding link in the `.git/refs/replace` folder.\n\n---\n\n* `error: sha1 mismatch [SHA]`\n\n    #### Context\n\n    ```\n    sudo -u git git fsck --no-dangling\n    error: Invalid HEAD\n    Checking object directories: 100% (256/256), done.\n    error: sha1 mismatch 66982321b4aa56a0e331634e22d38fa033071747\n    error: 66982321b4aa56a0e331634e22d38fa033071747: object corrupt or missing\n    error: sha1 mismatch 6691bd61a558a0087f09c7b6f8bf82775b5ef2bc\n    error: 6691bd61a558a0087f09c7b6f8bf82775b5ef2bc: object corrupt or missing\n    Checking objects: 100% (10029/10029), done.\n    error: bad ref for HEAD\n    ```\n\n    #### Explanation\n\n    The calculated SHA1 of the object in question does not match the recorded SHA value.\n\n    #### Resolution\n\n    If the object files still exist under ./objects within repository, remove them: `sudo rm ./objects/[DD]/[REST_OF_SHA]` and then recover the missing objects as per \"Recover mising objects\" below.\n\n    If the object files no longer exist, we'll need to unpack them, remove them and then recover:\n\n    ```\n    $\n    ```\n\n---\n\n* `notice: HEAD points to an unborn branch`\n* `notice: No default references`\n\n    #### Context\n\n    ```\n    sudo -u git git fsck --no-dangling\n    notice: HEAD points to an unborn branch (master)\n    Checking object directories: 100% (256/256), done.\n    notice: No default references\n    ```\n\n    #### Explanation\n\n    There are two possible explanations for this:\n\n    1.  This is a freshly created repository that has never been used, or\n    2.  This means the repository in question's HEAD points to a branch (mentioned in brackets) that doesn't exist.\n\n    For the former, there's nothing to worry about. This is expected. Just use the repository.\n\n    For the latter, in short, there is no `refs/heads/[BRANCH]` file in the repository and no reference to `refs/heads/[BRANCH]` in the `packed-refs` file.  \n    In this case it's the master branch.  A repository doesn't need a master branch, it however does need a HEAD that points to a valid branch.\n\n    #### Resolution\n\n    Review the the `audit_log` to determine if the branch in question should exist.  If it should, locate the last line in the `audit_log` that mentions this branch and take note of the second SHA in the line.  This is the latest SHA for this branch and should match the first line returned by `sudo -u git git reflog`\n\n    Create the missing reference using: `sudo -u git git update-ref refs/heads/[BRANCH] [SHA]`\n\n    If the branch should not or doesn't exist, update HEAD to point to a valid branch using: `sudo -u git git symbolic-ref HEAD refs/heads/[NEW_BRANCH]`\n\n---\n\n## Recover missing objects\n\nThis is the procedure to manually recover missing objects (blob/tree/commit) from other copies of repositories.  Replace [SHA] with the SHA of the missing object and [TYPE] with the object type.\n\n* Find a \"donor\" repository.  A \"donor\" can be any already existing clone or fork or good working backup of this repository.\n\n* Determine if the \"donor\" repository has the missing objects by running: `git cat-file -t [SHA]` within the repository where [SHA] is the SHA of the missing object reported by `sudo -u git git fsck --no-dangling`.\n\n    If the repository doesn't have the object in question, you would see the following:\n\n    ```\n    fatal: Not a valid object name error: [SHA]\n    ```\n\n    ... and you'll need to try another clone/fork of this repository.\n\n    But if it does contain the object, the above command will report what kind (TYPE) of object it is, eg tree, commit, blob etc.\n\n* Once you've found a copy of the repository with the missing object, you can copy the object to a file with: `git cat-file [TYPE] [SHA] > [TYPE].dat`\n\n* Copy `[TYPE].dat` to your GitHub Enterprise appliance, somewhere like `/tmp`: `scp -i /path/to/private/key [TYPE].dat admin@[hostname]:/tmp`\n\n* Connect to your GitHub Enterprise appliance over SSH and change into the repository's directory under `/data/repositories/`.\n\n* Rehash the object back in and run a `git fsck` again to make sure everything is in order:\n\n    ```\n    sudo -u git git hash-object -t [TYPE] -w /tmp/[TYPE].dat\n    sudo -u git git fsck --no-dangling\n    ```\n\nIf all goes well, your repository should be good and `git fsck` should report no problems.\n\nYou'll need to repeat this for each missing object and each repository that reports missing objects.\n","markers":{"markers":{"1":{"id":1,"range":[[420,7],[420,7]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":85,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"},"970":{"id":970,"range":[[289,2],[290,27]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"1096":{"id":1096,"range":[[290,2],[290,26]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"2699":{"id":2699,"range":[[323,3],[323,3]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3754":{"id":3754,"range":[[325,2],[325,55]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4667":{"id":4667,"range":[[341,48],[341,63]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4772":{"id":4772,"range":[[341,58],[341,62]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7593":{"id":7593,"range":[[377,168],[377,169]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7681":{"id":7681,"range":[[379,101],[379,102]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11090":{"id":11090,"range":[[347,89],[347,107]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11691":{"id":11691,"range":[[351,21],[351,29]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12764":{"id":12764,"range":[[347,112],[347,116]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13622":{"id":13622,"range":[[348,0],[349,160]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13654":{"id":13654,"range":[[348,0],[349,160]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13872":{"id":13872,"range":[[348,0],[349,160]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"15818":{"id":15818,"range":[[310,62],[310,81]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"16606":{"id":16606,"range":[[314,25],[314,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"18040":{"id":18040,"range":[[383,2],[383,29]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"18219":{"id":18219,"range":[[383,24],[383,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19153":{"id":19153,"range":[[405,84],[405,121]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19306":{"id":19306,"range":[[405,103],[405,121]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19494":{"id":19494,"range":[[405,108],[405,121]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19526":{"id":19526,"range":[[405,108],[405,120]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19775":{"id":19775,"range":[[405,167],[405,190]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"22109":{"id":22109,"range":[[416,2],[416,32]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"22738":{"id":22738,"range":[[432,72],[432,94]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"23235":{"id":23235,"range":[[436,42],[436,62]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"23401":{"id":23401,"range":[[436,54],[436,61]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"24956":{"id":24956,"range":[[443,40],[443,93]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"25254":{"id":25254,"range":[[443,88],[443,92]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"25751":{"id":25751,"range":[[445,93],[445,151]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"25983":{"id":25983,"range":[[445,139],[445,150]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"26216":{"id":26216,"range":[[436,107],[436,127]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"26250":{"id":26250,"range":[[436,119],[436,126]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"27341":{"id":27341,"range":[[441,294],[441,317]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"27342":{"id":27342,"range":[[482,42],[482,42]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":22,"goalBufferRange":null},"deserializer":"Marker"},"27343":{"id":27343,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":10},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lildude/Documents/GHE/git-errors.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cfd6bed8779ebb25b5108af4f8c4cabe75f1b801","deserializer":"TextBuffer"},{"text":"Tip & Trick & FAQ\n==================\n\nVersioning:\n-----------\n\nVersion string: 11.10.328\n  - 11.10 means little and is really the Ubuntu version it is based on.\n  - .328 is the important part.\n    - Major revs are divisible by 10, eg 300, 310, 320 etc\n    - Minor patch revs are the others.\n\nInstallation and Upgrading\n--------------------------\n\n- Releases 11.10.282 and earlier extracted to memory which was known to cause problems with upgrades.\n\n\n- Generally speaking, we do not recommend you jump more than 2 major releases in one upgrade.  So if you are not already on 11.10.31x or later, upgrade to 11.10.310 or 11.10.320 first, and then apply 11.10.328.  This limits the number of changes applied in one go and ensures a smoother upgrade process.  Older releases of GitHub Enterprise can be downloaded from https://enterprise.github.com/releases/\n\nThe recommended best-practice for upgrading is:\n\n  - Shutdown the virtual machine\n  - Take a snapshot for quick and easy recovery in the event something goes horribly wrong. I don't expect this to happen, but you can never be too careful.\n  - Boot the virtual machine\n  - Put GitHub Enterprise into maintenance mode by going to http(s)://[hostname]/setup/maintenance\n  - Perform the upgrade as per the procedure documented at https://enterprise.github.com/help/articles/upgrading-to-a-newer-release .  The end of this document details what information we would require in the event something goes wrong with the upgrade.\n  - Take GitHub Enterprise out of maintenance mode.\n\nThis whole process will take your appliance out of production, but it should only take in the region of 15-20 minutes.\n\n\n- If a diff times out, you can force a refresh for that repo by appending `_timeout=clear` to the end of the URL:\n\n`http(s)://[your-ghe-host]/[user]/[repo]?_timeout=clear`\n\nIf something times out, we cache that it timed out so that it does not keep being run repeatedly, thus putting unnecessary strain on the server. However, if this timeout originally occurred during a busy period on the server, extra load might have caused it to time out and an additional attempt may work.\n\n\n  \nConfiguration Changes\n---------------------\n\n- [NET] The IP address information can only be changed from the VM's console screen or via DHCP.\n\n\n\nFAQ\n---\n\n* How can I debug or check why hooks have failed or not fired?\n\nYou can view detailed information about service hook payloads, server responses, and lots of other useful information in the repository staff tools section for a repository. To get there, you will need to be an admin of the repository whose service hooks you'd like to debug and navigate to http(s)://[hostname]/stafftools/[account]/[repository]/hooks. From there, you'll find a link to view the latest delivery.\n\nOnce you're looking at the latest delivery, you'll see some links on the top of the page that will allow you to view the same debug information for other deliveries.\n\n\n* Who or what is the \"ghost\" user and \"github-enterprise\" organisation and why do they exist?\n\nThe \"ghost\" user is an internal system-only account that is required for the correct operation of certain functions of GitHub Enterprise.  For example, if you delete a normal user, their comments etc are assigned to the \"ghost\" user so they are not completely lost.\n\nThis user is hidden from browse views and does not count towards your license seat count.\n\nThe \"github-enterprise\" organisation is an internal system-only organisation that is used to house the OAuth applications for some internal trusted applications, for example Gist and GitHub for Mac or Windows. More of our services are being rolled out as separate applications that use OAuth. For these trusted, GitHub owned/maintained applications that provide core functionality, we have special treatment for them, but they require an organisation on the appliance in order to \"own\" the OAuth applications.\n\n(3 Jan '14) At some point in the future we will be hiding this user and organisation so they are no longer visible or modifiable.\n\nPlease note: both the \"ghost\" user and the \"github-enterprise\" organisation must exist to ensure correct and proper operation of the GitHub Enterprise appliance. Do not delete or modify them.\n\nUntil then, you can ignore this user and organisation.\n\n\nUnsupported Hacks\n-----------------\n\n*Enable root SSH access*\nIf you use the GitHub license, root access is enabled by default. For others, they would need to boot into recovery mode and then edit root's authorized_keys file.\n\nBoot into Recovery Mode\n-----------------------\n\nTo boot into recovery mode, please go through the following steps:\n\n- Shutdown your VM and then power it back on. Inside the hypervisor console for the VM, hold shift down while it boots. This will take you to the GRUB menu (you only get a brief window of opportunity to do this - it may take a few attempts)\n- In the GRUB menu, choose to boot into recovery mode.\n- On the following screen, choose the \"remount\" option and then press return again\n- After that, choose the \"netroot\" option. This will drop you at a root prompt. You are now in recovery mode as the root user.\n\n[ Do whatever you need to as root here ]\n\n- Type CTRL+D, or exit to leave the root shell.\n- Then select the 'resume' option on the next screen, to continue a normal boot.\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":6},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lildude/Documents/GHE/TipsnTricksnFAQ.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"38454e2d9f2a7dfc4ef5a614f8c2a1aa782da76c","deserializer":"TextBuffer"},{"text":"# Git Tips & Tricks\n\n- Find a tag/release that contains a particular commit: `git tag --contains [SHA]`\n\n- Find a commit that intro'd a string: `git log -G \"regex to search for\" --source --all`\n","markers":{"markers":{"1":{"id":1,"range":[[4,88],[4,88]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":18,"goalBufferRange":null,"skipAtomicTokens":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,1]],"oldText":"","newText":"G","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,1],[0,1]],"newRange":[[0,1],[0,2]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,2],[0,2]],"newRange":[[0,2],[0,3]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,3],[0,3]],"newRange":[[0,3],[0,4]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,4],[0,4]],"newRange":[[0,4],[0,5]],"oldText":"","newText":"T","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,5],[0,5]],"newRange":[[0,5],[0,6]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,6],[0,6]],"newRange":[[0,6],[0,7]],"oldText":"","newText":"p","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,7],[0,7]],"newRange":[[0,7],[0,8]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,8],[0,8]],"newRange":[[0,8],[0,9]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,9],[0,9]],"newRange":[[0,9],[0,10]],"oldText":"","newText":"&","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,10],[0,10]],"newRange":[[0,10],[0,11]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,11],[0,11]],"newRange":[[0,11],[0,12]],"oldText":"","newText":"T","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,12],[0,12]],"newRange":[[0,12],[0,13]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,13],[0,13]],"newRange":[[0,13],[0,14]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,14],[0,14]],"newRange":[[0,14],[0,15]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,15],[0,15]],"newRange":[[0,15],[0,16]],"oldText":"","newText":"k","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,16],[0,16]],"newRange":[[0,16],[0,17]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,17],[0,17]],"newRange":[[0,17],[1,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[1,0],[1,0]],"newRange":[[1,0],[1,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,1]],"oldText":"","newText":"$","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[0,1],[0,1]]},"newParams":{"reversed":true,"range":[[0,0],[0,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[0,0],[0,1]],"newRange":[[0,0],[0,0]],"oldText":"$","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,1]],"oldText":"","newText":"#","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[0,1],[0,1]],"newRange":[[0,1],[0,2]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,19],[0,19]],"newRange":[[0,19],[1,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[1,0],[1,0]],"newRange":[[1,0],[1,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[1,0],[1,0]],"newRange":[[1,0],[2,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[2,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[2,1]],"oldText":"","newText":"-","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,1],[2,1]],"newRange":[[2,1],[2,2]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,2],[2,2]],"newRange":[[2,2],[2,3]],"oldText":"","newText":"F","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,3],[2,3]],"newRange":[[2,3],[2,4]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,4],[2,4]],"newRange":[[2,4],[2,5]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,5],[2,5]],"newRange":[[2,5],[2,6]],"oldText":"","newText":"d","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,6],[2,6]],"newRange":[[2,6],[2,7]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,7],[2,7]],"newRange":[[2,7],[2,8]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,8],[2,8]],"newRange":[[2,8],[2,9]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,9],[2,9]],"newRange":[[2,9],[2,10]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,10],[2,10]],"newRange":[[2,10],[2,11]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,11],[2,11]],"newRange":[[2,11],[2,12]],"oldText":"","newText":"g","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,12],[2,12]],"newRange":[[2,12],[2,13]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,13],[2,13]],"newRange":[[2,13],[2,14]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,14],[2,14]],"newRange":[[2,14],[2,15]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,15],[2,15]],"newRange":[[2,15],[2,16]],"oldText":"","newText":"l","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,16],[2,16]],"newRange":[[2,16],[2,17]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,17],[2,17]],"newRange":[[2,17],[2,18]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,18],[2,18]],"newRange":[[2,18],[2,19]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,19],[2,19]],"newRange":[[2,19],[2,20]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,20],[2,20]],"newRange":[[2,20],[2,21]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,21],[2,21]],"newRange":[[2,21],[2,22]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,22],[2,22]],"newRange":[[2,22],[2,23]],"oldText":"","newText":"h","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,23],[2,23]],"newRange":[[2,23],[2,24]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,24],[2,24]],"newRange":[[2,24],[2,25]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,25],[2,25]],"newRange":[[2,25],[2,26]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,26],[2,26]],"newRange":[[2,26],[2,27]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,27],[2,27]],"newRange":[[2,27],[2,28]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,28],[2,28]],"newRange":[[2,28],[2,29]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,29],[2,29]],"newRange":[[2,29],[2,30]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,30],[2,30]],"newRange":[[2,30],[2,31]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,31],[2,31]],"newRange":[[2,31],[2,32]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,32],[2,32]],"newRange":[[2,32],[2,33]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,33],[2,33]],"newRange":[[2,33],[2,34]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,34],[2,34]],"newRange":[[2,34],[2,35]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,35],[2,35]],"newRange":[[2,35],[2,36]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[2,36],[2,36]]},"newParams":{"range":[[2,35],[2,36]]},"deserializer":"MarkerPatch"},{"oldRange":[[2,35],[2,36]],"newRange":[[2,35],[2,35]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[2,35],[2,35]],"newRange":[[2,35],[2,36]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,36],[2,36]],"newRange":[[2,36],[2,37]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,37],[2,37]],"newRange":[[2,37],[2,38]],"oldText":"","newText":"p","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,38],[2,38]],"newRange":[[2,38],[2,39]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,39],[2,39]],"newRange":[[2,39],[2,40]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,40],[2,40]],"newRange":[[2,40],[2,41]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,41],[2,41]],"newRange":[[2,41],[2,42]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,42],[2,42]],"newRange":[[2,42],[2,43]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,43],[2,43]],"newRange":[[2,43],[2,44]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,44],[2,44]],"newRange":[[2,44],[2,45]],"oldText":"","newText":"l","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,45],[2,45]],"newRange":[[2,45],[2,46]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,46],[2,46]],"newRange":[[2,46],[2,47]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,47],[2,47]],"newRange":[[2,47],[2,48]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,48],[2,48]],"newRange":[[2,48],[2,49]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,49],[2,49]],"newRange":[[2,49],[2,50]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,50],[2,50]],"newRange":[[2,50],[2,51]],"oldText":"","newText":"m","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,51],[2,51]],"newRange":[[2,51],[2,52]],"oldText":"","newText":"m","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,52],[2,52]],"newRange":[[2,52],[2,53]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,53],[2,53]],"newRange":[[2,53],[2,54]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,54],[2,54]],"newRange":[[2,54],[2,55]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[2,55],[2,55]]},"newParams":{"range":[[2,54],[2,55]]},"deserializer":"MarkerPatch"},{"oldRange":[[2,54],[2,55]],"newRange":[[2,54],[2,54]],"oldText":"t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[2,54],[2,54]]},"newParams":{"range":[[2,53],[2,54]]},"deserializer":"MarkerPatch"},{"oldRange":[[2,53],[2,54]],"newRange":[[2,53],[2,53]],"oldText":"u","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[2,53],[2,53]],"newRange":[[2,53],[2,54]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[2,54],[2,54]],"newRange":[[2,54],[2,55]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,55],[2,55]],"newRange":[[2,55],[2,56]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,56],[2,56]],"newRange":[[2,56],[2,80]],"oldText":"","newText":"`git tag --contains SHA`","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,79],[2,79]],"newRange":[[2,79],[2,80]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,76],[2,76]],"newRange":[[2,76],[2,77]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[2,82],[2,82]],"newRange":[[2,82],[3,2]],"oldText":"","newText":"\n- ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[3,0],[3,2]]},"newParams":{"tailed":false,"range":[[3,0],[3,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[3,0],[3,2]],"newRange":[[3,0],[4,0]],"oldText":"- ","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"properties":{"type":"selection","editorId":18,"goalBufferRange":null},"range":[[3,0],[3,0]]},"newParams":{"properties":{"type":"selection","editorId":18,"goalBufferRange":null,"skipAtomicTokens":true},"range":[[4,0],[4,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[4,1]],"oldText":"","newText":"-","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,1],[4,1]],"newRange":[[4,1],[4,2]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,2],[4,2]],"newRange":[[4,2],[4,3]],"oldText":"","newText":"F","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,3],[4,3]],"newRange":[[4,3],[4,4]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,4],[4,4]],"newRange":[[4,4],[4,5]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,5],[4,5]],"newRange":[[4,5],[4,6]],"oldText":"","newText":"d","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,6],[4,6]],"newRange":[[4,6],[4,7]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,7],[4,7]],"newRange":[[4,7],[4,8]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,8],[4,8]],"newRange":[[4,8],[4,9]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,9],[4,9]],"newRange":[[4,9],[4,10]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,10],[4,10]],"newRange":[[4,10],[4,11]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,11],[4,11]],"newRange":[[4,11],[4,12]],"oldText":"","newText":"m","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,12],[4,12]],"newRange":[[4,12],[4,13]],"oldText":"","newText":"m","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,13],[4,13]],"newRange":[[4,13],[4,14]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,14],[4,14]],"newRange":[[4,14],[4,15]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,15],[4,15]],"newRange":[[4,15],[4,16]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,16],[4,16]],"newRange":[[4,16],[4,17]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,17],[4,17]],"newRange":[[4,17],[4,18]],"oldText":"","newText":"h","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,18],[4,18]],"newRange":[[4,18],[4,19]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,19],[4,19]],"newRange":[[4,19],[4,20]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,20],[4,20]],"newRange":[[4,20],[4,21]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,21],[4,21]],"newRange":[[4,21],[4,22]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,22],[4,22]],"newRange":[[4,22],[4,23]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,23],[4,23]],"newRange":[[4,23],[4,24]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,24],[4,24]],"newRange":[[4,24],[4,25]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,25],[4,25]],"newRange":[[4,25],[4,26]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,26],[4,26]],"newRange":[[4,26],[4,27]],"oldText":"","newText":"'","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,27],[4,27]],"newRange":[[4,27],[4,28]],"oldText":"","newText":"d","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,28],[4,28]],"newRange":[[4,28],[4,29]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,29],[4,29]],"newRange":[[4,29],[4,30]],"oldText":"","newText":"a","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,30],[4,30]],"newRange":[[4,30],[4,31]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,31],[4,31]],"newRange":[[4,31],[4,32]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,32],[4,32]],"newRange":[[4,32],[4,33]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,33],[4,33]],"newRange":[[4,33],[4,34]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,34],[4,34]],"newRange":[[4,34],[4,35]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,35],[4,35]],"newRange":[[4,35],[4,36]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,36],[4,36]],"newRange":[[4,36],[4,37]],"oldText":"","newText":"g","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,37],[4,37]],"newRange":[[4,37],[4,38]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,38],[4,38]],"newRange":[[4,38],[4,39]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,39],[4,39]],"newRange":[[4,39],[4,41]],"oldText":"","newText":"``","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[4,41],[4,41]]},"newParams":{"range":[[4,40],[4,40]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,40],[4,40]],"newRange":[[4,40],[4,87]],"oldText":"","newText":"git log -G \"regex to search for\" --source --all","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,88],[4,88]],"newRange":[[4,88],[4,89]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,89],[4,89]],"newRange":[[4,89],[4,90]],"oldText":"","newText":"w","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,90],[4,90]],"newRange":[[4,90],[4,91]],"oldText":"","newText":"q","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[4,91],[4,91]],"newRange":[[4,91],[4,92]],"oldText":"","newText":"!","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[4,92],[4,92]]},"newParams":{"range":[[4,91],[4,92]]},"deserializer":"MarkerPatch"},{"oldRange":[[4,91],[4,92]],"newRange":[[4,91],[4,91]],"oldText":"!","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[4,91],[4,91]]},"newParams":{"range":[[4,90],[4,91]]},"deserializer":"MarkerPatch"},{"oldRange":[[4,90],[4,91]],"newRange":[[4,90],[4,90]],"oldText":"q","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[4,90],[4,90]]},"newParams":{"range":[[4,89],[4,90]]},"deserializer":"MarkerPatch"},{"oldRange":[[4,89],[4,90]],"newRange":[[4,89],[4,89]],"oldText":"w","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[4,89],[4,89]]},"newParams":{"range":[[4,88],[4,89]]},"deserializer":"MarkerPatch"},{"oldRange":[[4,88],[4,89]],"newRange":[[4,88],[4,88]],"oldText":":","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lildude/Documents/GHE/git-tricks.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a6b19623bfff7bdf55f459220c0b19ecb845156f","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":6,"softTabs":true,"displayBuffer":{"id":7,"softWrapped":false,"editorWidthInChars":null,"scrollTop":1131,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Documents/GHE/TipsnTricksnFAQ.md","invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":10,"softTabs":true,"displayBuffer":{"id":11,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Documents/GHE/git-errors.md","invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":18,"softTabs":true,"displayBuffer":{"id":19,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Documents/GHE/git-tricks.md","invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"Â¬","space":"Â·","tab":"Â»","cr":"Â¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/lildude/Documents/GHE/git-tricks.md","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-hyperlink","language-todo"],"deserializer":"Workspace"},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"metrics":{"sessionLength":5574111},"fuzzy-finder":{"/Users/lildude/Documents/GHE/TipsnTricksnFAQ.md":1423222553112,"/Users/lildude/Documents/GHE/git-errors.md":1423222562997,"/Users/lildude/Documents/GHE/git-tricks.md":1423222575331},"keybinding-resolver":{},"tree-view":{"directoryExpansionStates":{"Ticket Notes":{}},"selectedPath":"/Users/lildude/Documents/GHE/git-tricks.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["empty","corrupt"],"replaceHistory":[],"pathsHistory":[]}}}