{"mode":"editor","version":1,"windowDimensions":{"x":2,"y":23,"width":1267,"height":829,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lildude/Downloads/memory-bar.widget","buffers":[{"text":"command: \"memory_pressure && sysctl -a | grep memsize\"\n\nrefreshFrequency: 2000\n\nstyle: \"\"\"\n  // Change bar height\n  bar-height = 6px\n\n  // Align contents left or right\n  widget-align = left\n\n  // Position this where you want\n  top 10px\n  left 10px\n\n  // Statistics text settings\n  color #fff\n  font-family Helvetica Neue\n  background rgba(#000, .5)\n  padding 10px 10px 15px\n  border-radius 5px\n\n  .container\n    width: 300px\n    text-align: widget-align\n    position: relative\n    clear: both\n\n  .widget-title\n    text-align: widget-align\n\n  .stats-container\n    margin-bottom 5px\n    border-collapse collapse\n\n  td\n    font-size: 14px\n    font-weight: 300\n    color: rgba(#fff, .9)\n    text-shadow: 0 1px 0px rgba(#000, .7)\n    text-align: widget-align\n\n  .widget-title\n    font-size 10px\n    text-transform uppercase\n    font-weight bold\n\n  .label\n    font-size 8px\n    text-transform uppercase\n    font-weight bold\n\n  .bar-container\n    width: 100%\n    height: bar-height\n    border-radius: bar-height\n    float: widget-align\n    clear: both\n    background: rgba(#fff, .5)\n    position: absolute\n    margin-bottom: 5px\n\n  .bar\n    height: bar-height\n    float: widget-align\n    transition: width .2s ease-in-out\n\n  .bar:first-child\n    if widget-align == left\n      border-radius: bar-height 0 0 bar-height\n    else\n      border-radius: 0 bar-height bar-height 0\n\n  .bar:last-child\n    if widget-align == right\n      border-radius: bar-height 0 0 bar-height\n    else\n      border-radius: 0 bar-height bar-height 0\n\n  .bar-inactive\n    background: rgba(#0bf, .5)\n\n  .bar-active\n    background: rgba(#fc0, .5)\n\n  .bar-wired\n    background: rgba(#c00, .5)\n\"\"\"\n\n\nrender: -> \"\"\"\n  <div class=\"container\">\n    <div class=\"widget-title\">Memory</div>\n    <table class=\"stats-container\" width=\"100%\">\n      <tr>\n        <td class=\"stat\"><span class=\"wired\"></span></td>\n        <td class=\"stat\"><span class=\"active\"></span></td>\n        <td class=\"stat\"><span class=\"inactive\"></span></td>\n        <td class=\"stat\"><span class=\"free\"></span></td>\n        <td class=\"stat\"><span class=\"total\"></span></td>\n      </tr>\n      <tr>\n        <td class=\"label\">wired</td>\n        <td class=\"label\">active</td>\n        <td class=\"label\">inactive</td>\n        <td class=\"label\">free</td>\n        <td class=\"label\">total</td>\n      </tr>\n    </table>\n    <div class=\"bar-container\">\n      <div class=\"bar bar-wired\"></div>\n      <div class=\"bar bar-active\"></div>\n      <div class=\"bar bar-inactive\"></div>\n    </div>\n  </div>\n\"\"\"\n\nupdate: (output, domEl) ->\n\n  usage = (pages) ->\n    mb = (pages * 4096) / 1024 / 1024\n    usageFormat mb\n\n  usageFormat = (mb) ->\n    if mb > 1024\n      gb = mb / 1024\n      \"#{parseFloat(gb.toFixed(2))}GB\"\n    else\n      \"#{parseFloat(mb.toFixed())}MB\"\n\n  updateStat = (sel, usedPages, totalBytes) ->\n    usedBytes = usedPages * 4096\n    percent = (usedBytes / totalBytes * 100).toFixed(1) + \"%\"\n    $(domEl).find(\".#{sel}\").text usage(usedPages)\n    $(domEl).find(\".bar-#{sel}\").css \"width\", percent\n\n  lines = output.split \"\\n\"\n\n  freePages = lines[3].split(\": \")[1]\n  inactivePages = lines[13].split(\": \")[1]\n  activePages = lines[12].split(\": \")[1]\n  wiredPages = lines[16].split(\": \")[1]\n\n  totalBytes = lines[28].split(\" = \")[1]\n  $(domEl).find(\".total\").text usageFormat(totalBytes / 1024 / 1024)\n\n  updateStat 'free', freePages, totalBytes\n  updateStat 'active', activePages, totalBytes\n  updateStat 'inactive', inactivePages, totalBytes\n  updateStat 'wired', wiredPages, totalBytes\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/Downloads/memory-bar.widget/index.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"165acc3f9d1418dbff83b4b75f814d5a04398484","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/memory-bar.widget/index.coffee","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/lildude/Downloads/memory-bar.widget/index.coffee","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":4953},"fuzzy-finder":{"/Users/lildude/Downloads/memory-bar.widget/index.coffee":1414578885808},"keybinding-resolver":{"attached":false},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/lildude/Downloads/memory-bar.widget/index.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}