{"mode":"editor","version":1,"windowDimensions":{"x":34,"y":22,"width":1380,"height":829,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lildude/.zprezto","buffers":[{"text":"#\n# Executes commands at login pre-zshrc.\n#\n# Authors:\n#   Sorin Ionescu <sorin.ionescu@gmail.com>\n#\n\n#\n# Browser\n#\n\nif [[ \"$OSTYPE\" == darwin* ]]; then\n  export BROWSER='open'\nfi\n\n#\n# Editors\n#\n\nexport EDITOR='vim'\nexport VISUAL='vim'\nexport PAGER='less'\n\n#\n# Language\n#\n\nif [[ -z \"$LANG\" ]]; then\n  export LANG='en_US.UTF-8'\nfi\n\n#\n# Paths\n#\n\n# Ensure path arrays do not contain duplicates.\ntypeset -gU cdpath fpath mailpath path\n\n# Set the the list of directories that cd searches.\n# cdpath=(\n#   $cdpath\n# )\n\n# Set the list of directories that Zsh searches for programs.\npath=(\n  /{bin,sbin}\n  /usr/{bin,sbin}\n  /usr/local/{bin,sbin}\n  $path\n)\n\n#\n# Less\n#\n\n# Set the default Less options.\n# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).\n# Remove -X and -F (exit if the content fits on one screen) to enable it.\nexport LESS='-F -g -i -M -R -w -X -z-4'\n\n# Set the Less input preprocessor.\nif (( $+commands[lesspipe.sh] )); then\n  export LESSOPEN='| /usr/bin/env lesspipe.sh %s 2>&-'\nfi\n\n# Ack\nexport ACK_PAGER=less\n\n#\n# Temporary Files\n#\n\nif [[ ! -d \"$TMPDIR\" ]]; then\n  export TMPDIR=\"/tmp/$USER\"\n  mkdir -p -m 700 \"$TMPDIR\"\nfi\n\nTMPPREFIX=\"${TMPDIR%/}/zsh\"\nif [[ ! -d \"$TMPPREFIX\" ]]; then\n  mkdir -p \"$TMPPREFIX\"\nfi\n\n# Boxen\nif [[ `hostname` == \"Colins-MacBook-Pro.local\" ]]; then\n  source /opt/boxen/env.sh\nfi\n","markers":{"markers":{"1":{"id":1,"range":[[46,16],[46,16]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":20,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"5":{"id":5,"range":[[45,2],[46,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[45,3],[45,12]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"17":{"id":17,"range":[[46,7],[46,16]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/.zprezto/runcoms/zprofile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"37876fe1c9cdc852b8995bcc847f7f5b3f0093d9","deserializer":"TextBuffer"},{"text":"Git\n===\n\nEnhances the [Git][1] distributed version control system by providing aliases,\nfunctions and by exposing repository status information to prompts.\n\nGit **1.7.2** is the [minimum required version][7].\n\nSettings\n--------\n\n### Log\n\nThe format of the [git-log][8] output is configurable via the following style,\nwhere context is *brief*, *oneline*, and *medium*, which will be passed to the\n`--pretty=format:` switch.\n\n    zstyle ':prezto:module:git:log:context' format ''\n\n### Status\n\nRetrieving the status of a repository with submodules can take a long time.\nSubmodules may be ignored when they are *dirty*, *untracked*, *all*, or *none*.\n\n    zstyle ':prezto:module:git:status:ignore' submodules 'all'\n\nThis setting affects all aliases and functions that call `git-status`.\n\nAliases\n-------\n\n### Git\n\n  - `g` is short for `git`.\n\n### Branch\n\n  - `gb` lists, creates, renames, and deletes branches.\n  - `gbc` creates a new branch.\n  - `gbl` lists branches and their commits.\n  - `gbL` lists local and remote branches and their commits.\n  - `gbs` lists branches and their commits with ancestry graphs.\n  - `gbS` lists local and remote branches and their commits with ancestry\n    graphs.\n  - `gbx` deletes a branch.\n  - `gbX` deletes a branch irrespective of its merged status.\n  - `gbm` renames a branch.\n  - `gbM` renames a branch even if the new branch name already exists.\n\n\n### Commit\n\n  - `gc` records changes to the repository.\n  - `gca` stages all modified and deleted files.\n  - `gcm` records changes to the repository with the given message.\n  - `gco` checks out a branch or paths to work tree.\n  - `gcO` checks out hunks from the index or the tree interactively.\n  - `gcf` amends the tip of the current branch using the same log message as\n    *HEAD*.\n  - `gcF` amends the tip of the current branch.\n  - `gcp` applies changes introduced by existing commits.\n  - `gcP` applies changes introduced by existing commits without committing.\n  - `gcr` reverts existing commits by reverting patches and recording new\n     commits.\n  - `gcR` removes the *HEAD* commit.\n  - `gcs` displays various types of objects.\n  - `gcl` lists lost commits.\n\n### Conflict\n\n  - `gCl` lists unmerged files.\n  - `gCa` adds unmerged file contents to the index.\n  - `gCe` executes merge-tool on all unmerged file.\n  - `gCo` checks out our changes for unmerged paths.\n  - `gCO` checks out our changes for all unmerged paths.\n  - `gCt` checks out their changes for unmerged paths.\n  - `gCT` checks out their changes for all unmerged paths.\n\n### Data\n\n  - `gd` displays information about files in the index and the work tree.\n  - `gdc` lists cached files.\n  - `gdx` lists deleted files.\n  - `gdm` lists modified files.\n  - `gdu` lists untracked files.\n  - `gdk` lists killed files.\n  - `gdi` lists ignored files.\n\n### Fetch\n\n  - `gf` downloads objects and references from another repository.\n  - `gfc` clones a repository into a new directory.\n  - `gfm` fetches from and merges with another repository or local branch.\n  - `gfr` fetches from and rebases on another repository or local branch.\n\n### Grep\n\n  - `gg` displays lines matching a pattern.\n  - `ggi` displays lines matching a pattern ignoring case.\n  - `ggl` lists files matching a pattern.\n  - `ggL` lists files that are not matching a pattern.\n  - `ggv` displays lines not matching a pattern.\n  - `ggw` displays lines matching a pattern at word boundary.\n\n### Index\n\n  - `gia` adds file contents to the index.\n  - `giA` adds file contents to the index interactively.\n  - `giu` adds file contents to the index (updates only known files).\n  - `gid` displays changes between the index and a named commit (diff).\n  - `giD` displays changes between the index and a named commit (word diff).\n  - `gir` resets the current HEAD to the specified state.\n  - `giR` resets the current index interactively.\n  - `gix` removes files/directories from the index (recursively).\n  - `giX` removes files/directories from the index (recursively and forced).\n\n### Log\n\n  - `gl` displays the log.\n  - `gls` displays the stats log.\n  - `gld` displays the diff log.\n  - `glo` displays the one line log.\n  - `glg` displays the graph log.\n  - `glb` displays the brief commit log.\n  - `glc` displays the commit count for each contributor in descending order.\n\n### Merge\n\n  - `gm` joins two or more development histories together.\n  - `gmC` joins two or more development histories together but does not commit.\n  - `gmF` joins two or more development histories together but does not commit\n     generating a merge commit even if the merge resolved as a fast-forward.\n  - `gma` aborts the conflict resolution, and reconstructs the pre-merge state.\n  - `gmt` runs the merge conflict resolution tools to resolve conflicts.\n\n### Push\n\n  - `gp` updates remote refs along with associated objects.\n  - `gpf` forcefully updates remote refs along with associated objects.\n  - `gpa` updates remote branches along with associated objects.\n  - `gpA` updates remote branches and tags along with associated objects.\n  - `gpt` updates remote tags along with associated objects.\n  - `gpc` updates remote refs along with associated objects and adds *origin*\n     as an upstream reference for the current branch.\n  - `gpp` pulls and pushes from origin to origin.\n\n### Rebase\n\n  - `gr` forward-ports local commits to the updated upstream head.\n  - `gra` aborts the rebase.\n  - `grc` continues the rebase after merge conflicts are resolved.\n  - `gri` makes a list of commits to be rebased and opens the editor.\n  - `grs` skips the current patch.\n\n### Remote\n\n  - `gR` manages tracked repositories.\n  - `gRl` lists remote names and their URLs.\n  - `gRa` adds a new remote.\n  - `gRx` removes a remote.\n  - `gRm` renames a remote.\n  - `gRu` fetches remotes updates.\n  - `gRp` prunes all stale remote tracking branches.\n  - `gRs` displays information about a given remote.\n  - `gRb` opens a remote on [GitHub][3] in the default browser.\n\n### Stash\n\n  - `gs` stashes the changes of the dirty working directory.\n  - `gsa` applies the changes recorded in a stash to the working directory.\n  - `gsx` drops a stashed state.\n  - `gsX` drops all the stashed states.\n  - `gsl` lists stashed states.\n  - `gsL` lists dropped stashed states.\n  - `gsd` displays changes between the stash and its original parent.\n  - `gsp` removes and applies a single stashed state from the stash list.\n  - `gsr` recovers a given stashed state.\n  - `gss` stashes the changes of the dirty working directory, including untracked.\n  - `gsS` stashes the changes of the dirty working directory interactively.\n  - `gsw` stashes the changes of the dirty working directory retaining the index.\n\n### Submodule\n\n  - `gS` initializes, updates, or inspects submodules.\n  - `gSa` adds given a repository as a submodule.\n  - `gSf` evaluates a shell command in each of checked out submodules.\n  - `gSi` initializes submodules.\n  - `gSI` initializes and clones submodules recursively.\n  - `gSl` lists the commits of all submodules.\n  - `gSm` moves a submodule.\n  - `gSs` synchronizes submodules' remote URL to the value specified in\n    .gitmodules.\n  - `gSu` fetches and merges the latest changes for all submodule.\n  - `gSx` removes a submodule.\n\n### Working directory\n\n  - `gws` displays working-tree status in the short format.\n  - `gwS` displays working-tree status.\n  - `gwd` displays changes between the working tree and the index (diff).\n  - `gwD` displays changes between the working tree and the index (word diff).\n  - `gwr` resets the current HEAD to the specified state, does not touch the\n     index nor the working tree.\n  - `gwR` resets the current HEAD, index and working tree to the specified state.\n  - `gwc` removes untracked files from the working tree (dry-run).\n  - `gwC` removes untracked files from the working tree.\n  - `gwx` removes files from the working tree and from the index recursively.\n  - `gwX` removes files from the working tree and from the index recursively and\n    forcefully.\n\n### Shadows\n\nThe following aliases may shadow system commands:\n\n  - `gpt` shadows the [GUID partition table maintenance utility][4].\n  - `gs` shadows the [Ghostscript][5].\n\nIf you frequently use the above commands, you may wish to remove said aliases\nfrom this module or to disable them at the bottom of the zshrc with `unalias`.\n\nYou can temporarily bypass an alias by prefixing it with a backward slash:\n`\\gpt`.\n\nFunctions\n---------\n\n  - `git-branch-current` displays the current branch.\n  - `git-commit-lost` lists lost commits.\n  - `git-dir` displays the path to the Git directory.\n  - `git-hub-browse` opens the [GitHub][3] repository in the default browser.\n  - `git-hub-shorten-url` shortens GitHub URLs.\n  - `git-info` exposes repository information via the `$git_info` associative\n    array.\n  - `git-root` displays the path to the working tree root.\n  - `git-stash-clear-interactive` asks for confirmation before clearing the stash.\n  - `git-stash-dropped` lists dropped stashed states.\n  - `git-stash-recover` recovers given dropped stashed states.\n  - `git-submodule-move` moves a submodule.\n  - `git-submodule-remove` removes a submodule.\n\nTheming\n-------\n\nTo display information about the current repository in a prompt, define the\nfollowing styles in the `prompt_name_setup` function, where the syntax for\nsetting a style is as follows.\n\n    zstyle ':prezto:module:git:info:context:subcontext' format 'string'\n\n### Main Contexts\n\n| Name      | Format Code | Description\n| --------- | :---------: | ---------------------------------------------------\n| action    |     %s      | Special action name\n| ahead     |     %A      | Commits ahead of remote count\n| behind    |     %B      | Commits behind of remote count\n| branch    |     %b      | Branch name\n| commit    |     %c      | Commit hash\n| position  |     %p      | Commits from the nearest tag count\n| remote    |     %R      | Remote name\n| stashed   |     %S      | Stashed states count\n\n### Concise Contexts\n\n| Name      | Format Code | Description\n| --------- | :---------: | ---------------------------------------------------\n| clean     |     %C      | Clean state\n| dirty     |     %D      | Dirty files count\n| indexed   |     %i      | Indexed files count\n| unindexed |     %I      | Unindexed files count\n| untracked |     %u      | Untracked files count\n\nThe following contexts must be enabled with the following zstyle:\n\n    zstyle ':prezto:module:git:info' verbose 'yes'\n\n### Verbose Contexts\n\n| Name      | Format Code | Description\n| --------- | :---------: | ---------------------------------------------------\n| added     |     %a      | Added files count\n| clean     |     %C      | Clean state\n| deleted   |     %d      | Deleted files count\n| dirty     |     %D      | Dirty files count\n| modified  |     %m      | Modified files count\n| renamed   |     %r      | Renamed files count\n| unmerged  |     %U      | Unmerged files count\n| untracked |     %u      | Untracked files count\n\n### Special Action Contexts\n\n| Name                 |   Format    | Description\n| -------------------- | :---------: | -----------------------------------------\n| apply                |    value    | Applying patches\n| bisect               |    value    | Binary searching for changes\n| cherry-pick          |    value    | Cherry picking\n| cherry-pick-sequence |    value    | Cherry picking sequence\n| merge                |    value    | Merging\n| rebase               |    value    | Rebasing\n| rebase-interactive   |    value    | Rebasing interactively\n| rebase-merge         |    value    | Rebasing merge\n\nFirst, format the repository state attributes. For example, to format the branch\nand remote names, define the following styles.\n\n    zstyle ':prezto:module:git:info:branch' format 'branch:%b'\n    zstyle ':prezto:module:git:info:remote' format 'remote:%R'\n\nSecond, format how the above attributes are displayed in prompts.\n\n    zstyle ':prezto:module:git:info:keys' format \\\n      'prompt'  ' git(%b)' \\\n      'rprompt' '[%R]'\n\nLast, add `$git_info[prompt]` to `$PROMPT` and `$git_info[rprompt]` to\n`$RPROMPT` respectively and call `git-info` in the `prompt_name_preexec` hook\nfunction.\n\nAuthors\n-------\n\n*The authors of this module should be contacted via the [issue tracker][6].*\n\n  - [Sorin Ionescu](https://github.com/sorin-ionescu)\n  - [Colin Hebert](https://github.com/ColinHebert)\n\n[1]: http://www.git-scm.com\n[2]: https://github.com/defunkt/hub\n[3]: https://www.github.com\n[4]: http://www.manpagez.com/man/8/gpt/\n[5]: http://linux.die.net/man/1/gs\n[6]: https://github.com/sorin-ionescu/prezto/issues\n[7]: https://github.com/sorin-ionescu/prezto/issues/219\n[8]: http://www.kernel.org/pub/software/scm/git/docs/git-log.html\n\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":84},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/.zprezto/modules/git/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f2216d551cf43176578f6566c0dfe97d87659097","deserializer":"TextBuffer"},{"text":"Completion\n==========\n\nLoads and configures tab completion and provides additional completions from\nthe [zsh-completions][1] project.\n\nThis module must be loaded **after** the *utility* module.\n\nContributors\n------------\n\nCompletions should be submitted to the [zsh-completions][1] project according\nto its rules and regulations. This module will be synchronized against it.\n\nAuthors\n-------\n\n*The authors of this module should be contacted via the [issue tracker][2].*\n\n  - [Sorin Ionescu](https://github.com/sorin-ionescu)\n\n[1]: https://github.com/zsh-users/zsh-completions\n[2]: https://github.com/sorin-ionescu/prezto/issues\n\n","markers":{"markers":{"1":{"id":1,"range":[[24,0],[24,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":125,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/.zprezto/modules/completion/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ae1599439c64a45b7bad072d84c39a5fd3a867fd","deserializer":"TextBuffer"},{"text":"#\n# Executes commands at the start of an interactive session.\n#\n# Authors:\n#   Sorin Ionescu <sorin.ionescu@gmail.com>\n#\n\n# Source Prezto.\nif [[ -s \"${ZDOTDIR:-$HOME}/.zprezto/init.zsh\" ]]; then\n  source \"${ZDOTDIR:-$HOME}/.zprezto/init.zsh\"\nfi\n\n# Customize to your needs...\n\n#### ---:[ Aliases ]:--- ###\nalias rm='nocorrect rm'\nalias l='ls -lh'\nalias ll='ls -lha'\nalias ..='cd ..'\nalias entssh='ssh -i ~/Box\\ Sync/Enterprise/Keys/id_ghenterprise -l admin'\nalias path='echo -e ${PATH//:/\\\\n}'\nalias more=\"less\"\nalias unzip=\"unzip -qq\"\nalias myprocs=\"ps aux | grep ${USER}\"\nalias nocmt=\"grep -v '^$\\|^\\s*\\#'\"\nalias vag=vagrant\nalias j=\"jekyll serve --watch\"\n\n\nzstyle ':completion:*:*:git:*' script ~/bin/git-completion.sh\n","markers":{"markers":{"1":{"id":1,"range":[[0,1],[0,1]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":140,"goalBufferRange":null},"deserializer":"Marker"},"8":{"id":8,"range":[[27,0],[29,61]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[28,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[28,58]],"oldText":"","newText":"zstyle ':completion:*:*:git:*' script ~/.git-completion.sh","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[28,41],[28,41]]},"newParams":{"reversed":true,"range":[[28,40],[28,41]]},"deserializer":"MarkerPatch"},{"oldRange":[[28,40],[28,41]],"newRange":[[28,40],[28,40]],"oldText":".","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,40],[28,40]],"newRange":[[28,40],[28,41]],"oldText":"","newText":"b","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,41],[28,41]],"newRange":[[28,41],[28,42]],"oldText":"","newText":"i","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,42],[28,42]],"newRange":[[28,42],[28,43]],"oldText":"","newText":"n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,43],[28,43]],"newRange":[[28,43],[28,44]],"oldText":"","newText":"/","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[28,61],[28,61]],"newRange":[[28,61],[29,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":true},"newParams":{"reversed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[27,0],[27,0]],"newRange":[[27,0],[28,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[28,0],[28,0]],"newRange":[[28,0],[28,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/.zprezto/runcoms/zshrc","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"763a446617a70cd5e07e5fa8ce95e4d1adeddb10","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":20,"softTabs":true,"displayBuffer":{"id":21,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/.zprezto/runcoms/zprofile","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":84,"softTabs":true,"displayBuffer":{"id":85,"softWrapped":false,"editorWidthInChars":null,"scrollTop":1778,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/.zprezto/modules/git/README.md","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":125,"softTabs":true,"displayBuffer":{"id":126,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/.zprezto/modules/completion/README.md","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":140,"softTabs":true,"displayBuffer":{"id":141,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/.zprezto/runcoms/zshrc","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lildude/.zprezto/runcoms/zshrc","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":12008705},"fuzzy-finder":{"/Users/lildude/.zprezto/runcoms/zprofile":1410789225137,"/Users/lildude/.zprezto/modules/git/README.md":1410789472904,"/Users/lildude/.zprezto/modules/completion/README.md":1410790450343,"/Users/lildude/.zprezto/runcoms/zshrc":1410790504386},"keybinding-resolver":{"attached":false},"tree-view":{"directoryExpansionStates":{"modules":{"completion":{"external":{}}},"runcoms":{}},"selectedPath":"/Users/lildude/.zprezto/runcoms/zshrc","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":49,"width":200}}}