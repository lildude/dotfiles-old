{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/lildude/github/enterprise2"],"buffers":[{"text":"#!/bin/bash\n\nset -e\n\nHOSTNAME=$1\nCA=$(cat)\n\necho \"$CA\" > /etc/openvpn/easy-rsa/keys/$HOSTNAME-ca.crt\n\ncd /etc/openvpn/easy-rsa/\nsource vars\nKEY_CN=$HOSTNAME\nrm -rf $HOSTNAME.key $HOSTNAME.csr $HOSTNAME.crt\n./pkitool --csr $HOSTNAME 2>&1\nchmod 400 /etc/openvpn/easy-rsa/keys/$HOSTNAME.key\ncat /etc/openvpn/easy-rsa/keys/$HOSTNAME.csr\n","markerStore":{"nextMarkerId":7,"markersById":{"0":{"range":{"start":{"row":15,"column":0},"end":{"row":15,"column":0}},"properties":{"type":"selection","editorId":196,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-generate-client-key","digestWhenLastPersisted":"70926823ba42c9a8606f6bf403154be3a8deb4f4","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"#!/bin/bash\n\nset -e\n\nwhile [ ! -f /etc/openvpn/easy-rsa/keys/dh2048.pem ]; do\n  sleep 1\ndone\n\ncd /etc/openvpn/easy-rsa/\nsource vars\n\nHOSTNAME=$1\nCSR=$(cat)\n\nif [ -f /etc/openvpn/easy-rsa/keys/$HOSTNAME.crt ]; then\n  ./revoke-full $HOSTNAME 2>&1 || true\n  rm -rf /etc/openvpn/easy-rsa/keys/$HOSTNAME.crt /etc/openvpn/easy-rsa/keys/$HOSTNAME.csr\nfi\n\necho \"$CSR\" > /etc/openvpn/easy-rsa/keys/$HOSTNAME.csr\n./pkitool --sign $HOSTNAME 2>&1\ncat /etc/openvpn/easy-rsa/keys/$HOSTNAME.crt\n","markerStore":{"nextMarkerId":36,"markersById":{"0":{"range":{"start":{"row":17,"column":0},"end":{"row":17,"column":0}},"properties":{"type":"selection","editorId":200,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-sign-client-key","digestWhenLastPersisted":"55e026bf693b42d425b52b249130d52c08512f88","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"#!/bin/bash\nset -e\n\nLOGFILE=/data/user/common/ghe-config.log\n\nlog_error() {\n  echo $1 | tee -a $LOGFILE >&2\n}\n\n[ \"`whoami`\" = \"root\" ] || {\n  exec sudo -u root \"$0\" \"$@\"\n  exit 1\n}\n\nfull=\"\"\nphase=\"\"\nif [ \"$1\" = \"--full\" ]; then\n  full=\"--full\"\nelif [ \"$1\" = \"--phase-1\" ]; then\n  phase=1\nelif [ \"$1\" = \"--phase-2\" ]; then\n  phase=2\nelif [ \"$1\" = \"--phase-3\" ]; then\n  phase=3\nfi\n\n# Rotate the log file before we continue\nlogrotate -f /etc/logrotate.d/ghe-config-apply\n\n# Save the version information to the beginning of the log file\necho \"Current version information:\" | tee -a $LOGFILE\ncat /etc/github/enterprise-release | tee -a $LOGFILE\n\nstatus ghe-storage 2>&1 >/dev/null || {\n  log_error \"Error: storage device is not attached\"\n  log_error \"Error: please run ghe-storage-init first\"\n  exit 1\n}\n\nif [ ! -f /data/user/common/enterprise.ghl ]; then\n  log_error \"Error: no license file found (/data/user/common/enterprise.ghl)\"\n  exit 1\nfi\n\nif [ ! -f /data/user/common/github.conf ]; then\n  echo \"Error: no settings file found (/data/user/common/github.conf)\" >&2\n\n  if [ -f /data/user/common/dna.json ]; then\n    echo \"To convert your existing configuration (/data/user/common/dna.json) run ghe-config-update first.\" >&2\n  fi\n\n  exit 1\nfi\n\nif [ -z $(ghe-config core.github-hostname) ]; then\n  log_error \"Error: initial configuration not completed\"\n  exit 1\nfi\n\nif [ -f /etc/github/enterprise-release ]; then\n  source /etc/github/enterprise-release\n  ghe-config core.package-version \"$RELEASE_VERSION\"\nfi\n\nmkdir -p /var/log/ghe-configuration\nrm -f /var/log/ghe-configuration/enterprise*.log\n\nif [ -z \"$phase\" -o \"$phase\" = 1 ]; then\n  bash -c \"ghe-config-check /data/user/common/github.conf json 2>&1 | tee -a /var/log/ghe-configuration/ghe-config-check.debug.log || true\" &\n  check_pid=$!\nfi\n\ntrap \"rm -f /var/run/ghe-config.pid\" EXIT\nset -o pipefail\nexport GHE_CONFIG_PHASE=$phase\nlockrun --lockfile=/var/run/ghe-config.pid -- bash -c \"/usr/local/share/enterprise/update-system-config $full\" 2>&1 | ts | tee -a $LOGFILE || {\n  echo \"Error: settings failed to apply, outputting last 20 lines of $LOGFILE:\" >&2\n  tail -n20 $LOGFILE >&2\n  touch /var/log/ghe-configuration/enterprise_exception.log\n  exit 1\n}\n\n# Recreate /data/github/current/public/maintenance.html in case the smtp.support-address has changed\n/data/github/current/bin/maintenance\n\nchown git:git /data/user/common/* /data/*/shared/env.d\nchown babeld:babeld /data/user/common/ssh_host*\n\nchmod 0700 /data/*/shared/env.d /data/user/*\nchmod 0755 /data/user/common\nchmod 0600 /data/user/common/*\nchmod 0644 /data/user/version\n\nif [ -z \"$phase\" -o \"$phase\" = 3 ]; then\n  echo \"$(md5sum /data/user/common/github.conf)\" >/etc/github/configured\nfi\n\nif [ -z \"$phase\" -o \"$phase\" = 1 ]; then\n  if [ -n \"$check_pid\" ]; then\n    pkill -P $check_pid \"\" 2>/dev/null || true\n    kill $check_pid 2>/dev/null || true\n  fi\nfi\n","markerStore":{"nextMarkerId":29,"markersById":{"0":{"range":{"start":{"row":48,"column":0},"end":{"row":48,"column":0}},"properties":{"type":"selection","editorId":218,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/enterprise2/vm_files/usr/local/bin/ghe-config-apply","digestWhenLastPersisted":"328ee13096376997abf61aed65715202c78ba5eb","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<div class=\"saml-note\">\n\n  <label class=\"checkbox-item whole\">\n      <input type=\"hidden\" name=\"saml[idp_initiated_sso]\" value=\"false\" />\n      <input type=\"checkbox\" name=\"saml[idp_initiated_sso]\" <%= view.saml_idp_initiated_sso_checked? %> value=\"true\" />\n    idP initiated SSO <span class=\"muted\">(disables AuthnRequest)</span>\n  </label>\n\n  <label class=\"checkbox-item whole\">\n      <input type=\"hidden\" name=\"saml[disable_admin_demote]\" value=\"false\" />\n      <input type=\"checkbox\" name=\"saml[disable_admin_demote]\" <%= view.saml_disable_admin_demote_checked? %> value=\"true\" />\n    Disable administrator demotion/promotion. (ignore the administrator attribute)\n  </label>\n\n  <label class=\"label-heading\">\n    Single sign-on URL <span class=\"muted\">(Required full URL for signing into your system)</span>\n  </label>\n  <input type=\"text\" name=\"saml[sso_url]\" class=\"js-required\" value=\"<%= view.saml_sso_url %>\">\n\n  <label class=\"label-heading\">\n      Issuer <span class=\"muted\">(Response issuer will be checked against this value)</span>\n  </label>\n  <input type=\"text\" name=\"saml[issuer]\" value=\"<%= view.saml_issuer %>\" />\n\n  <label class=\"label-heading\">\n    Verification certificate <% if view.saml_configured? %>(replace existing)<% end %> <span class=\"muted\">(used to verify sign-in requests)</span>\n  </label>\n  <input type=\"file\" name=\"saml[certificate]\" class=\"<% unless view.saml_configured? %>js-required<% end %>\">\n\n</div>\n","markerStore":{"nextMarkerId":47,"markersById":{"0":{"range":{"start":{"row":25,"column":65},"end":{"row":25,"column":65}},"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":26,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[25,4],[25,4]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,4],[25,4]],"newRange":[[25,4],[25,61]],"oldText":"","newText":"<% if view.saml_configured? %>(replace existing)<% end %>"}},{"type":"group-end","snapshot":{"0":{"range":[[25,61],[25,61]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,34],[25,52]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,34],[25,52]],"newRange":[[25,34],[25,35]],"oldText":"(replace existing)","newText":"R"}},{"type":"change","content":{"oldRange":[[25,35],[25,35]],"newRange":[[25,35],[25,36]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[25,36],[25,36]],"newRange":[[25,36],[25,37]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[25,37],[25,37]],"newRange":[[25,37],[25,38]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[25,38],[25,38]],"newRange":[[25,38],[25,39]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[25,39],[25,39]],"newRange":[[25,39],[25,40]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[25,40],[25,40]],"newRange":[[25,40],[25,41]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[25,41],[25,41]],"newRange":[[25,41],[25,42]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"0":{"range":[[25,42],[25,42]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,52],[25,52]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,51],[25,52]],"newRange":[[25,51],[25,51]],"oldText":"V","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[25,51],[25,51]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,51],[25,51]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,51],[25,51]],"newRange":[[25,51],[25,52]],"oldText":"","newText":"v"}},{"type":"group-end","snapshot":{"0":{"range":[[25,52],[25,52]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,52],[25,52]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,51],[25,52]],"newRange":[[25,51],[25,51]],"oldText":"v","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[25,51],[25,51]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,51],[25,51]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,51],[25,51]],"newRange":[[25,51],[25,52]],"oldText":"","newText":"V"}},{"type":"group-end","snapshot":{"0":{"range":[[25,52],[25,52]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,76],[25,133]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,76],[25,133]],"newRange":[[25,76],[25,76]],"oldText":"<% if view.saml_configured? %>(replace existing)<% end %>","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[25,76],[25,76]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,76],[25,76]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,75],[25,76]],"newRange":[[25,75],[25,75]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[25,75],[25,75]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,76],[25,76]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,75],[25,76]],"newRange":[[25,75],[25,75]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[25,75],[25,75]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[25,65],[25,65]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[25,0],[25,0]],"newRange":[[25,0],[26,0]],"oldText":"","newText":"    Verification certificate <% if view.saml_configured? %>(replace existing)<% end %> <span class=\"muted\">(used to verify sign-in requests)</span>\n"}},{"type":"change","content":{"oldRange":[[26,0],[27,0]],"newRange":[[26,0],[26,0]],"oldText":"    <% if view.saml_configured? %>Replace <% end %>Verification certificate<span class=\"muted\">(used to verify sign-in requests)</span>\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[26,0],[26,0]],"properties":{"type":"selection","editorId":262,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/_authentication_saml.erb","digestWhenLastPersisted":"7a9d46e4f1d96c9046fffbdd4ec119387f5f2a1f","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<% view = Manage::ViewModels::Privacy.new(@settings) %>\n\n<div class=\"page-section\" id=\"privacy\">\n\n  <h2>Privacy</h2>\n\n  <div class=\"subsection\">\n\n    <div class=\"js-note-trigger-group\">\n\n      <label class=\"checkbox-item\">\n        <input name=\"github_ssl[enabled]\" type=\"hidden\" value=\"false\" />\n        <input type=\"checkbox\" name=\"github_ssl[enabled]\" class=\"js-note-trigger\" data-triggers-note=\".ssl-note\" <%== view.github_ssl_checkbox %>>\n        SSL only <span class=\"muted\">(recommended)</span>\n      </label>\n\n      <p>\n        Forces SSL for your installation. A valid x509 SSL certificate and private key files are required to use this option. The certificate and key <strong>must be in PEM format</strong>. The key must be <strong>unencrypted</strong>.\n      </p>\n\n    </div>\n\n    <div class=\"ssl-note\">\n\n      <% if view.github_ssl_configured? %>\n        <div class=\"list-group certificate-info\">\n          <div class=\"list-group-item\">\n            <div class=\"label\">Domain</div>\n            <strong><%= view.github_ssl_common_name %></strong>\n          </div>\n          <div class=\"list-group-item\">\n            <div class=\"label\">Alternate names</div>\n            <%= view.github_ssl_alternate_names %>\n          </div>\n        </div>\n      <% end %>\n\n      <label class=\"label-heading\">\n        Install SSL Certificate <%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>\n      </label>\n      <input type=\"file\" name=\"github_ssl[cert]\" class=\"<%= view.github_ssl_configured? ? \"\" : \"js-required\" %>\">\n\n      <label class=\"label-heading\">\n        Install SSL Key <%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>\n      </label>\n      <input type=\"file\" name=\"github_ssl[key]\"  class=\"<%= view.github_ssl_configured? ? \"\" : \"js-required\" %>\">\n\n      <p class=\"error js-ssl-error\">The SSL certificate and key are required to enabled SSL only mode.</p>\n\n    </div>\n\n  </div>\n\n  <div class=\"subsection\">\n    <label class=\"checkbox-item\">\n      <input name=\"private_mode\" type=\"hidden\" value=\"false\" />\n      <input type=\"checkbox\" name=\"private_mode\" <%== view.private_mode_checkbox %> class=\"js-private-mode-toggle\">\n      Private mode\n    </label>\n    <p>\n      Private mode only allows users with accounts to access any part of your\n      installation. The sign-up page will be disabled, as will anonymous clones\n      over <code>git://</code>.\n    </p>\n  </div>\n\n  <div class=\"subsection\">\n    <label class=\"checkbox-item js-signup-toggle\">\n      <input name=\"signup_enabled\" type=\"hidden\" value=\"false\" />\n      <input type=\"checkbox\" name=\"signup_enabled\" <%== view.signup_enabled_checkbox %> <%== view.settings.private_mode? ? \"disabled\" : nil %>>\n      Enable sign-up\n    </label>\n    <p>\n      When sign-up is enabled, anyone who can access your GitHub\n      Enterprise installation can also create an account. When sign-up\n      is disabled, no one can create an account unless they are invited\n      by a site admin. Sign-up cannot be enabled when Private Mode is enabled.\n    </p>\n  </div>\n\n  <div class=\"subsection\">\n    <h3>External load balancers</h3>\n    <label class=\"checkbox-item\">\n      <input name=\"load_balancer[http_forward]\" type=\"hidden\" value=\"false\" />\n      <input type=\"checkbox\" name=\"load_balancer[http_forward]\" class=\"js-note-trigger\" <%== view.load_balancer_http_forward_checkbox %>>\n      Allow HTTP X-Forwarded-For header\n    </label>\n\n    <p>\n      By default GitHub Enterprise will, for security, strip certain headers\n      meant to preserve information about incoming connections for example:\n      <code>X-Forwarded-For</code>.<br>\n\n      When using an external load balancer these values should not be stripped.\n      By enabling this option stripping the headers will be disabled. Please note\n      that this also means access to the instance needs to be blocked from anything\n      except from the load balancer, otherwise users can forge the IP addresses\n      that will be logged.\n    </p>\n\n    <label class=\"checkbox-item\">\n      <input name=\"load_balancer[proxy_protocol]\" type=\"hidden\" value=\"false\" />\n      <input type=\"checkbox\" name=\"load_balancer[proxy_protocol]\" class=\"js-note-trigger\" <%== view.load_balancer_proxy_protocol_checkbox %>>\n      Enable support for PROXY protocol\n    </label>\n    <p>\n      This option enables additional listeners on a separate port with support\n      for the PROXY protocol. On each protocol that needs to be forwarded by\n      a load balancer an extra port is opened one higher than the standard port.\n\n      Enabling this options means that access to these ports should be filtered and only\n      load balancers should be allowed to access these ports by external firewalling. The\n      following list of ports will be opened when enabling this option:\n\n      <ul>\n        <li><code>23</code> SSH with PROXY protocol enabled</li>\n        <li><code>81</code> HTTP with PROXY protocol enabled</li>\n        <li><code>444</code> HTTPS with PROXY protocol enabled</li>\n        <li><code>9419</code> Git with PROXY protocol enabled</li>\n        <li><code>8081</code> HTTP for manage with PROXY protocol enabled</li>\n        <li><code>80444</code> HTTPS for manage with PROXY protocol enabled</li>\n      </ul>\n    </p>\n\n  </div>\n\n  <div class=\"subsection\">\n\n    <label class=\"label-heading\">\n      HTTP Proxy Server <span class=\"muted\">(optional)</span>\n    </label>\n    <input id=\"http_proxy\" type=\"text\" name=\"http_proxy\" value=\"<%= view.settings.http_proxy %>\">\n    <p>\n      Routes webhooks, bundle uploads and legacy avatar copy calls through the specified proxy server. Additionally, the environment variables for proxy usage are set in administration SSH console sessions.\n    </p>\n\n  </div>\n\n  <% if view.avatar? -%>\n    <div class=\"subsection\">\n      <div class=\"js-note-trigger-group\">\n        <label class=\"checkbox-item\">\n          <input name=\"avatar[enabled]\" type=\"hidden\" value=\"false\" />\n          <input type=\"checkbox\" name=\"avatar[enabled]\" class=\"js-note-trigger\" data-triggers-note=\".avatar-note\" <%== view.avatar_checkbox %>>\n          Enable legacy avatars\n        </label>\n        <p>\n          Automatically copy avatars from the legacy 3rd party service used on older Enterprise installations to GitHub's avatar service. Disable this if your GitHub Enterprise installation can not directly reach the legacy 3rd party service.\n        </p>\n      </div>\n      <div class=\"avatar-note\">\n        <label class=\"label-heading\">\n          Service address <span class=\"muted\">(https://avatars.example.com, https://secure.gravatar.com)</span>\n        </label>\n        <input id=\"avatar-uri\" type=\"text\" name=\"avatar[uri]\" value=\"<%= view.avatar_uri %>\">\n      </div>\n    </div>\n  <% end -%>\n\n  <div class=\"subsection\">\n\n    <div class=\"js-note-trigger-group\">\n      <label class=\"checkbox-item\">\n        <input name=\"mapping[enabled]\" type=\"hidden\" value=\"false\" />\n        <input type=\"checkbox\" name=\"mapping[enabled]\" class=\"js-note-trigger\" data-triggers-note=\".mapping-note\" <%== view.mapping_enabled_checkbox %>>\n        Enable GeoJSON rendering\n      </label>\n      <p>\n        GitHub can render and diff GeoJSON files within repositories. GeoJSON is an open geospatial data format. GeoJSON rendering requires the use of third-party services to provide basemaps, and is disabled by default.\n      </p>\n    </div>\n\n    <div class=\"mapping-note\">\n\n      <p>By default, GitHub Enterprise will use a shared basemap served from mapbox.com, via a secure connection over the public internet. If you'd like to use a different basemap you'll either need to provide <a href=\"https://www.mapbox.com/help/create-api-access-token/ \">a <strong>public</strong> mapbox.com token</a> or host your own <a href=\"https://www.mapbox.com/atlas/\">Mapbox Atlas Server</a> instance.</p>\n      <label class=\"label-heading\">\n        Basemap ID <span class=\"muted\">(e.g, mapbox.mapbox-streets-v5)</span>\n      </label>\n      <input id=\"basemap\" type=\"text\" name=\"mapping[basemap]\" value=\"<%= view.mapping_configured? ? view.basemap : \"\" %>\">\n\n      <label class=\"label-heading\">\n        Mapbox.com API token\n      </label>\n      <p>To use a custom mapbox.com basemap, provide a <strong>public</strong> mapbox.com token below. See the Mapbox <a href=\"https://www.mapbox.com/help/define-access-token/\">documentation</a> for more information on Mapbox API tokens.</p>\n      <input id=\"mapping-token\" type=\"text\" name=\"mapping[token]\" value=\"<%= view.mapping_configured? ? view.token : \"\" %>\">\n\n\n      <label class=\"label-heading\">\n        Mapbox Atlas Server host <span class=\"muted\">(e.g, http://atlas.example.com:2999)</span>\n      </label>\n      <p>If you'd prefer to host your own tileserver, you'll need to stand up a <a href=\"https://www.mapbox.com/atlas/\">Mapbox Atlas Server</a> instance, and enter the hostname below.</p>\n      <input id=\"tileserver\" type=\"text\" name=\"mapping[tileserver]\" value=\"<%= view.mapping_configured? ? view.tileserver : \"\" %>\">\n\n    </div>\n\n  </div>\n\n</div>\n","markerStore":{"nextMarkerId":64,"markersById":{"0":{"range":{"start":{"row":38,"column":50},"end":{"row":38,"column":50}},"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":51,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[38,32],[38,94]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,32],[38,94]],"newRange":[[38,32],[38,32]],"oldText":"<%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[38,32],[38,32]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,32],[38,32]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,31],[38,32]],"newRange":[[38,31],[38,31]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[38,31],[38,31]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,8],[38,8]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,8],[38,8]],"newRange":[[38,8],[38,70]],"oldText":"","newText":"<%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>"}},{"type":"group-end","snapshot":{"0":{"range":[[38,70],[38,70]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,43],[38,61]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,43],[38,61]],"newRange":[[38,43],[38,44]],"oldText":"(replace existing)","newText":"R"}},{"type":"change","content":{"oldRange":[[38,44],[38,44]],"newRange":[[38,44],[38,45]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[38,45],[38,45]],"newRange":[[38,45],[38,46]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[38,46],[38,46]],"newRange":[[38,46],[38,47]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[38,47],[38,47]],"newRange":[[38,47],[38,48]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[38,48],[38,48]],"newRange":[[38,48],[38,49]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[38,49],[38,49]],"newRange":[[38,49],[38,50]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[38,50],[38,50]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,59],[38,66]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,59],[38,66]],"newRange":[[38,59],[38,59]],"oldText":"Install","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[38,59],[38,59]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,55],[38,55]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,55],[38,55]],"newRange":[[38,55],[38,62]],"oldText":"","newText":"Install"}},{"type":"group-end","snapshot":{"0":{"range":[[38,62],[38,62]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,24],[43,86]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,24],[43,86]],"newRange":[[43,24],[43,24]],"oldText":"<%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[43,24],[43,24]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,24],[43,24]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,23],[43,24]],"newRange":[[43,23],[43,23]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[43,23],[43,23]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,8],[43,8]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,8],[43,8]],"newRange":[[43,8],[43,70]],"oldText":"","newText":"<%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>"}},{"type":"group-end","snapshot":{"0":{"range":[[43,70],[43,70]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,70],[43,77]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,70],[43,77]],"newRange":[[43,70],[43,70]],"oldText":"Install","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[43,70],[43,70]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,66],[43,66]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,66],[43,66]],"newRange":[[43,66],[43,73]],"oldText":"","newText":"Install"}},{"type":"group-end","snapshot":{"0":{"range":[[43,73],[43,73]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[43,43],[43,61]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[43,43],[43,61]],"newRange":[[43,43],[43,44]],"oldText":"(replace existing)","newText":"R"}},{"type":"change","content":{"oldRange":[[43,44],[43,44]],"newRange":[[43,44],[43,45]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[43,45],[43,45]],"newRange":[[43,45],[43,46]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[43,46],[43,46]],"newRange":[[43,46],[43,47]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[43,47],[43,47]],"newRange":[[43,47],[43,48]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[43,48],[43,48]],"newRange":[[43,48],[43,49]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[43,49],[43,49]],"newRange":[[43,49],[43,50]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[43,50],[43,50]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,50],[38,50]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,50],[38,50]],"newRange":[[38,50],[38,51]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[38,51],[38,51]],"newRange":[[38,51],[38,52]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[38,52],[38,52]],"newRange":[[38,52],[38,53]],"oldText":"","newText":"x"}},{"type":"change","content":{"oldRange":[[38,53],[38,53]],"newRange":[[38,53],[38,54]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[38,54],[38,54]],"newRange":[[38,54],[38,55]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[38,55],[38,55]],"newRange":[[38,55],[38,56]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[38,56],[38,56]],"newRange":[[38,56],[38,57]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[38,57],[38,57]],"newRange":[[38,57],[38,58]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[38,58],[38,58]],"newRange":[[38,58],[38,59]],"oldText":"","newText":"g"}},{"type":"group-end","snapshot":{"0":{"range":[[38,59],[38,59]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,51],[38,59]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,51],[38,59]],"newRange":[[38,51],[38,51]],"oldText":"existing","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[38,51],[38,51]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,51],[38,51]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,50],[38,51]],"newRange":[[38,50],[38,50]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[38,50],[38,50]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[38,50],[38,50]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[38,0],[38,0]],"newRange":[[38,0],[39,0]],"oldText":"","newText":"        Install SSL Certificate <%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>\n"}},{"type":"change","content":{"oldRange":[[39,0],[40,0]],"newRange":[[39,0],[39,0]],"oldText":"        <%= view.github_ssl_configured? ? \"Replace\" : \"Install\" %> SSL Certificate\n","newText":""}},{"type":"change","content":{"oldRange":[[43,0],[43,0]],"newRange":[[43,0],[44,0]],"oldText":"","newText":"        Install SSL Key <%= view.github_ssl_configured? ? \"(replace existing)\" : \"\" %>\n"}},{"type":"change","content":{"oldRange":[[44,0],[45,0]],"newRange":[[44,0],[44,0]],"oldText":"        <%= view.github_ssl_configured? ? \"Replace\" : \"Install\" %> SSL Key\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[39,0],[39,0]],"properties":{"type":"selection","editorId":286,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/privacy.erb","digestWhenLastPersisted":"52a57c1af4f35fbd6640444f2dfa41eab1662491","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":196,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":197,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-generate-client-key","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":218,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":219,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/github/enterprise2/vm_files/usr/local/bin/ghe-config-apply","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":262,"softTabs":true,"scrollRow":2,"displayBuffer":{"deserializer":"DisplayBuffer","id":263,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/_authentication_saml.erb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":286,"softTabs":true,"scrollRow":29,"displayBuffer":{"deserializer":"DisplayBuffer","id":287,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/privacy.erb","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":200,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":201,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-sign-client-key","largeFileMode":false},"largeFileMode":false}}],"activeItemURI":"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/_authentication_saml.erb","focused":true,"flexScale":1},"activePaneId":3},"fullScreen":false,"packagesWithActiveGrammars":["language-shellscript","language-ruby","language-html","language-todo"]},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"metrics":{"sessionLength":1239365},"find-and-replace":{"findOptions":{"findPattern":"replace","replacePattern":"","pathsPattern":"","useRegex":true,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["check_connectivity","saml","connectivity","saml","hostname","uptime","hostname","uptime","uname","SSL","sub","hostname","proxy","message","proxy","TRASH","disable_vrfy_command = yes","disable_vrfy_command","\\\\n","reply","mysql","/data/user/common/","chmod","\\\\n","replace"],"replaceHistory":["force_storage_prepare","force-storage-prepare","full","\\n","instance","\\n"],"pathsHistory":["force_storage_prepare","force-storage-prepare","full","\\n","instance","\\n"]},"fuzzy-finder":{"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-generate-client-key":1443713665492,"/Users/lildude/github/enterprise2/vm_files/usr/local/bin/ghe-config-apply":1447950110843,"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/_authentication_saml.erb":1447950431289,"/Users/lildude/github/enterprise2/enterprise-manage/lib/manage/views/settings/privacy.erb":1447950287949,"/Users/lildude/github/enterprise2/vm_files/usr/local/share/enterprise/ghe-openvpn-sign-client-key":1443530040099},"keybinding-resolver":{},"tree-view":{"directoryExpansionStates":{"/Users/lildude/github/enterprise2":{"isExpanded":true,"entries":{"benchmark":{"isExpanded":false,"entries":{}},"docs":{"isExpanded":false,"entries":{}},"enterprise-manage":{"isExpanded":false,"entries":{}},"keys":{"isExpanded":false,"entries":{}},"manifest-precise":{"isExpanded":false,"entries":{}},"manifest-trusty":{"isExpanded":false,"entries":{}},"patch":{"isExpanded":false,"entries":{}},"pkg_files":{"isExpanded":false,"entries":{}},"script":{"isExpanded":false,"entries":{}},"services":{"isExpanded":false,"entries":{}},"shims":{"isExpanded":false,"entries":{}},"team":{"isExpanded":false,"entries":{}},"templates":{"isExpanded":false,"entries":{}},"test":{"isExpanded":false,"entries":{}},"vendor":{"isExpanded":false,"entries":{}},"vm_files":{"isExpanded":true,"entries":{"data":{"isExpanded":false,"entries":{}},"etc":{"isExpanded":true,"entries":{"cloud":{"isExpanded":false,"entries":{}},"collectd":{"isExpanded":false,"entries":{}},"cron.d":{"isExpanded":false,"entries":{}},"default":{"isExpanded":false,"entries":{}},"dhcp":{"isExpanded":false,"entries":{}},"elasticsearch":{"isExpanded":false,"entries":{}},"fonts":{"isExpanded":false,"entries":{}},"haproxy":{"isExpanded":false,"entries":{}},"init":{"isExpanded":true,"entries":{}},"init.d":{"isExpanded":false,"entries":{}},"logrotate.d":{"isExpanded":true,"entries":{}},"modprobe.d":{"isExpanded":false,"entries":{}},"mysql":{"isExpanded":false,"entries":{}},"network":{"isExpanded":false,"entries":{}},"nginx":{"isExpanded":false,"entries":{}},"pam.d":{"isExpanded":false,"entries":{}},"postfix":{"isExpanded":false,"entries":{}},"redis":{"isExpanded":false,"entries":{}},"resolvconf":{"isExpanded":false,"entries":{}},"security":{"isExpanded":false,"entries":{}},"ssh":{"isExpanded":false,"entries":{}},"sysctl.d":{"isExpanded":false,"entries":{}},"syslog-ng":{"isExpanded":false,"entries":{}},"udev":{"isExpanded":false,"entries":{}},"ufw":{"isExpanded":false,"entries":{}},"update-motd.d":{"isExpanded":false,"entries":{}},"vmware-tools":{"isExpanded":false,"entries":{}}}},"home":{"isExpanded":false,"entries":{}},"opt":{"isExpanded":false,"entries":{}},"usr":{"isExpanded":false,"entries":{}}}}}}},"selectedPath":"/Users/lildude/github/enterprise2/enterprise-manage","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":1042,"width":344},"tabs":[{}],"linter":{"scope":"File"}}}