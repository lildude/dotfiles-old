{"mode":"editor","version":1,"windowDimensions":{"x":34,"y":22,"width":1380,"height":829},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lildude/Development/phpSmug/admin","buffers":[{"text":"<?php\n/* Last updated with phpSmug 0.11\n *\n * This example file shows you how to get a list of public albums for a\n * particular SmugMug user, by their username.\n *\n * Obviously, you'll want to replace the \"<API KEY>\" with one provided\n * by SmugMug: http://www.flickr.com/services/api/key.gne and replace\n * <NICKNAME> with a SmugMug nickname.\n */\n$time = microtime();\n$time = explode(\" \", $time);\n$time = $time[1] + $time[0];\n$start = $time;\n\n\n//require_once(\"../phpSmug.php\");\nrequire_once(\"../tmplib/1.phpSmug.class.php\");\nrequire_once(\"../tmplib/2.httpRequest.class.php\");\nrequire_once(\"../tmplib/3.curlRequestProcessor.class.php\");\nrequire_once(\"../tmplib/4.socketRequestProcessor.class.php\");\n\nerror_reporting( E_ERROR );\n\ntry {\n// OAuth\n\n$d = '';\n\n$f = new phpSmug(\"APIKey=woTP74YfM4zRoScpGFdHYPMLRYZSEhl2\", 'OAuthSecret=5a3707ce2c2afadaa5a5e0c1c327ccae', \"AppName=Developing phpSmug Wrapper/PHPUnit Testing\", \"APIVer=2.0\");\n//$f->oauth_signature_method = 'PLAINTEXT';\n//$f->oauth_signature_method = 'HMAC-SHA1';\n\n// Login\n//$f = new phpSmug(\"APIKey=woTP74YfM4zRoScpGFdHYPMLRYZSEhl2\", \"AppName=Developing phpSmug Wrapper\", \"APIVer=1.2.2\");\n//$f->setAdapter('socket');\n//$f->setSecureOnly();\n//$d = $f;\n//$f->setProxy('server=emeacache.uk.oracle.com', 'port=80');\n\n//$d = $f->enableCache(\"type=fs\", \"cache_dir=/home/cs125667/public_html/habari/user/cache/\", \"cache_expire=60\");\n//$d = $f->enableCache(\"type=fs\", \"cache_dir=./cache/\", \"cache_expire=20\");\n//$d = $f->enableCache(\"type=db\", \"dsn=mysql://root:rg415sd@localhost/test\", \"cache_expire=60\");\n//$d = $f->login(array(\"EmailAddress\" => \"lildood@gmail.com\", \"Password\" => \"Yc1rm9cp?\"));\n//$d = $f->login('UserID=166590', 'PasswordHash=$1$LVZSb7p7$4NMWz7vLlAtt45F6gER440');\n//$d = $f->login_withPassword(array(\"EmailAddress\" => \"lildood@gmail.com\", \"Password\" => \"Yc1rm9cp?\"));\n//$d = $f->login_withHash('UserID=166590', 'PasswordHash=$1$LVZSb7p7$4NMWz7vLlAtt45F6gER440');\n\n//$f->enableCache(\"type=db\", \"connection=mysql://root:rg415sd@localhost/test\", \"cache_expire=60\");\n//$d = $f->clearCache(TRUE);\n//$d = $f->enableCache(\"type=db\", \"dsn=mysql://root:rg415sd@localhost/test\", \"cache_expire=60\");\n//$d = $f->enableCache(\"type=db\", \"dsn=sqlite:////tmp/phpSmug.db?mode=0666\", \"cache_expire=60\" );\n\n//$d = $f->enableCache(\"type=fs\", \"cache_dir=./cache/\", \"cache_expire=60\");\n//$d = $f->login();\n//$d = $f->login(\"EmailAddress=lildood@gmail.com\", \"Password=Yc1rm9cp?\");\n//$d = $f->logout();\n//$d = $f->clearCache(TRUE);\n//$d = $f->getErrorCode();\n//$d .= $f->getErrorMsg();\n//$d = $f->service_ping();\n//$f->setProxy('server=emeacache.uk.oracle.com', 'port=80');\n//$d = $f;\n//\n//$d = $f->reflection_getMethods();\n//foreach($d as $f) {\n//\techo 'array(\\''.str_replace('.', '_', str_replace('smugmug.', '', $f['Name'])).'\\')<br />';\n//}\n//$d = $f->reflection_getGroupedMethods();\n//$d = $f->reflection_getMethodInfo('MethodName=smugmug.albums.get');\n//$d = $d['Response']['Properties'][0]['Members'];\n\n\n\n//$d = $f->auth_getRequestToken();\n//$d = $f->authorize();\n/****** START OAUTH TESTING *******/\n/* ** Start OAuth Authorisation Testing ***\nI use session variables and a tmp cookie for testing. It's up to application developers to devise their own store methods\n *\n *\n\nif ($_COOKIE['phpSmugTestOAuth']) {\n\techo \"<p>Cookie found with OAuth token</p>\";\n\t$token = unserialize($_COOKIE['phpSmugTestOAuth']);\n} else {\n\tif (session_id() == \"\") { @session_start();}\n\n\tif (! $_SESSION['SmugGalReqToken']) {\n\t\t// Step 1: Get a Request Token\n\t\t$d = $f->auth_getRequestToken();\n\t\t$_SESSION['SmugGalReqToken'] = serialize($d);\n\n\t\t// Step 2: Get the User to login to SmugMug and Authorise this demo\n\t\techo \"<p>Click <a href='\".$f->authorize().\"' target='_blank'><strong>HERE</strong></a> to Authorize This Demo.</p>\";\n\t\techo \"<p>A new window/tab will open asking you to login to SmugMug (if not already logged in).  Once you've logged it, SmugMug will redirect you to a page asking you to approve the access (it's read only) to your public photos.  Approve the request and come back to this page and click REFRESH below.</p>\";\n\t\techo \"<p><a href='\".$_SERVER['PHP_SELF'].\"'><strong>REFRESH</strong></a></p>\";\n\t} else {\n\t\t$reqToken = unserialize($_SESSION['SmugGalReqToken']);\n\t\tunset($_SESSION['SmugGalReqToken']);\n\t\tsession_unregister('SmugGalReqToken');\n\n\t\t// Step 3: Use the Request token obtained in step 1 to get an access token\n\t\t$f->setToken(\"id={$reqToken['Token']['id']}\", \"Secret={$reqToken['Token']['Secret']}\");\n\t\t$token = $f->auth_getAccessToken();\t// The results of this call is what your application needs to store.\n\n\t\tsetcookie('phpSmugTestOAuth', serialize($token));\n\t}\n}\n/* */\n// Set the Access token for use by phpSmug.\n//$f->setToken(\"id={$token['Token']['id']}\", \"Secret={$token['Token']['Secret']}\");\n//$d = $token;\n//$d = $f->auth_checkAccessToken();\n\n\n/*** End of OAuth Authorisation testing ***/\n/* Once we've got the token and token secret and stored them somewhere safe, we need to pull them into phpSmug\n   before we can go any further.\n\n   This is a good step for an example file showing developers how to use OAuth for their apps.\n\n   As the token and token secret don't change unless the user revokes control, we can effectively store them forever.\n\n   I'm going to define it here statically for testing. If I redo the above section, I need to change this with the new token info.\n   */\n\n// Modify/Public\n$f->setToken('id=42f12726ada8e03f7b2988f3a7a2e107', 'Secret=4c7765f67a6cd16a2ef454c638987948af5d8791ade8081386b1ed7eae321983');\n//$d = $f->auth_checkAccessToken();\n//$f->setSecureOnly();\n//$d = $f;\n/* Albums */\n//$d = $f->albums_get(\"Extras=SquareThumbs,Title\");\n$d = $f->albums_get();\n//$d = $f->albums_get(\"NickName=colinseymour\");\n//$d = $f->albums_get();\n// THIS two tests run in close succession cause an invalidation of my token because of a signature error.\n//$d = $f->albums_get('Heavy=1');\n//$d = $f->albums_get(array('Extras' => 'External'));\n//$d = $f->albums_get(array( 'Extras' => 'EXIF,Description,Keywords', 'Associative' => '' ));\n//$d = $f->albums_getInfo(\"AlbumID=9294332\", \"AlbumKey=RWFZX\" );\n//$d = $f->albums_getStats(\"AlbumID={$d[0]['id']}\", \"Month=09\", \"Year=2007\");\n//$f->debug(memory_get_peak_usage()/1024);\n/* *\n$optargs = array( \"Description\" => \"This is an old descriptions changed using the API\",\n \t\t\t\t  \"Keywords\" => \"test album api\",\n\t\t\t\t  \"Public\" => 0,\n\t\t\t\t  \"TemplateID\" => 10,\n\t\t\t\t  \"CategoryID\" => 0);\n$d = $f->albums_create('Title=Test Album', $optargs);\n /* */\n//$d = $f->albums_changeSettings(\"AlbumID={$d[0]['id']}\", \"Password=\");\n//$d = $f->albums_changeSettings(\"AlbumID={$d[0]['id']}\", \"SortMethod=DateTimeOriginal\");\n//$d = $f->albums_reSort(\"AlbumID={$d[0]['id']}\", \"By=FileName\", \"Direction=DESC\");\n\n//$d = $f->albums_delete(3612604);\n//$d = $f->albums_applyWatermark(\"AlbumID=5852428\", \"WatermarkID=50275\");\n//$d = $f->albums_getInfo(\"AlbumID=5693084\", \"AlbumKey=kfzFY\");\n//$d = $f->albums_removeWatermark(4644971);\n\n/* Albumtemplates */\n//$d = $f->albumtemplates_get();\n/* $optargs = array(\n\tAlbumTemplateName => \"Created with API\",\n\tTemplateID => 10,\n\tSortMethod => \"Position\",\n\tSortDirection => FALSE,\n\tPublic => TRUE,\n\tPassword => \"blah\",\n\tPasswordHint => \"blah blah blah\",\n\tPrintable => TRUE,\n\tHeader => TRUE,\n\tFilenames => TRUE,\n\tComments => TRUE,\n\tExternal => TRUE,\n\tOriginals => TRUE,\n\tLarges => TRUE,\n\tClean => TRUE,\n\tEXIF => TRUE,\n\tShare => TRUE,\n\tProtected => TRUE,\n\tWatermarking => TRUE,\n\tWatermarkID => 3612760,\n\tFriendEdit => TRUE,\n\tFamilyEdit => TRUE,\n\tHideOwner => TRUE,\n\tDefaultColor => TRUE,\n\tGeography => TRUE,\n\tCanRank => TRUE,\n\tProofDays => 7,\n\tBackprinting => \"Arse\",\n\tSmugSearchable => TRUE,\n\tWorldSearchable => TRUE); */\n\n//$d = $f->albumtemplates_create($optargs);\n//$d = $f->albumtemplates_changeSettings(51900, $optargs);\n\n/* Categories */\n//$d = $f->categories_get();\n\n//$d = $f->categories_create(\"Name=TestCat\");\n//$d = $f->categories_rename(\"CategoryID={$d}\", \"Name=NewCatName\");\n//$d = $f->categories_delete(197416);\n\n/* Communities */\n\n/* Family */\n//$d = $f->family_get();\t\t// Needs testing\n\n/* Friends */\n//$d = $f->friends_get();\t\t// Needs more testing\n\n/* Images */\n//$d = $f->images_get(\"AlbumID={$d[49]['id']}\", \"AlbumKey={$d[49]['Key']}\", \"Heavy=true\");\n//$d = $f->images_get(\"AlbumID={$d[49]['id']}\", \"AlbumKey={$d[49]['Key']}\", \"Extras=FileName,Hidden,Caption,Format,TinyURL,SmallURL,ThumbURL,MediumURL,LargeURL,XLargeURL,X2LargeURL,X3LargeURL,OriginalURL,Width,Height,Video320URL,Video640URL,Video960URL,Video1280URL,Video1920URL\");\n//$d = $d['Images'];\n//$d = $f->images_get(\"AlbumID=12616891\", \"AlbumKey=wCote\", \"Heavy=1\");\n//$d = $f->images_get(\"AlbumID=6828068\", \"AlbumKey=4uMym\", \"Heavy=1\");\n//$d = $f->images_get(array( \"AlbumID\" => \"23039193\", \"AlbumKey\" => \"m98pLs\", \"Heavy\" => 1 ) );\n$d = $f->images_getURLs(\"ImageID=1385923576\", \"ImageKey=XbGbzgG\");\n$d = $f->signResource( $d['TinyURL'] ); // TODO: bung in a URL here\n//$d = $f->images_getEXIF(205645237);\n//$d = $f->images_getInfo(\"ImageID=762469124\", \"ImageKey=E2RAR\", 'Heavy=TRUE');\n//$d = $f->images_getStats(205645237, 10, 2007);\n//$d = $f->images_applyWatermark(\"ImageID=363248964\", \"WatermarkID=50275\");\n//$d = $f->images_getInfo(\"ImageID=792528962\", \"ImageKey=krBTe\", 'Heavy=TRUE');\n//$d = $f->images_getPricing(\"ImageID={$d['0']['id']}\");\n//$d = $f->images_removeWatermark(\"ImageID=351003540\", \"Strict=1\");\n//$d = $f->images_changePosition(311875926, 2);\n//$d = $f->images_changeSettings(311924021, '', \"1New title1\");\n//$d = $f->images_rotate(\"ImageID=794556056\", \"Degrees=270\");\n//$d = $f->images_crop( array( 'ImageID' => 762423766, 'Height' => 490, 'Width' => 490, 'X' => 260, 'Y' => 260 ) );\n//$d = $f->images_delete(206851703);\n//$d = $f->images_zoomThumbnail(\"ImageID=351014162\", \"Height=50\", \"Width=50\", \"X=10\", \"Y=10\");\n// 2$a = $d;\n//$d = $f->images_upload(\"AlbumID=23516228\", \"File=../tests/testimg.jpg\");\n//$d = $f->images_upload(\"AlbumID={$a['id']}\", \"File=../tests/testimg.jpg\");\n//$d = $f->images_get(\"AlbumID={$a['id']}\", \"AlbumKey={$a['Key']}\");\n\n//$d = $f->images_uploadFromURL(3612760, \"http://www.colinseymour.co.uk/blog/wp-content/uploads/2007/09/happybirthday.jpg\", \"Happy Birthday\", \"birthday card pic\");\n\n/* Orders */\n\n/* Propricing */\n//$d = $f->propricing_setAlbum(\"AlbumID=5693084\", \"Price=10.99\", \"Strict=1\", \"ProductID=10040\");\n//$d = $f->propricing_getAlbum(\"AlbumID=5693084\");\n//$d = $f->propricing_setPortfolio(\"Price=1.99\");\n//$d = $f->propricing_getPortfolio();\n\n/* ShareGroups */\n//$d = $f->sharegroups_create( \"Name=TestShareGroup\", \"AccessPassworded=TRUE\", \"Password=foo\", \"PasswordHint=bar\" );\n//$d = $f->sharegroups_get(\"Heavy=TRUE\");\n//$d = $f->sharegroups_getInfo(32118);\n//$d = $f->sharegroups_create(\"ShareGroup222222\", \"This is another share group, but this time created by the API\", \"ColsShare\");\n//$d = $f->sharegroups_addAlbum(32224, 3612760);\n//$d = $f->sharegroups_delete(32221);\n//$d = $f->sharegroups_removeAlbum(32118, 3312584);\n//$d = $f->sharegroups_albums_get( \"ShareGroupTag=uvFY9LHC5Ks2s\" );\n\n/* Subcategories */\n//$d = $f->subcategories_get();\n//$d = $f->subcategories_getAll();\n//$d = $f->subcategories_rename(392595, \"Doogs\");\n//$d = $f->subcategories_create(\"Cats\", 1);\n//$d = $f->subcategories_delete(392603);\n\n/* Themes */\n//$d = $f->themes_get();\n\n/* Styles */\n//$d = $f->styles_getTemplates();\n\n/* Users */\n//$d = $f->users_getTree('NickName=colinseymour', \"Heavy=true\");\n//$d = $f->users_getTree('LastUpdated,Title', '', FALSE);\n//$d = $f->users_getTree('', \"colinseymour\", TRUE, array('XP1Z2N9l4zbWo', '1PfrfCQ4PyT1c'));\n//$d = $f->users_getTransferStats(09, 2007);\n//$d = $f->users_getDisplayName(\"NickName=colinseymour\");\n\n/* Watermarks */\n//$d = $f->watermarks_get();\n//$d = $f->watermarks_getInfo(\"WatermarkID={$d['id']}\");\n//$d = $f->watermarks_changeSettings(23596, \"Starry\", \"Tile\", 60, FALSE);\n//$d = $f->watermarks_delete(23792);\n//$d = $f->watermarks_create(307118515, 'Test Watermark', 'BottomRight', 50, TRUE);\n//$d = $f->watermarks_create(\"ImageID=307118515\", 'Name=Test Watermark', 'Pinned=BottomRight', 'Dissolve=10', 'Thumbs=TRUE');\n\n\n/******** NOT TESTED YET ********/\n\n//$d = $f->albumtemplates_delete(51892);\t// Not yet implemented in API\n\n//$d = $f->communities_get();\t\t// Not completely implemented in API\n//$d = $f->communities_getAvailable();\t\t// Not Yet implemented in API\n//$d = $f->communities_join(1781); //Not implemented in API yet\n//$d = $f->communities_leave(1781); //Not implemented in API yet\n//$d = $f->communities_leaveAll(); //Not implemented in API yet\n\n//$d = $f->images_pricing_get(205645237);  // Not yet implemented by API\n\n//$d = $f->orders_get(); \t// Not yet implemented in API\n\n//$d = $f->sharegroups_changeSettings(32221, \"ShareGroup111\");  // Not yet implemented in API\n//$d = $f->reflection_getMethods();\n//$d = $f->reflection_getMethodInfo('MethodName=smugmug.albums.reSort');\n//$d = $d['Response'];\n//$d = $d['Response']['Properties'][0]['Elements'][0]['Members'];\n//$d = $d['Response']['Properties'][0]['Members'];\n\n\necho \"<pre>\";\n//print_r($d);\nphpSmug::debug($d);\necho \"</pre>\";\n//$d = 'http://colinseymour.smugmug.com/photos/i-XbGbzgG/0/L/i-XbGbzgG-L.jpg';\n//echo '<img src=\"'.$d.'\"/>';\n\n\n$time = microtime();\n$time = explode(\" \", $time);\n$time = $time[1] + $time[0];\n$finish = $time;\n$totaltime = ($finish - $start);\nprintf (\"This page took %f seconds to load.\", $totaltime);\n\n\n}\ncatch (Exception $e) {\n\tphpSmug::debug($e);\n}\n\n\n?>\n<html><head><title>Title</title></head>\n\t<body>\n\t\t<?php foreach ( $d['Images'] as $img ) {\n\t\t\techo \"<img src='{$img['ThumbURL']}' />\";\n\t\t} ?>\n\t</body>\n</html>\n","markers":{"markers":{"1":{"id":1,"range":[[221,0],[221,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[220,2],[220,2]]},"newParams":{"reversed":true,"range":[[220,1],[220,2]]},"deserializer":"MarkerPatch"},{"oldRange":[[220,1],[220,2]],"newRange":[[220,1],[220,1]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[220,1],[220,1]]},"newParams":{"range":[[220,0],[220,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[220,0],[220,1]],"newRange":[[220,0],[220,0]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[221,2],[221,2]]},"newParams":{"range":[[221,1],[221,2]]},"deserializer":"MarkerPatch"},{"oldRange":[[221,1],[221,2]],"newRange":[[221,1],[221,1]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[221,1],[221,1]]},"newParams":{"range":[[221,0],[221,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[221,0],[221,1]],"newRange":[[221,0],[221,0]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/Development/phpSmug/admin/test.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"90eae703e35b7be9130093ff70b2ba569d8e2234","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrap":false,"editorWidthInChars":145,"scrollTop":6102,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Development/phpSmug/admin/test.php","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lildude/Development/phpSmug/admin/test.php","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":77119},"fuzzy-finder":{"/Users/lildude/Development/phpSmug/admin/test.php":1401535082750},"keybinding-resolver":{"attached":false},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/lildude/Development/phpSmug/admin/test.php","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}