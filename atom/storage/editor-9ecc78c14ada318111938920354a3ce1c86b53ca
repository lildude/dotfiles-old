{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/lildude/github/ghe2aws-tools"],"buffers":[{"text":"AMI_OWNER=895557238572\nMY_SEC_GROUP=buckelij-ghe2\nMY_KEY_NAME=buckelij\nMY_KEY_LOC=/Users/lildude/.ssh/aws\nMY_GHE_LICENSE=/Users/license/Documents/github-enterprise.ghl\nMY_GHE_LOGIN=ghe-admin\nMY_GHE_PASSWORD=passworD1\n\n\naws ec2 run-instances \\\n  --security-groups default \"Enterprise 2\"\\\n  --instance-type r3.xlarge \\\n  --image-id ${AMI} \\\n  --block-device-mappings '[{\"DeviceName\":\"/dev/xvdf\",\"Ebs\":{\"VolumeSize\":20,\"VolumeType\":\"gp2\",\"DeleteOnTermination\": true}}]' \\\n  --region eu-west-1 \\\n  --key-name lildude-1 \\\n  --count ${COUNT} \\\n  --ebs-optimized\n\n\nfunction ghe2launch {\n  if [ \"$#\" -lt 1 ]; then\n    echo \"no version specified\"\n  else\n    filter=$(echo '.Images|.[]|select(.Name == \"GitHub Enterprise' $1'\")')\n    amis=$(aws ec2 describe-images --owner $AMI_OWNER)\n    ami=$(echo $amis | jq \"$filter|.ImageId\" | tr -d '\"')\n    snap=$(echo $amis | jq \"$filter|.BlockDeviceMappings|.[]|.Ebs|.SnapshotId\" | tr -d '\"')\n    blockdevs=$(echo '[ {\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"VolumeSize\":60,\"VolumeType\":\"standard\",\"SnapshotId\":\"'$snap'\"}},\n                      {\"DeviceName\":\"/dev/xvdf\",\"Ebs\":{\"VolumeSize\":15,\"VolumeType\":\"standard\",\"DeleteOnTermination\": true}} ]')\n    instance=$(aws ec2 run-instances \\\n        --security-groups $MY_SEC_GROUP \\\n        --instance-type r3.large \\\n        --image-id $ami \\\n        --key-name $MY_KEY_NAME\\\n        --block-device-mappings \"$blockdevs\" \\\n        | grep '\"InstanceId\": ' | awk '{ print $2 }' | tr -d '\",')\n    if [ \"$#\" -eq 2 ]; then\n      tag=\"$MY_SEC_GROUP-$2\"\n    else\n      tag=\"$MY_SEC_GROUP-$RANDOM\"\n    fi\n    aws ec2 create-tags --resources $instance --tags Key=Name,Value=$tag\n    echo $instance\n  fi\n}\n\nfunction ghe2get {\n  if [ \"$#\" -ne 1 ]; then\n    #aws ec2 describe-instances --filters Name=group-name,Values=$MY_SEC_GROUP \\\n    #  | jq -r '.[]|.[]|.Instances|.[]|.PublicDnsName,.InstanceId'|paste - - | grep -v 'null'\n    (\nIFS='\n'\n    for i in $(aws ec2 describe-tags --filters 'Name=key,Values=Name' 'Name=value,Values='$MY_SEC_GROUP'-*' \\\n      |jq -r '.[]|.[]|select(.ResourceType == \"instance\")|.Value,.ResourceId' | paste - - | sort)\n      do\n        id=$(echo \"$i\" | awk '{ print $2 }')\n        ih=$(ghe2get $id | awk '{ print $2 }')\n        echo $i $ih | grep -v null\n    done\n    )\n  else\n    local id=$(aws ec2 describe-instances --instance-id $1 | grep '\"PublicDnsName\": ' | awk '{ print $2 }' | tr -d ','|tr -d '\"')\n    echo \"ssh $id -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l admin -p 122 -i $MY_KEY_LOC\"\n  fi\n}\n\nfunction ghe2ldap {\n if [ \"$#\" -eq 1 ]; then\n   exec `ghe2get $1` -R 10389:127.0.0.1:10389\n fi\n}\n\nfunction ghe2term {\n  if [ \"$#\" -ne 1 ]; then\n    echo \"no instance specified\"\n  else\n    aws ec2 terminate-instances --instance-ids $1\n  fi\n}\n\nfunction ghe2stop {\n  if [ \"$#\" -ne 1 ]; then\n    echo \"no instance specified\"\n  else\n    aws ec2 stop-instances --instance-ids $1\n  fi\n}\n\nfunction ghe2configure {\n  remote=$(ghe2get $1 | awk '{print $2}')\n\n  #wait for instance to come up\n  sleep 30\n  for ((n=0; n<10; n++)); do\n   if curl -iks https://$remote:8443/setup/api/configcheck | grep -q 'Access forbidden, please upload' ; then\n     break\n   fi\n   sleep 30\n  done\n\n  #configure instance\n  sleep 60\n  curl -isk -XPOST https://$remote:8443/setup/api/start \\\n       -F license=@$MY_GHE_LICENSE -F \"password=$MY_GHE_PASSWORD\" \\\n  | grep '202 Accepted'\n  if [ $? -eq 0 ] ; then\n    sleep 10\n    curl -ik -XPOST https://api_key:$MY_GHE_PASSWORD@$remote:8443/setup/api/configure\n    sleep 30\n    TEMPDIR=`mktemp -d /tmp/XXXXXXXXXXXXX`\n    #wait for up to 10 more minutes for configuration to complete\n    for ((n=0; n<20; n++)); do\n      if curl -ik https://api_key:$MY_GHE_PASSWORD@$remote:8443/setup/api/configcheck | grep 'status\":\"success' ; then\n        break\n      fi\n      sleep 30\n    done\n    #create first account\n    curl -isk https://$remote/join|grep 'Status: 200 OK'\n    curl -k -v -L -c $TEMPDIR/cookies https://$remote/login >$TEMPDIR/github-curl.out\n    authenticity_token=$(grep 'name=\"authenticity_token\"' $TEMPDIR/github-curl.out | head -1 | sed -e 's/.*value=\"\\([^\"]*\\)\".*/\\1/')\n    curl -X POST -k -v -b $TEMPDIR/cookies -c $TEMPDIR/cookies \\\n    -F \"authenticity_token=$authenticity_token\" \\\n    -F \"user[login]=$MY_GHE_LOGIN\" \\\n    -F \"user[email]=$MY_GHE_LOGIN@test\" \\\n    -F \"user[password]=$MY_GHE_PASSWORD\" \\\n    -F \"user[password_confirmation]=$MY_GHE_PASSWORD\" \\\n    -F \"source_label=Detail Form\" \\\n    https://$remote/join >$TEMPDIR/github-curl.out 2>&1\n    cat $TEMPDIR/github-curl.out\n    grep \"< Set-Cookie: logged_in=yes;\" $TEMPDIR/github-curl.out\n    rm -rf $TEMPDIR\n  else\n    echo NOT READY\n  fi\n}\n\nfunction ghe2ha {\n  if [ \"$#\" -ne 1 ]; then\n    echo \"no version specified\"\n  else\n    tag_id=$RANDOM\n    primary=$(ghe2launch $1 $tag_id)\n    replica=$(ghe2launch $1 $tag_id)\n    ghe2configure $primary\n    primary_host=$(ghe2get $primary | awk '{print $2}')\n    ssh_cmd=$(ghe2get $replica)\n    ssh_out=$($ssh_cmd -- ghe-repl-setup $primary_host)\n    ssh_rsa=$(echo \"$ssh_out\"|grep ssh-rsa)\n    if echo \"$ssh_out\" | grep -q ssh-rsa\n    then\n      curl -ik -XPOST https://api_key:$MY_GHE_PASSWORD@$primary_host:8443/setup/api/settings/authorized-keys \\\n         -F authorized_key=@<(echo $ssh_rsa)\n    fi\n    $ssh_cmd -- ghe-repl-setup $primary_host\n    echo \"primary: $primary_host\"\n    echo \"primary:\"\n    ghe2get $primary\n    echo \"replica:\"\n    ghe2get $replica\n  fi\n}\n","markerStore":{"nextMarkerId":6,"markersById":{"0":{"range":{"start":{"row":6,"column":25},"end":{"row":6,"column":25}},"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":62,"undoStack":[{"type":"checkpoint","id":2,"snapshot":{"0":{"range":[[7,0],[7,0]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[8,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[8,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[9,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[9,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[17,17]],"oldText":"","newText":"aws ec2 run-instances \\\n  --security-groups default \"Enterprise 2\"\\\n  --instance-type r3.xlarge \\\n  --image-id ${AMI} \\\n  --block-device-mappings '[{\"DeviceName\":\"/dev/xvdf\",\"Ebs\":{\"VolumeSize\":20,\"VolumeType\":\"gp2\",\"DeleteOnTermination\": true}}]' \\\n  --region eu-west-1 \\\n  --key-name lildude-1 \\\n  --count ${COUNT} \\\n  --ebs-optimized"}},{"type":"change","content":{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[9,0]],"oldText":"","newText":""}},{"type":"checkpoint","id":13,"snapshot":{"0":{"range":[[17,17],[17,17]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":14,"snapshot":{"0":{"range":[[3,18],[3,26]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[3,18],[3,26]],"newRange":[[3,18],[3,19]],"oldText":"buckelij","newText":"l"}},{"type":"change","content":{"oldRange":[[3,19],[3,19]],"newRange":[[3,19],[3,20]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[3,20],[3,20]],"newRange":[[3,20],[3,21]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[3,21],[3,21]],"newRange":[[3,21],[3,22]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[3,22],[3,22]],"newRange":[[3,22],[3,23]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[3,23],[3,23]],"newRange":[[3,23],[3,24]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[3,24],[3,24]],"newRange":[[3,24],[3,25]],"oldText":"","newText":"e"}},{"type":"checkpoint","id":27,"snapshot":{"0":{"range":[[3,25],[3,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":[[3,18],[3,18]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":28,"snapshot":{"0":{"range":[[4,22],[4,30]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[4,22],[4,30]],"newRange":[[4,22],[4,23]],"oldText":"buckelij","newText":"l"}},{"type":"change","content":{"oldRange":[[4,23],[4,23]],"newRange":[[4,23],[4,24]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[4,24],[4,24]],"newRange":[[4,24],[4,25]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[4,25],[4,25]],"newRange":[[4,25],[4,26]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[4,26],[4,26]],"newRange":[[4,26],[4,27]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[4,27],[4,27]],"newRange":[[4,27],[4,28]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[4,28],[4,28]],"newRange":[[4,28],[4,29]],"oldText":"","newText":"e"}},{"type":"checkpoint","id":41,"snapshot":{"0":{"range":[[4,29],[4,29]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"4":{"range":[[4,22],[4,22]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"checkpoint","id":42,"snapshot":{"0":{"range":[[5,13],[5,21]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[5,13],[5,21]],"newRange":[[5,13],[5,14]],"oldText":"buckelij","newText":"g"}},{"type":"change","content":{"oldRange":[[5,14],[5,14]],"newRange":[[5,14],[5,15]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[5,15],[5,15]],"newRange":[[5,15],[5,16]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[5,16],[5,16]],"newRange":[[5,16],[5,17]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[5,17],[5,17]],"newRange":[[5,17],[5,18]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[5,18],[5,18]],"newRange":[[5,18],[5,19]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[5,19],[5,19]],"newRange":[[5,19],[5,20]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[5,20],[5,20]],"newRange":[[5,20],[5,21]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[5,21],[5,21]],"newRange":[[5,21],[5,22]],"oldText":"","newText":"n"}},{"type":"checkpoint","id":59,"snapshot":{"0":{"range":[[5,22],[5,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":60,"snapshot":{"0":{"range":[[6,25],[6,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":61,"snapshot":{"0":{"range":[[6,25],[6,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/github/ghe2aws-tools/functions.sh","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"94aa417d12bc87d12f8d63a4ffe45217aac824f8","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/github/ghe2aws-tools/functions.sh","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/lildude/github/ghe2aws-tools/functions.sh","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":277274},"fuzzy-finder":{"/Users/lildude/github/ghe2aws-tools/functions.sh":1437003167011},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/lildude/github/ghe2aws-tools":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/lildude/github/ghe2aws-tools/functions.sh","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}