{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/lildude/tmp/case-notes"],"buffers":[{"text":"Hmmm, the SSH/github-gitauth behaviour is odd.\n\nLooking in github-logs/unicorn.log we can see the following exception:\n\n```\napp=github env=production enterprise=true now=\"2015-03-25T12:18:32+08:00\" controller=\"Api::Enterprise\" remote_address=127.0.0.1 request_id=fd8ef456-3ef7-4835-a15a-b0f31c6b06c0 request_method=get version=v3 at=start\nNoMethodError - undefined method `ldap_profile' for GitHub:Module:\n  /data/github/current/app/api/enterprise/settings_dependency.rb:81:in `ldap_settings'\n  /data/github/current/app/api/enterprise/settings_dependency.rb:61:in `block in <class:Enterprise>'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:1213:in `call'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:1213:in `block in compile!'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:786:in `[]'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:786:in `block (3 levels) in route!'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:802:in `route_eval'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:786:in `block (2 levels) in route!'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:823:in `block in process_route'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:821:in `catch'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:821:in `process_route'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:784:in `block in route!'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:783:in `each'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:783:in `route!'\n  /data/github/current/app/api/app/rate_limit_dependency.rb:69:in `block in dispatch!'\n[... truncated for brevity ...]\n```\n\nThis is a known issue: https://github.com/github/enterprise2/issues/2121 fixed in 2.1.0 and later.\n\n\nFrom the support bundle, we can see the failure to connect with github-auth took place at about 14:30:\n\n```\n2015-03-25 14:30:55 +0800:  Soft fail on try #9 to hit '127.0.0.1:4328': Connection refused - connect(2) for \"127.0.0.1\" port 4328\n```\n\nFrom the unicorn log we can see it wasn't up yet:\n\n```\nexecuting [\"/data/github/current/bin/unicorn\", \"--env\", \"production\", \"--config-file\", \"config/unicorn.rb\", \"config.ru\", {7=>#<Kgio::UNIXServer:fd 7>, 8=>#<Kgio::TCPServer:fd 8>}] (in /data/github/current)\nUnicorn server starting in enterprise mode ...\nI, [2015-03-25T14:30:33.290138 #15176]  INFO -- : inherited addr=/data/github/current/tmp/sockets/unicorn.sock fd=7\nI, [2015-03-25T14:30:33.300650 #15176]  INFO -- : inherited addr=127.0.0.1:4327 fd=8\nI, [2015-03-25T14:30:33.301151 #15176]  INFO -- : Refreshing Gem list\napp=github env=production enterprise=true now=\"2015-03-25T14:30:46+08:00\" user=nil repo=nil route=nil zone=UTC referrer=nil requested_at=\"2015-03-25 06:30:46 UTC\" url=\"http://localhost/\" controller=DashboardController action=index req\nuest_id=41053322-9d1b-490f-9499-2592de714db6 dbconn=write oauth_access_id=nil user_session_id=nil at=start\napp=github env=production enterprise=true now=\"2015-03-25T14:30:46+08:00\" request_id=41053322-9d1b-490f-9499-2592de714db6 controller=DashboardController action=index status=302 at=finish elapsed=0.294\napp=github env=production enterprise=true now=\"2015-03-25T14:30:46+08:00\" request_id=41053322-9d1b-490f-9499-2592de714db6 remote_address=127.0.0.1 request_method=get path_info=\"/\" content_length=88 user_agent=Ruby accept=*/* language=\nnil status=302 at=finish elapsed=0.610\nworker=0 ready\nworker=1 ready\nworker=2 ready\nworker=3 ready\nworker=4 ready\nworker=5 ready\nmaster process ready\nworker=6 ready\nworker=7 ready\nreaped #<Process::Status: pid 21138 exit 0> worker=1\nreaped #<Process::Status: pid 21164 exit 0> worker=3\nreaped #<Process::Status: pid 21149 exit 0> worker=2\nreaped #<Process::Status: pid 21133 exit 0> worker=0\nreaped #<Process::Status: pid 21168 exit 0> worker=4\nreaped #<Process::Status: pid 21171 exit 0> worker=5\nreaped #<Process::Status: pid 21182 exit 0> worker=6\nreaped #<Process::Status: pid 21186 exit 0> worker=7\nmaster complete\napp=github env=production enterprise=true now=\"2015-03-25T14:36:11+08:00\" controller=\"Api::Enterprise\" remote_address=127.0.0.1 request_id=35479257-d469-4578-bb5b-66cc81a8b76a request_method=get version=v3 at=start\nNoMethodError - undefined method `ldap_profile' for GitHub:Module:\n  /data/github/current/app/api/enterprise/settings_dependency.rb:81:in `ldap_settings'\n  /data/github/current/app/api/enterprise/settings_dependency.rb:61:in `block in <class:Enterprise>'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:1213:in `call'\n  /data/github/current/vendor/gems/2.1.5/ruby/2.1.0/gems/sinatra-1.3.2.github/lib/sinatra/base.rb:1213:in `block in compile!'\n```\n\nThe NoMethodError correlates to when the support bundle was gathered.\n\nSo why were those processes all reaped just after they were started?\n\nLooking at the upstart log it looks like the unicorn processes never started:\n\n```\nWed Mar 25 14:33:47 AWST 2015 children pids for gitauth: 0\nWed Mar 25 14:33:47 AWST 2015 Waiting for unicorn workers...\nWed Mar 25 14:33:48 AWST 2015 children pids for gitauth: 0\nWed Mar 25 14:33:48 AWST 2015 Waiting for unicorn workers...\nWed Mar 25 14:33:49 AWST 2015 unicorn workers for gitauth failed to start.\ngithub-gitauth stop/post-start, (post-start) process 16000\n```\n\n--------------------------------------------------------------------------------\n\n26 March 2015:\n\nSo I've found I can reproduce this behaviour with github-gitauth by putting a random PID into /data/github/shared/pids/unicorn-gitauth.pid and then running `ghe-config-apply --full` on 2.0.5 and 2.1.5.\n\nI think the problem comes in we spin in post-start script of /etc/init/github-gitauth.conf waiting for the unicorns with the bogus PID and this times out so the service is stopped.\n\n\n--------------------------------------------------------------------------------\n\n31 March 2015:\n\nTesting idea: create an rc script that automatically populates all the PID files with a random PID and see what happens.  This may be the workaround for Gareth: create an rc script that deletes all these files on boot.\n\nAfter more testing, I'm pretty certain they're hitting the race condition that causes https://github.com/github/enterprise2/issues/3338 .\n\nI created a script that does this:\n\n```\n#!/bin/sh\n\nx=11111\nfor pidfile in `grep pidfile= /etc/init/* | awk '{ print $2 }' | cut -d= -f2 | grep -v render`; do\n  if [ -f $pidfile ]; then\n    echo $x > $pidfile\n    x=$((x+1))\n  fi\ndone\n```\n\nI ran it and then `ghe-config-apply --full`\n\nPopulating all the PID files with bogus PIDs and saving the settings causes all sorts of trouble which a reboot is the only way to rectify.\n\nWill now test with the latest ent2 master which should fix this.\n\n\nNope, it doesn't.  I don't even need to save the config... github-gitauth breaks the moment I bung a bogus PID into /data/github/shared/pids/unicorn-gitauth.pid\n\n\nI wonder how things behave if I power off a 2.1.5 Fusion VM.  In theory this should leave a load of bogus PID files all over the show.  Lets see...\n\nPID before poweroff:\n\n```\nadmin@192-168-2-215:~$ cat /data/github/shared/pids/unicorn-gitauth.pid\n3403\nadmin@192-168-2-215:~$\n```\n\nAfter first boot after poweroff:\n\n```\nadmin@192-168-2-215:~$ cat /data/github/shared/pids/unicorn-gitauth.pid\n3574\nadmin@192-168-2-215:~$\n```\n\nSo this works as expected on 2.1.5.  What about 2.0.5 like the customer is using?\n\nBefore poweroff:\n\n```\nadmin@ghe-205dev-vm:~$ cat /data/github/shared/pids/unicorn-gitauth.pid\n13706\nadmin@ghe-205dev-vm:~$\n```\n\nAfter first boot after poweroff:\n\n```\nadmin@ghe-205dev-vm:~$ cat /data/github/shared/pids/unicorn-gitauth.pid\n3997\nadmin@ghe-205dev-vm:~$\n```\n\nNope. WFM!!!\n\nNow the thing is my VM is performing a full boot so ghe-storage-prepare is being run causing all services to be started gracefully.  Is the customer doing the same thing?\n","markerStore":{"nextMarkerId":62,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":36,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/Downloads/case-notes/gareth-white-gitauth.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"de87a7114e1b1707c2aed63aa5efc8b7cbcd8ba7","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"Planned response based on what I get back from Dirkjan and the security peeps.\n\n\n\n\nHi Gary\n\nThanks for your scan report.  \n\nIt appears to however be aimed at web servers rather than email servers and doesn't take into account that this cipher doesn't need to be disabled and probably shouldn't be disabled on SMTP servers.\n\nFrom http://www.postfix.org/TLS_README.html#server_cipher\n\n> By default anonymous ciphers are enabled. They are automatically disabled when remote SMTP client certificates are requested. If clients are expected to always verify the Postfix SMTP server certificate you may want to disable anonymous ciphers by setting \"smtpd_tls_mandatory_exclude_ciphers = aNULL\" or \"smtpd_tls_exclude_ciphers = aNULL\", as appropriate. One can't force a remote SMTP client to check the server certificate, so excluding anonymous ciphers is generally unnecessary.\n\n... and http://www.postfix.org/TLS_README.html#client_cipher\n\n> By default anonymous ciphers are allowed, and automatically disabled when remote SMTP server certificates are verified. If you want to disable anonymous ciphers even at the \"encrypt\" security level, set \"smtp_tls_mandatory_exclude_ciphers = aNULL\"; and to disable anonymous ciphers even with opportunistic TLS, set \"smtp_tls_exclude_ciphers = aNULL\". There is generally no need to take these measures. Anonymous ciphers save bandwidth and TLS session cache space, if certificates are ignored, there is little point in requesting them.\n\nIf client certificates aren't used, you'd still be vulnerable to a man-in-the-middle attack, regardless of the cipher used.\n\nIf you really want to disable these ciphers, you can add the above mentioned entries to your `/etc/postfix/main.cf` file using `sudo vi /etc/postfix/main.cf`.  Your changes will however be lost on future upgrades.\n\nI've opened up an issue to discuss possibly adding these options to our default configuration in future releases.\n\n— Colin\n","markerStore":{"nextMarkerId":62,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":50,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/Downloads/case-notes/smtp-aNULL-cipher.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b48cf3584acaef231b796f9829de64a3cc61be77","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"[ZD#21506](https://enterprise.github.com/tickets/21506)\n\nExplaining Adding collaborators on private Org repos and their forks\n\n\n> But users can still add teams, just not individual collaborators, right?\n\nSort of.  Only members of a team with \"Admin\" permissions on the repositories assigned to that team within the Organization, or who are members of the Organization's Owners team, can add another team to their fork of an Organization's private repository.\n\n> So what determines which groups are available for them to add?\n\nIf the user is a member of an Team with \"Admin\" permissions, the only teams they can add are teams they are already a member of.  Users can not add teams to their forks of the Organization's private repository if their permissions are \"Read\" or \"Write\", they can however remove access for the team they are a member of.\n\nMembers of the Owners team in the Organization can add any Team to their fork of the Organization's private repository.\n\nEssentially, the permissions granted to the private repository within the Organization extend to the private fork of that repository too.\n\n\nI think an example will help here.  Suppose you have the following Organization and team structure:\n\n```\n- org1\n  - repos: For this example, these are both private repositories.\n    - repo1\n    - repo2\n  - Owners: Members of this team have full access to all repos and teams.\n    - user3\n  - admin-team: Has \"Admin\" team permissions configured.\n    - user1\n    - repo1\n  - read-team: Has \"Read\" team permissions configured.\n    - user1\n    - repo2\n  - write-team: Has \"Write\" team permissions configured.\n    - user2\n    - repo2\n```\n\nUsing this example...\n\n- user1\n  - can fork repo1\n  - can not fork repo2\n  - can add the read-team to their list of collaborators on their private fork of repo1 as they are a member of the read-team.\n  - can not add the write-team to their list of collaborators as they are not a member of that team\n  - can remove the admin-team from their list of collaborators on their private fork of repo1 if they wish\n- user2\n  - can fork repo2\n  - can not fork repo1\n  - can not add any teams to their fork of repo2\n- user3 is the only member of the Organization's Owners team so they are the only user that has full control over all repositories, users and teams within this Organization.\n\n\n---\n\nI think they're hitting the inconsistencies documented in https://github.com/github/github/issues/25156.\n\nIn their screenshot they're seeing different teams automatically added and different teams in the dropdown.\n\n\n\nStart of a response, though it needs testing and confirming:\n\nHi Michael\n\nI've dug into this today and you've spotted a little oddity that affects GitHub.com too which our developers are working on to improve.\n\nAs it currently stands, the user's fork of the organisation repository inherits the parent repository collaborators as they stand _at the time of creation_, ie at the time the fork is created.  This fork's collaborators are not automatically updated when the repository is added to more teams.\n\nWorded differently, the idea behind the collaborators is for a network of collaborators to be created.  When you fork a repository which already has collaborators, you get all those collaborators automatically as they're already in the network.  The confusion comes in in that we don't currently update this list when teams are added or removed from the collaboration network so one fork may have more collaborators by default than another, depending on when they forked in relation to when the original repository was added to various teams.\n\nIn your screenshot you probably forked your fork before your user did and before you assigned the repository to the \"Build Users\" and \"Green\" teams.  If you delete your fork and re-fork you should see the similar teams added automatically to your list of collaborators.\n","markerStore":{"nextMarkerId":11,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":60,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":9},"end":{"row":0,"column":10}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"3":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"4":{"range":{"start":{"row":0,"column":9},"end":{"row":0,"column":10}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"5":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"6":{"range":{"start":{"row":0,"column":9},"end":{"row":0,"column":10}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"9":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"10":{"range":{"start":{"row":0,"column":9},"end":{"row":0,"column":10}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/Downloads/case-notes/thousandeyes-private-org-repo-perms.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5d87baedd5b976d2d9a1058f55714d42bb69ab3c","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"[#2811](https://github.com/github/enterprise2/issues/2811)\n\nDuplicate github_audit events when forwarding logs on 2.2.2.\n\nWe now use syslog-ng but appear to have a similar config issue we had before.\n\nWe still log github_audit events to both /var/log/syslog and /var/log/github/audit.log though we don't seem to forward /var/log/syslog so the duplicate forwarding must be coming from somewhere else.\n\nI think the first thing to do is stop the duplicate logging locally.  We don't need these events in both syslog and audit.log.\n\nLooking through the config I can see we log to /var/log/github/audit.log and /var/log/syslog thanks to:\n\n```\n# Github Audit log\ndestination d_audit { file(\"/var/log/github/audit.log\"); };\ndestination d_syslog { file(\"/var/log/syslog\"); };\n\nfilter f_audit_tag { match(\"github_audit\" value(\"PROGRAM\")); };\nfilter f_audit { facility(local7) or filter(f_audit_tag); };\nfilter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };   <--- This will log everything not excluded here, including the local7 facility we use for github_audit events.\n\nlog { source(s_src); filter(f_syslog3); destination(d_syslog); };\nlog { source(s_src); filter(f_audit); destination(d_audit); destination(d_net); };\n```\n\nThis is fixed by modifying the `f_syslog3` filter to:\n\n```\nfilter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug) and not filter(f_audit); };\n```\n\nThis stops the duplicate entries locally, but not the duplicate forwards.\n\nThe duplicate forwards are happening because:\n\n```\n# All messages send to a remote site\n#\nlog { source(s_src); source(s_postfix); destination(d_net); };\n```\n\n... includes local7.\n\nThe solution here is to not bother forwarding the audit logs individually as they're included in the above line so changing:\n\n```\nlog { source(s_src); filter(f_audit); destination(d_audit); destination(d_net); };\n```\n\n... to ...\n\n```\nlog { source(s_src); filter(f_audit); destination(d_audit); };\n```\n\n... does the trick.\n\nI also noticed duplicate haproxy entries in /var/log/syslog.  These shouldn't be here either.  This is because we use local1 for haproxy and don't exclude it from the syslog filter.  Adding it as such solves this problem:\n\n```\n","markerStore":{"nextMarkerId":59,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":70,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"22":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"23":{"range":{"start":{"row":0,"column":6},"end":{"row":0,"column":7}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"51":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"52":{"range":{"start":{"row":0,"column":6},"end":{"row":0,"column":7}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"53":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"54":{"range":{"start":{"row":0,"column":6},"end":{"row":0,"column":7}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"57":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"58":{"range":{"start":{"row":0,"column":6},"end":{"row":0,"column":7}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/Downloads/case-notes/dup-github_audit-syslog.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d10120d9318da44c61938d4d95ad0288049252da","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"All of this will be moot in 2.3.0 as admin can see all.\n\n\nResponse for https://halp.githubapp.com/inboxes/enterprise-support/discussions/eb840dd021b811e586fc201ff0e120f7 when I'm done testing:\n\nHi Walt\n\nI've been chatting with a few of our developers (we're having our annual Summit this week) and I've been reminded that our next feature release, GitHub Enterprise 2.3.0, should solve all your issues as the changes to the API to allow an admin to list and query all repositories, including private and individual user repositories, has been integrated.\n\nI've performed a quick test on our latest internal build and I can confirm this is indeed the case.\n\nWe don't have a scheduled release date yet, but I can confirm we're in the early stages of testing this release so it shouldn't be too long before it is released.\n\n— Colin\n\nList all user-owned repos and collaborators:\n\n```\nSELECT u.login AS \"user\", r.name as \"repo\",\n\n```\n\n\nList all orgs and the repos in each and display the perms:\n\n```\nSELECT o.login AS \"org\", t.permission AS \"perm\", u.login AS \"user\", e.email AS \"email\", t.name AS \"team_name\", t.id AS \"team_id\", tm.created_at AS \"created_at\"\n    -> FROM team_members `tm`\n    -> LEFT JOIN users `u` ON (tm.user_id = u.id)\n    -> LEFT JOIN user_emails `e` ON (tm.user_id = e.user_id )\n    -> LEFT JOIN users `o` ON (tm.organization_id = o.id)\n    -> LEFT JOIN teams `t` ON (tm.team_id = t.id)\n    -> LEFT JOIN abilities `ab` ON (ab.actor_id = u.id AND ab.subject_id = t.id)\n    -> WHERE (ab.actor_type = 'User' AND ab.subject_type = 'Team' AND ab.priority = 1) AND (o.type = 'Organization') AND (u.login IS NOT NULL) AND (u.suspended_at IS NULL)\n    -> ORDER BY org ASC, perm ASC, user ASC;\n```\n\nProduces output like:\n\n```\n+-------------------+-------+---------------+----------------------+----------------+---------+---------------------+\n| org               | perm  | user          | email                | team_name      | team_id | created_at          |\n+-------------------+-------+---------------+----------------------+----------------+---------+---------------------+\n| admin-org         | admin | ghe-admin     | lildood@gmail.com    | Owners         |      11 | 2014-10-09 10:12:45 |\n| admin-org         | admin | ghe-admin     | lildood@gmail.com    | admin          |      13 | 2014-11-20 09:49:50 |\n| admin-org         | admin | ghe-admin     | lildood@gmail.com    | devs2          |      14 | 2014-11-20 09:50:10 |\n| admin-org         | pull  | alowe         | alowe@my.corp        | devs           |      12 | 2015-05-23 18:07:54 |\n| admin-org         | pull  | ebeatty       | ebeatty@road.local   | devs           |      12 | 2015-05-19 16:24:44 |\n| admin-org         | pull  | ghe-admin     | lildood@gmail.com    | dave_n_co_ro   |      22 | 2015-05-27 21:15:09 |\n| admin-org         | pull  | jdavis        | jdavis@my.corp       | dave_n_co_ro   |      22 | 2015-05-27 21:17:01 |\n| Big-Corp          | admin | mweber        | mweber@big.corp      | Owners         |       2 | 2014-07-01 12:29:20 |\n| Big-Corp          | admin | rdoyle        | rdoyle@big.corp      | developers     |       3 | 2014-07-01 12:32:09 |\n| Big-Corp          | admin | rhaley        | rhaley@big.corp      | developers     |       3 | 2014-07-01 12:32:28 |\n| Big-Corp          | admin | shudson       | shudson@big.corp     | Owners         |       2 | 2014-07-01 12:29:05 |\n| Big-Corp          | admin | shudson       | shudson@big.corp     | developers     |       3 | 2014-07-01 12:31:59 |\n| Big-Corp          | admin | tgutmann      | tgutmann@big.corp    | Owners         |       2 | 2014-07-01 12:29:14 |\n| Big-Corp          | admin | tmoen         | tmoen@big.corp       | developers     |       3 | 2014-07-01 12:32:32 |\n| Big-Corp          | pull  | amckenzie     | amckenzie@big.corp   | non-developers |       4 | 2014-07-01 12:42:42 |\n| Big-Corp          | pull  | rwalsh        | rwalsh@big.corp      | non-developers |       4 | 2014-07-01 12:42:38 |\n| Big-Corp          | pull  | shudson       | shudson@big.corp     | non-developers |       4 | 2014-07-01 12:42:18 |\n| Big-Corp          | pull  | smiller       | smiller@big.corp     | non-developers |       4 | 2014-07-01 12:42:29 |\n| devtools          | admin | ghe-admin     | lildood@gmail.com    | Owners         |      17 | 2015-03-23 10:10:43 |\n| ebeatyorg         | admin | ebeatty       | ebeatty@road.local   | Owners         |      21 | 2015-05-14 17:12:15 |\n| EmAIL             | admin | apfannerstill | apfannerstill@em.ail | Owners         |       5 | 2014-07-01 13:23:14 |\n| EmAIL             | admin | apfannerstill | apfannerstill@em.ail | developers     |       6 | 2014-07-01 13:24:44 |\n| EmAIL             | admin | kcasper       | kcasper@em.ail       | Owners         |       5 | 2014-07-01 13:23:01 |\n| EmAIL             | admin | kcasper       | kcasper@em.ail       | developers     |       6 | 2014-07-01 13:24:38 |\n| EmAIL             | admin | khilpert      | khilpert@em.ail      | Owners         |       5 | 2014-07-01 13:23:09 |\n| EmAIL             | admin | mgoodwin      | mgoodwin@em.ail      | Owners         |       5 | 2014-07-01 13:23:22 |\n| EmAIL             | pull  | kcasper       | kcasper@em.ail       | non-developers |       7 | 2014-07-01 13:25:29 |\n| EmAIL             | pull  | khilpert      | khilpert@em.ail      | non-developers |       7 | 2014-07-01 13:25:35 |\n| EmAIL             | pull  | mgoodwin      | mgoodwin@em.ail      | non-developers |       7 | 2014-07-01 13:25:39 |\n| github-enterprise | admin | ghost         | ghost@github.com     | Owners         |       1 | 2014-07-01 11:34:29 |\n| MyCorp            | admin | aheidenreich  | aheidenreich@my.corp | developers     |       9 | 2014-07-01 13:49:24 |\n| MyCorp            | admin | alowe         | alowe@my.corp        | developers     |       9 | 2014-07-01 13:49:31 |\n| MyCorp            | admin | erogahn       | erogahn@my.corp      | developers     |       9 | 2014-07-01 13:49:33 |\n| MyCorp            | admin | jdavis        | jdavis@my.corp       | developers     |       9 | 2014-07-01 13:49:27 |\n| MyCorp            | admin | mwill         | mwill@my.corp        | developers     |       9 | 2014-07-01 13:49:29 |\n| MyCorp            | admin | skihn         | skihn@my.corp        | Owners         |       8 | 2014-07-01 13:47:45 |\n| MyCorp            | admin | skihn         | skihn@my.corp        | developers     |       9 | 2014-07-01 13:49:12 |\n| MyCorp            | push  | dschultz      | dschultz@my.corp     | junior-devs    |      10 | 2014-07-01 13:51:18 |\n| MyCorp            | push  | ghaag         | ghaag@my.corp        | junior-devs    |      10 | 2014-07-01 13:51:02 |\n| MyCorp            | push  | skihn         | skihn@my.corp        | junior-devs    |      10 | 2014-07-01 13:50:58 |\n| MyOrg             | admin | ebeatty       | ebeatty@road.local   | ci-team        |      20 | 2015-05-01 09:35:48 |\n| MyOrg             | admin | ghe-admin     | lildood@gmail.com    | Owners         |      16 | 2015-03-17 16:08:45 |\n| MyOrg             | admin | ghe-admin     | lildood@gmail.com    | TeamA          |      18 | 2015-03-23 10:46:40 |\n| MyOrg             | admin | ghe-admin     | lildood@gmail.com    | ci-team        |      20 | 2015-05-01 09:22:25 |\n| MyOrg             | push  | ghe-admin     | lildood@gmail.com    | TeamB          |      19 | 2015-03-23 10:47:27 |\n+-------------------+-------+---------------+----------------------+----------------+---------+---------------------+\n45 rows in set (0.00 sec)\n```\n","markerStore":{"nextMarkerId":2659,"markersById":{"0":{"range":{"start":{"row":7,"column":29},"end":{"row":7,"column":29}},"properties":{"type":"selection","editorId":76,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":904,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/Downloads/case-notes/custom-reports.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"58a51bd6424e734c81f80c9a4cbf95433a9671d0","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":36,"softTabs":true,"displayBuffer":{"id":37,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/case-notes/gareth-white-gitauth.md","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":50,"softTabs":true,"displayBuffer":{"id":51,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/case-notes/smtp-aNULL-cipher.md","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":60,"softTabs":true,"displayBuffer":{"id":61,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/case-notes/thousandeyes-private-org-repo-perms.md","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":70,"softTabs":true,"displayBuffer":{"id":71,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/case-notes/dup-github_audit-syslog.md","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":76,"softTabs":true,"displayBuffer":{"id":77,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Downloads/case-notes/custom-reports.md","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/lildude/Downloads/case-notes/gareth-white-gitauth.md","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-todo","language-hyperlink"],"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":192497849},"find-and-replace":{"viewState":"","modelState":{"useRegex":true,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["\\\\n"],"replaceHistory":["\\n"],"pathsHistory":["\\n"]},"fuzzy-finder":{"/Users/lildude/Downloads/case-notes/gareth-white-gitauth.md":1444561819741,"/Users/lildude/Downloads/case-notes/smtp-aNULL-cipher.md":1432328054376,"/Users/lildude/Downloads/case-notes/thousandeyes-private-org-repo-perms.md":1432922684656,"/Users/lildude/Downloads/case-notes/dup-github_audit-syslog.md":1436814725489,"/Users/lildude/Downloads/case-notes/custom-reports.md":1441351371785},"tree-view":{"directoryExpansionStates":{"/Users/lildude/tmp/case-notes":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/lildude/tmp/case-notes/gareth-white-gitauth.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"keybinding-resolver":{},"tabs":[{}],"linter":{"scope":"File"}}}