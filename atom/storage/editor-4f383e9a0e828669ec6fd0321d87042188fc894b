{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/lildude/.atom"],"buffers":[{"text":"'scopeName': 'source.coffee'\n'name': 'CoffeeScript'\n'fileTypes': [\n  'coffee'\n  'Cakefile'\n  'coffee.erb'\n  'cson'\n  '_coffee'\n]\n'firstLineMatch': '^#!.*\\\\bcoffee'\n'foldingStartMarker': '^\\\\s*class\\\\s+\\\\S.*$|.*(->|=>)\\\\s*$|.*[\\\\[{]\\\\s*$'\n'foldingStopMarker': '^\\\\s*$|^\\\\s*[}\\\\]]\\\\s*$'\n'patterns': [\n  {\n    'captures':\n      '1':\n        'name': 'variable.parameter.function.coffee'\n      '2':\n        'name': 'storage.type.function.coffee'\n    'comment': 'match stuff like: a -> â€¦ '\n    'match': '(\\\\([^()]*?\\\\))\\\\s*([=-]>)'\n    'name': 'meta.inline.function.coffee'\n  }\n  {\n    'captures':\n      '1':\n        'name': 'keyword.operator.new.coffee'\n      '4':\n        'name': 'storage.type.class.coffee'\n      '6':\n        'name': 'entity.name.type.instance.coffee'\n      '7':\n        'name': 'entity.name.type.instance.coffee'\n    'match': '(new)\\\\s+(((class)(\\\\s+(\\\\w+(?:\\\\.\\\\w*)*))?)|(\\\\w+(?:\\\\.\\\\w*)*))'\n    'name': 'meta.class.instance.constructor'\n  }\n  {\n    'begin': '\\'\\'\\''\n    'beginCaptures':\n      '0':\n        'name': 'punctuation.definition.string.begin.coffee'\n    'end': '\\'\\'\\''\n    'endCaptures':\n      '0':\n        'name': 'punctuation.definition.string.end.coffee'\n    'name': 'string.quoted.heredoc.coffee'\n  }\n  {\n    'begin': '\"\"\"'\n    'beginCaptures':\n      '0':\n        'name': 'punctuation.definition.string.begin.coffee'\n    'end': '\"\"\"'\n    'endCaptures':\n      '0':\n        'name': 'punctuation.definition.string.end.coffee'\n    'name': 'string.quoted.double.heredoc.coffee'\n    'patterns': [\n      {\n        'match': '\\\\\\\\.'\n        'name': 'constant.character.escape.coffee'\n      }\n      {\n        'include': '#interpolated_coffee'\n      }\n    ]\n  }\n  {\n    'begin': '`'\n    'beginCaptures':\n      '0':\n        'name': 'punctuation.definition.string.begin.coffee'\n    'end': '`'\n    'endCaptures':\n      '0':\n        'name': 'punctuation.definition.string.end.coffee'\n    'name': 'string.quoted.script.coffee'\n    'patterns': [\n      {\n        'match': '(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'\n        'name': 'constant.character.escape.coffee'\n      }\n    ]\n  }\n  {\n    'begin': '(?<!#)###(?!#)'\n    'captures':\n      '0':\n        'name': 'punctuation.definition.comment.coffee'\n    'end': '###(?:[ \\\\t]*\\\\n)'\n    'name': 'comment.block.coffee'\n    'patterns': [\n      {\n        'match': '(?<=^|\\\\s)@\\\\w*(?=\\\\s)'\n        'name': 'storage.type.annotation.coffee'\n      }\n    ]\n  }\n  {\n    'begin': '(#)(?!\\\\{)'\n    'beginCaptures':\n      '1':\n        'name': 'punctuation.definition.comment.coffee'\n    'end': '\\\\n'\n    'name': 'comment.line.number-sign.coffee'\n  }\n  {\n    'begin': '/{3}'\n    'end': '(/{3})[imgy]{0,4}'\n    'name': 'string.regexp.coffee'\n    'beginCaptures':\n      '0':\n        'name': 'punctuation.definition.string.begin.js'\n    'endCaptures':\n      '1':\n        'name': 'punctuation.definition.string.begin.js'\n\n    'patterns': [\n      {\n        'include': '#heregexp'\n      }\n    ]\n\n  }\n  {\n    'begin': '/(?=(?![ /*+?])([^\\\\\\\\]|\\\\\\\\.)*?/[igmy]{0,4}(?![a-zA-Z0-9]))'\n    'end': '(/)[imgy]{0,4}'\n    'name': 'string.regexp.coffee'\n    'patterns': [\n      {\n        'include': 'source.js.regexp'\n      }\n    ]\n    'beginCaptures':\n      '0':\n        'name': 'punctuation.definition.string.begin.js'\n    'endCaptures':\n      '1':\n        'name': 'punctuation.definition.string.begin.js'\n  }\n  {\n    'match': '\\\\b(?<![\\\\.\\\\$])(break|by|catch|continue|else|finally|for|in|of|if|return|switch|then|throw|try|unless|when|while|until|loop|do|(?<=for)\\\\s+own)(?!\\\\s*:)\\\\b'\n    'name': 'keyword.control.coffee'\n  }\n  {\n    'match': '(and|or|<<|>>>?|(?<!\\\\()\\\\/|[=!<>*%+\\\\-&^])?=(?!>)|[!%^*\\\\/~?:]|\\\\-?\\\\-(?!>)|\\\\+\\\\+?|<>|<|>|&&?|\\\\.\\\\.\\\\.?|\\\\|\\\\|?|\\\\b(?<![\\\\.\\\\$])(instanceof|new|delete|typeof|and|or|is|isnt|not|super)(?!\\\\s*:)\\\\b'\n    'name': 'keyword.operator.coffee'\n  }\n  {\n    'match': '\\\\b(?<![\\\\.\\\\$])(case|default|function|var|void|with|const|let|enum|export|import|native|__hasProp|__extends|__slice|__bind|__indexOf|implements|interface|package|private|protected|public|static|yield)(?!\\\\s*:)\\\\b'\n    'name': 'keyword.reserved.coffee'\n  }\n  {\n    'captures':\n      '1':\n        'name': 'variable.assignment.coffee'\n      '4':\n        'name': 'punctuation.separator.key-value'\n      '5':\n        'name': 'keyword.operator.coffee'\n    'match': '([a-zA-Z\\\\$_](\\\\w|\\\\$|\\\\.)*\\\\s*(?!\\\\::)((:)|((?:or|and|[-+/&%*?])?=)(?![>=]))(?!(\\\\s*\\\\(.*\\\\))?\\\\s*([=-]>)))'\n    'name': 'variable.assignment.coffee'\n  }\n  {\n    'begin': '(?<=\\\\s|^)(\\\\{)(?=.+?\\\\}\\\\s+[:=])'\n    'beginCaptures':\n      '0':\n        'name': 'keyword.operator.coffee'\n    'end': '(\\\\}\\\\s*[:=])'\n    'endCaptures':\n      '0':\n        'name': 'keyword.operator.coffee'\n    'name': 'meta.variable.assignment.destructured.object.coffee'\n    'patterns': [\n      {\n        'include': '#variable_name'\n      }\n      {\n        'include': '#instance_variable'\n      }\n      {\n        'include': '#single_quoted_string'\n      }\n      {\n        'include': '#double_quoted_string'\n      }\n      {\n        'include': '#numeric'\n      }\n    ]\n  }\n  {\n    'begin': '(?<=\\\\s|^)(\\\\[)(?=.+?\\\\]\\\\s+[:=])'\n    'beginCaptures':\n      '0':\n        'name': 'keyword.operator.coffee'\n    'end': '(\\\\]\\\\s*[:=])'\n    'endCaptures':\n      '0':\n        'name': 'keyword.operator.coffee'\n    'name': 'meta.variable.assignment.destructured.array.coffee'\n    'patterns': [\n      {\n        'include': '#variable_name'\n      }\n      {\n        'include': '#instance_variable'\n      }\n      {\n        'include': '#single_quoted_string'\n      }\n      {\n        'include': '#double_quoted_string'\n      }\n      {\n        'include': '#numeric'\n      }\n    ]\n  }\n  {\n    'captures':\n      '1':\n        'name': 'entity.name.function.coffee'\n      '3':\n        'name': 'variable.parameter.function.coffee'\n      '4':\n        'name': 'storage.type.function.coffee'\n    'match': '(?<=^|\\\\s)(?=@?[a-zA-Z\\\\$_])(@?[a-zA-Z\\\\$_](\\\\w|\\\\$|:|\\\\.)*\\\\s*(?=[:=](\\\\s*\\\\(.*\\\\))?\\\\s*([=-]>)))'\n    'name': 'meta.function.coffee'\n  }\n  {\n    'match': '@?\\\\b(?!class|subclass|extends|decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require)\\\\w+(\\\\s+(?!(of|in|then|is|isnt|and|or|for|else|when|not|if)\\\\s)(?=(\\\\w+|\\\\->|\\\\-\\\\d|\\\\[|\\\\{|\\\"|\\'))|(?=\\\\())'\n    'name': 'entity.name.function.coffee'\n  }\n  {\n    'match': '[=-]>'\n    'name': 'storage.type.function.coffee'\n  }\n  {\n    'match': '\\\\b(?<!\\\\.|::)(true|on|yes)(?!\\\\s*[:=][^=])\\\\b'\n    'name': 'constant.language.boolean.true.coffee'\n  }\n  {\n    'match': '\\\\b(?<!\\\\.|::)(false|off|no)(?!\\\\s*[:=][^=])\\\\b'\n    'name': 'constant.language.boolean.false.coffee'\n  }\n  {\n    'match': '\\\\b(?<!\\\\.|::)null(?!\\\\s*[:=][^=])\\\\b'\n    'name': 'constant.language.null.coffee'\n  }\n  {\n    'match': '\\\\b(?<!\\\\.|::)extends(?!\\\\s*[:=])\\\\b'\n    'name': 'variable.language.coffee'\n  }\n  {\n    'match': '\\\\b(?<!\\\\.)this(?!\\\\s*[:=][^=])\\\\b'\n    'name': 'variable.language.this.coffee'\n  }\n  {\n    'captures':\n      '1':\n        'name': 'storage.type.class.coffee'\n      '2':\n        'name': 'keyword.control.inheritance.coffee'\n      '3':\n        'name': 'entity.other.inherited-class.coffee'\n    'match': '(?<=\\\\s|^|\\\\[|\\\\()(class)\\\\s+(extends)\\\\s+(@?[a-zA-Z\\\\$\\\\._][\\\\w\\\\.]*)'\n    'name': 'meta.class.coffee'\n  }\n  {\n    'captures':\n      '1':\n        'name': 'storage.type.class.coffee'\n      '2':\n        'name': 'entity.name.type.class.coffee'\n      '3':\n        'name': 'keyword.control.inheritance.coffee'\n      '4':\n        'name': 'entity.other.inherited-class.coffee'\n    'match': '(?<=\\\\s|^|\\\\[|\\\\()(class\\\\b)\\\\s+(@?[a-zA-Z\\\\$_][\\\\w\\\\.]*)?(?:\\\\s+(extends)\\\\s+(@?[a-zA-Z\\\\$\\\\._][\\\\w\\\\.]*))?'\n    'name': 'meta.class.coffee'\n  }\n  {\n    'match': '\\\\b(debugger|\\\\\\\\)\\\\b'\n    'name': 'keyword.other.coffee'\n  }\n  {\n    'match': '\\\\b(Array|ArrayBuffer|Blob|Boolean|Date|document|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest)\\\\b'\n    'name': 'support.class.coffee'\n  }\n  {\n    'match': '\\\\b(console)\\\\b'\n    'name': 'entity.name.type.object.coffee'\n  }\n  {\n    'match': '((?<=console\\\\.)(debug|warn|info|log|error|time|timeEnd|assert))\\\\b'\n    'name': 'support.function.console.coffee'\n  }\n  {\n    'match': '\\\\b(decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require)\\\\b'\n    'name': 'support.function.coffee'\n  }\n  {\n    'match': '((?<=\\\\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\\\\b'\n    'name': 'support.function.method.array.coffee'\n  }\n  {\n    'match': '((?<=Array\\\\.)(isArray))\\\\b'\n    'name': 'support.function.static.array.coffee'\n  }\n  {\n    'match': '((?<=Object\\\\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\\\\b'\n    'name': 'support.function.static.object.coffee'\n  }\n  {\n    'match': '((?<=Math\\\\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\\\\b'\n    'name': 'support.function.static.math.coffee'\n  }\n  {\n    'match': '((?<=Number\\\\.)(is(Finite|Integer|NaN)|toInteger))\\\\b'\n    'name': 'support.function.static.number.coffee'\n  }\n  {\n    'match': '(?<!\\\\.)\\\\b(module|exports|__filename|__dirname|global|process)(?!\\\\s*:)\\\\b'\n    'name': 'support.variable.coffee'\n  }\n  {\n    'match': '\\\\b(Infinity|NaN|undefined)\\\\b'\n    'name': 'constant.language.coffee'\n  }\n  {\n    'match': '\\\\;'\n    'name': 'punctuation.terminator.statement.coffee'\n  }\n  {\n    'match': ',[ |\\\\t]*'\n    'name': 'meta.delimiter.object.comma.coffee'\n  }\n  {\n    'match': '\\\\.'\n    'name': 'meta.delimiter.method.period.coffee'\n  }\n  {\n    'match': '\\\\{|\\\\}'\n    'name': 'meta.brace.curly.coffee'\n  }\n  {\n    'match': '\\\\(|\\\\)'\n    'name': 'meta.brace.round.coffee'\n  }\n  {\n    'match': '\\\\[|\\\\]\\\\s*'\n    'name': 'meta.brace.square.coffee'\n  }\n  {\n    'include': '#instance_variable'\n  }\n  {\n    'include': '#single_quoted_string'\n  }\n  {\n    'include': '#double_quoted_string'\n  }\n  {\n    'include': '#numeric'\n  }\n]\n'repository':\n  'double_quoted_string':\n    'patterns': [\n      {\n        'begin': '\"'\n        'beginCaptures':\n          '0':\n            'name': 'punctuation.definition.string.begin.coffee'\n        'end': '\"'\n        'endCaptures':\n          '0':\n            'name': 'punctuation.definition.string.end.coffee'\n        'name': 'string.quoted.double.coffee'\n        'patterns': [\n          {\n            'match': '\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'\n            'name': 'constant.character.escape.coffee'\n          }\n          {\n            'include': '#interpolated_coffee'\n          }\n        ]\n      }\n    ]\n  'embedded_comment':\n    'patterns': [\n      {\n        'captures':\n          '1':\n            'name': 'punctuation.definition.comment.coffee'\n        'match': '(?<!\\\\\\\\)(#).*$\\\\n?'\n        'name': 'comment.line.number-sign.coffee'\n      }\n    ]\n  'instance_variable':\n    'patterns': [\n      {\n        'match': '(@)([a-zA-Z_\\\\$]\\\\w*)?'\n        'name': 'variable.other.readwrite.instance.coffee'\n      }\n    ]\n  'interpolated_coffee':\n    'patterns': [\n      {\n        'begin': '\\\\#\\\\{'\n        'captures':\n          '0':\n            'name': 'punctuation.section.embedded.coffee'\n        'end': '\\\\}'\n        'name': 'source.coffee.embedded.source'\n        'patterns': [\n          {\n            'include': '$self'\n          }\n        ]\n      }\n    ]\n  'numeric':\n    'patterns': [\n      {\n        'match': '(?<!\\\\$)\\\\b((0([box])[0-9a-fA-F]+)|([0-9]+(\\\\.[0-9]+)?(e[+\\\\-]?[0-9]+)?))\\\\b'\n        'name': 'constant.numeric.coffee'\n      }\n    ]\n  'single_quoted_string':\n    'patterns': [\n      {\n        'begin': '\\''\n        'beginCaptures':\n          '0':\n            'name': 'punctuation.definition.string.begin.coffee'\n        'end': '\\''\n        'endCaptures':\n          '0':\n            'name': 'punctuation.definition.string.end.coffee'\n        'name': 'string.quoted.single.coffee'\n        'patterns': [\n          {\n            'match': '\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'\n            'name': 'constant.character.escape.coffee'\n          }\n        ]\n      }\n    ]\n  'variable_name':\n    'patterns': [\n      {\n        'captures':\n          '1':\n            'name': 'variable.assignment.coffee'\n        'match': '([a-zA-Z\\\\$_]\\\\w*(\\\\.\\\\w+)*)'\n        'name': 'variable.assignment.coffee'\n      }\n    ]\n  'regex-character-class':\n    'patterns': [\n      {\n        'match': '\\\\\\\\[wWsSdD]|\\\\.'\n        'name': 'constant.character.character-class.regexp'\n      }\n      {\n        'match': '\\\\\\\\([0-7]{3}|x\\\\h\\\\h|u\\\\h\\\\h\\\\h\\\\h)'\n        'name': 'constant.character.numeric.regexp'\n      }\n      {\n        'match': '\\\\\\\\c[A-Z]'\n        'name': 'constant.character.control.regexp'\n      }\n      {\n        'match': '\\\\\\\\.'\n        'name': 'constant.character.escape.backslash.regexp'\n      }\n    ]\n  'heregexp':\n    'patterns': [\n      {\n        'match': '\\\\\\\\[bB]|\\\\^|\\\\$'\n        'name': 'keyword.control.anchor.regexp'\n      }\n      {\n        'match': '\\\\\\\\[1-9]\\\\d*'\n        'name': 'keyword.other.back-reference.regexp'\n      }\n      {\n        'match': '[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??'\n        'name': 'keyword.operator.quantifier.regexp'\n      }\n      {\n        'match': '\\\\|'\n        'name': 'keyword.operator.or.regexp'\n      }\n      {\n        'begin': '(\\\\()((\\\\?=)|(\\\\?!))'\n        'beginCaptures':\n          '1':\n            'name': 'punctuation.definition.group.regexp'\n          '3':\n            'name': 'meta.assertion.look-ahead.regexp'\n          '4':\n            'name': 'meta.assertion.negative-look-ahead.regexp'\n        'end': '(\\\\))'\n        'endCaptures':\n          '1':\n            'name': 'punctuation.definition.group.regexp'\n        'name': 'meta.group.assertion.regexp'\n        'patterns': [\n          {\n            'include': '#heregexp'\n          }\n        ]\n      }\n      {\n        'begin': '\\\\((\\\\?:)?'\n        'beginCaptures':\n          '0':\n            'name': 'punctuation.definition.group.regexp'\n        'end': '\\\\)'\n        'endCaptures':\n          '0':\n            'name': 'punctuation.definition.group.regexp'\n        'name': 'meta.group.regexp'\n        'patterns': [\n          {\n            'include': '#heregexp'\n          }\n        ]\n      }\n      {\n        'begin': '(\\\\[)(\\\\^)?'\n        'beginCaptures':\n          '1':\n            'name': 'punctuation.definition.character-class.regexp'\n          '2':\n            'name': 'keyword.operator.negation.regexp'\n        'end': '(\\\\])'\n        'endCaptures':\n          '1':\n            'name': 'punctuation.definition.character-class.regexp'\n        'name': 'constant.other.character-class.set.regexp'\n        'patterns': [\n          {\n            'captures':\n              '1':\n                'name': 'constant.character.numeric.regexp'\n              '2':\n                'name': 'constant.character.control.regexp'\n              '3':\n                'name': 'constant.character.escape.backslash.regexp'\n              '4':\n                'name': 'constant.character.numeric.regexp'\n              '5':\n                'name': 'constant.character.control.regexp'\n              '6':\n                'name': 'constant.character.escape.backslash.regexp'\n            'match': '(?:.|(\\\\\\\\(?:[0-7]{3}|x\\\\h\\\\h|u\\\\h\\\\h\\\\h\\\\h))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x\\\\h\\\\h|u\\\\h\\\\h\\\\h\\\\h))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))'\n            'name': 'constant.other.character-class.range.regexp'\n          }\n          {\n            'include': '#regex-character-class'\n          }\n        ]\n      }\n      {\n        'include': '#regex-character-class'\n      }\n      {\n        'include': '#interpolated_coffee'\n      }\n      {\n        'include': '#embedded_comment'\n      }\n    ]\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":10},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lildude/.atom/packages/language-coffee-script/grammars/coffeescript.cson","digestWhenLastPersisted":"6e13d369af6c6e2d548ffaf2462c04d63a608b5e","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":10,"softTabs":true,"scrollRow":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":11,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lildude/.atom/packages/language-coffee-script/grammars/coffeescript.cson","largeFileMode":false},"largeFileMode":false}}],"activeItemURI":"/Users/lildude/.atom/packages/language-coffee-script/grammars/coffeescript.cson","focused":false,"flexScale":1},"activePaneId":3},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-hyperlink","language-todo"]},"packageStates":{"linter":{"scope":"File"},"metrics":{"sessionLength":40554},"fuzzy-finder":{"/Users/lildude/.atom/packages/language-coffee-script/grammars/coffeescript.cson":1446242998974},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/lildude/.atom":{"isExpanded":true,"entries":{".apm":{"isExpanded":false,"entries":{}},".node-gyp":{"isExpanded":false,"entries":{}},"compile-cache":{"isExpanded":false,"entries":{}},"packages":{"isExpanded":false,"entries":{}},"snippets":{"isExpanded":false,"entries":{}},"storage":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/lildude/.atom/packages","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}