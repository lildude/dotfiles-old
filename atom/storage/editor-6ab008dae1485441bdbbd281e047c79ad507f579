{"mode":"editor","version":1,"windowDimensions":{"x":1,"y":22,"width":1380,"height":829},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lildude/Sites/habari/user/plugins/export","buffers":[{"text":"<?php\n\n\tclass SimpleXMLExtended extends SimpleXMLElement\n\t{\n\t\tpublic function addCData($nodename, $cdata_text)\n\t\t{\n\t\t\t$this->$nodename = null;\n\t\t\t$node = dom_import_simplexml($this->$nodename);\n\t\t\t$no   = $node->ownerDocument;\n\t\t\t$node->appendChild($no->createCDATASection($cdata_text));\n\t\t\treturn $this->$nodename;\n\t\t}\n\t}\n\n\n\tclass Export extends Plugin {\n\n\t\tstatic $version = 1.2;\n\t\tpublic function action_plugin_activation ( $file = '' ) {\n\t\t\tACL::create_token( 'export now', 'Export the Habari database', 'Export' );\n\t\t}\n\n\t\tpublic function action_plugin_deactivation ( $file = '' ) {\n\t\t\tACL::destroy_token( 'export now' );\n\t\t}\n\n\t\tpublic function filter_plugin_config ( $actions, $plugin_id ) {\n\t\t\t// only users with the proper permission should be allowed to export\n\t\t\tif ( User::identify()->can('export now') ) {\n\t\t\t\t$actions['export'] = _t( 'Export' );\n\t\t\t}\n\n\t\t\treturn $actions;\n\t\t}\n\n\t\tpublic function action_plugin_ui_export() {\n\t\t\t$ui = new FormUI( strtolower( __CLASS__ ) );\n\t\t\t$ui->append( 'label', 'export_lbl', _t( 'Export format:' ) );\n\t\t\t$ui->append( 'radio', 'export_fmt', 'null:null', _t( 'Export format:' ), array( 'blogml' => 'BlogML', 'wxr' => 'WordPress eXtended RSS (WXR)')  );\n\t\t\t$ui->append( 'label', 'post_types_lbl', _t( 'Post types to export:') );\n\t\t\t$all_types = Post::list_all_post_types();\n\t\t\tarray_shift( $all_types );\n\t\t\tforeach( $all_types as $key => $value ) {\n\t\t\t\t$ui->append( 'checkbox', \"types_${key}\", 'null:null', _t( ucfirst( $key ) ) );\n\t\t\t}\n\n\t\t\t$ui->append( 'submit', 'save', _t( 'Export' ) );\n\t\t\t$ui->on_success( array( $this, 'do_export' ) );\n\t\t\t$ui->out();\n\t\t}\n\n\t\tpublic static function do_export( $ui ) {\n\t\t\t$fmt = $ui->controls['export_fmt']->value;\n\t\t\t$all_types = Post::list_all_post_types();\n\t\t\tarray_shift( $all_types );\n\t\t\t$incl_types = array();\n\t\t\tforeach( $all_types as $key => $value ) {\n\t\t\t\tif ( $ui->controls[\"types_${key}\"]->value ) {\n\t\t\t\t\t$incl_types[] = $key;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself::run( true, $fmt, $incl_types );\n\t\t}\n\n\t\tpublic static function run ( $download = false, $format = 'blogml', $types = array( 'entry', 'page' ) ) {\n\n\t\t\tPlugins::act('export_run_before');\n\n\t\t\tif ( $format == 'blogml' ) {\n\n\t\t\t\t$export = new SimpleXMLExtended( '<?xml version=\"1.0\" encoding=\"utf-8\"?><blog xmlns=\"http://schemas.habariproject.org/BlogML.xsd\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" />' );\n\t\t\t\t$export->addAttribute( 'root-url', Site::get_path('habari', true) );\n\t\t\t\t$export->addAttribute( 'date-created', HabariDateTime::date_create()->format( DateTime::W3C ) );\n\n\t\t\t\t$export->addCData( 'title', Options::get('title') )->addAttribute( 'type', 'text' );\n\t\t\t\t$export->addCData( 'sub-title', Options::get('tagline') )->addAttribute( 'type', 'text' );\n\n\t\t\t\t// export all the blog's users\n\t\t\t\tself::export_users( $export );\n\n\t\t\t\t// export all the blog's options\n\t\t\t\tself::export_options( $export );\n\n\t\t\t\t// export all the blog's tags\n\t\t\t\tself::export_tags( $export );\n\n\t\t\t\t// export all the blog's posts and pages\n\t\t\t\tself::export_posts( $export, $types );\n\n\t\t\t}\n\t\t\telse if ( $format == 'wxr' ) {\n\n\t\t\t\t$export = new SimpleXMLExtended( '<?xml version=\"1.0\" encoding=\"utf-8\"?><rss version=\"2.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:wp=\"http://wordpress.org/export/1.2/\" />');\n\t\t\t\t$channel = $export->addChild( 'channel' );\n\n\t\t\t\t$channel->title = Options::get('title');\n\t\t\t\t$channel->link = Site::get_url( 'habari' );\n\t\t\t\t$channel->description = Options::get( 'tagline' );\n\t\t\t\t$channel->pubDate = HabariDateTime::date_create()->format( DateTime::RSS );\n\t\t\t\t$channel->generator = 'Habari/' . Version::get_habariversion() . '-Export/' . self::$version;\n\t\t\t\t$channel->{'wp:wxr_version'} = '1.0';\n\t\t\t\t$channel->{'wp:base_site_url'} = Site::get_url( 'host' );\n\t\t\t\t$channel->{'wp:base_blog_url'} = Site::get_url( 'habari' );\n\t\t\t\t// export all authors\n\t\t\t\tself::export_users_wxr( $channel );\n\n\t\t\t\t// export all the blog's tags\n\t\t\t\tself::export_tags_wxr( $channel );\n\n\t\t\t\t// export all the blog's posts and pages\n\t\t\t\tself::export_posts_wxr( $channel, $types );\n\n\t\t\t}\n\n\t\t\tEventLog::log( _t( 'Export completed!' ), 'info', 'export', 'export' );\n\n\t\t\tPlugins::act('export_run_after');\n\n\t\t\t$export = Plugins::filter('export_contents', $export);\n\n\t\t\t// output the xml!\n\t\t\t$xml = $export->asXML();\n\n\t\t\t// filter the xml as well, just for good measure\n\t\t\t$xml = Plugins::filter('export_contents_xml', $xml);\n\n\t\t\tif ( $download ) {\n\t\t\t\tself::download( $xml );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn $xml;\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static function download ( $xml ) {\n\n\t\t\t$timestamp = HabariDateTime::date_create('now')->format('YmdHis');\n\n\t\t\t$filename = 'habari_' . $timestamp . '.xml';\n\n\t\t\t// clear out anything that may have been output before us and disable the buffer\n\t\t\tob_end_clean();\n\n\t\t\theader('Content-Type: text/xml');\n\t\t\theader('Content-disposition: attachment; filename=' . $filename);\n\n\t\t\t// Pretty print the XML - makes for easier debugging\n\t\t\t$dom = new DOMDocument(\"1.0\");\n\t\t\t$dom->preserveWhiteSpace = false;\n\t\t\t$dom->formatOutput = true;\n\t\t\t$dom->loadXML( $xml );\n\t\t\techo $dom->saveXML();\n\t\t\tdie();\n\n\t\t}\n\n\t\t/**\n\t\t * Export all the authors / users on a blog to the SimpleXML object.\n\t\t *\n\t\t * @param SimpleXMLElement $export The SimpleXML element we're using for our export.\n\t\t * @return void\n\t\t */\n\t\tprivate static function export_users( $export ) {\n\n\t\t\t$authors = $export->addChild( 'authors' );\n\n\t\t\t$users = Users::get();\n\t\t\tforeach ( $users as $user ) {\n\n\t\t\t\t$author = $authors->addChild( 'author' );\n\t\t\t\t$author->addAttribute( 'id', $user->id );\n\t\t\t\t$author->addAttribute( 'approved', 'true' );\n\t\t\t\t$author->addAttribute( 'email', $user->email );\n\t\t\t\t$author->addCData( 'title', $user->displayname )->addAttribute( 'type', 'text' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static function export_users_wxr( $export ) {\n\t\t\t$users = Users::get();\n\t\t\tforeach ( $users as $user ) {\n\t\t\t\t$author = $export->addChild( 'wp:author', null, 'http://wordpress.org/export/1.2/' );\n\t\t\t\t$author->{'author_login'} = $user->username;\n\t\t\t\t$author->{'author_email'} = $user->email;\n\t\t\t\t$author->{'author_display_name'} = $user->displayname;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Export all the options stored on the blog to the SimpleXML object.\n\t\t *\n\t\t * @param SimpleXMLElement $export The SimpleXML element we're using for our export.\n\t\t * @return void\n\t\t */\n\t\tprivate static function export_options ( $export ) {\n\n\t\t\t$properties = $export->addChild( 'extended-properties' );\n\n\t\t\t$options = DB::get_results( 'select name, value, type from {options}' );\n\t\t\tforeach ( $options as $option ) {\n\n\t\t\t\t$property = $properties->addChild( 'property' );\n\t\t\t\t$property->addAttribute( 'name', $option->name );\n\t\t\t\t$property->addAttribute( 'value', $option->value );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Export all the tags that exist on the blog to the SimpleXML object.\n\t\t *\n\t\t * @param SimpleXMLElement $export The SimpleXML element we're using for our export.\n\t\t * @return void\n\t\t */\n\t\tprivate static function export_tags ( $export ) {\n\n\t\t\t$categories = $export->addChild( 'categories' );\n\n\t\t\t$tags = Tags::vocabulary()->get_tree();\n\t\t\tforeach ( $tags as $tag ) {\n\n\t\t\t\t$category = $categories->addChild( 'category' );\n\t\t\t\t$category->addAttribute( 'id', $tag->id );\n\t\t\t\t$category['description'] = $tag->term_display;\t\t// overloading because it needs escaping\n\n\t\t\t\t$category->addCData('title', $tag->term);\n\t\t\t\t$category->title['type'] = 'text';\n\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static function export_tags_wxr ( $export ) {\n\n\t\t\t$tags = Tags::vocabulary()->get_tree();\n\t\t\tforeach ( $tags as $tag ) {\n\n\t\t\t\t$t = $export->addChild( 'wp:tag', null, 'http://wordpress.org/export/1.2/' );\n\t\t\t\t$t->{'tag_slug'} = $tag->term;\n\t\t\t\t$t->{'tag_name'} = $tag->term_display;\n\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static function format_permalink ( $url ) {\n\n\t\t\t// get the base url to trim off\n\t\t\t$base_url = Site::get_url( 'habari' );\n\n\t\t\tif ( MultiByte::strpos( $url, $base_url ) !== false ) {\n\t\t\t\t$url = MultiByte::substr( $url, MultiByte::strlen( $base_url ) );\n\t\t\t}\n\n\t\t\treturn $url;\n\n\t\t}\n\n\t\t/**\n\t\t * Export all the posts on the blog, including their tags, comments, and authors.\n\t\t *\n\t\t * @param SimpleXMLElement $export The SimpleXML element we're using for our export.\n\t\t * @return void\n\t\t */\n\t\tprivate static function export_posts ( $export, $content_type = array( 'entry', 'page' ) ) {\n\n\t\t\t$ps = $export->addChild( 'posts' );\n\n\t\t\t$posts = Posts::get( array( 'nolimit' => 1, 'content_type' => $content_type ) );\n\t\t\tforeach ( $posts as $post ) {\n\n\t\t\t\t// create the post object\n\t\t\t\t$p = $ps->addChild( 'post' );\n\n\t\t\t\t// figure out the type of the post\n\t\t\t\tif ( $post->content_type == Post::type( 'entry' ) ) {\n\t\t\t\t\t$type = 'normal';\t\t// blog posts are normal\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$type = 'article';\t\t// articles are pages, i think\n\t\t\t\t}\n\n\n\t\t\t\t// add all the basic post info\n\t\t\t\t$p->addAttribute( 'id', $post->id );\n\t\t\t\t$p->addAttribute( 'date-created', $post->pubdate->format('c') );\n\t\t\t\t$p->addAttribute( 'date-modified', $post->modified->format('c') );\n\t\t\t\t$p->addAttribute( 'approved', $post->status == Post::status('published') ? 'true' : 'false' );\n\t\t\t\t$p->addAttribute( 'post-url', $this->format_permalink( $post->permalink ) );\n\t\t\t\t$p->addAttribute( 'type', $type );\n\n\t\t\t\t// the post title is already being escaped somewhere, so don't use overloading to escape it again\n\t\t\t\t$p->addCData( 'title', $post->title )->addAttribute( 'type', 'text' );\n\n\t\t\t\t// we use attribute overloading so they get escaped properly\n\t\t\t\t$p->addCData('content', $post->content)->addAttribute( 'type', 'text' );\n\t\t\t\t$p->{'post-name'} = $post->slug;\n\n\t\t\t\t// now add the post tags\n\t\t\t\t$pt = $p->addChild( 'categories' );\n\n\t\t\t\t$tags = $post->tags;\n\t\t\t\tforeach ( $tags as $tag ) {\n\n\t\t\t\t\t$pt->addChild( 'category' )->addAttribute( 'ref', $tag->id );\n\n\t\t\t\t}\n\n\t\t\t\t// another habari extension -- post info!\n\t\t\t\t$properties = $p->addChild( 'extended-properties' );\n\n\t\t\t\tforeach ( $post->info->getArrayCopy() as $k => $v ) {\n\n\t\t\t\t\t$property = $properties->addChild( 'property' );\n\t\t\t\t\t$property->addAttribute( 'name', $k );\n\t\t\t\t\t$property->addAttribute( 'value', serialize( $v ) );\n\n\t\t\t\t}\n\n\t\t\t\t// now add the post comments\n\t\t\t\t// @todo add support for trackbacks from the pingback plugin?\n\t\t\t\t$pc = $p->addChild( 'comments' );\n\n\t\t\t\t$comments = $post->comments;\n\t\t\t\tforeach ( $comments as $comment ) {\n\n\t\t\t\t\t$c = $pc->addChild( 'comment' );\n\t\t\t\t\t$c->addAttribute( 'id', $comment->id );\n\t\t\t\t\t$c->addAttribute( 'date-created', $comment->date->format('c') );\n\t\t\t\t\t$c->addAttribute( 'date-modified', $comment->date->format('c') );\n\t\t\t\t\t$c->addAttribute( 'approved', $comment->status == Comment::STATUS_APPROVED ? 'true' : 'false' );\n\t\t\t\t\t$c->addAttribute( 'user-name', $comment->name );\n\t\t\t\t\t$c->addAttribute( 'user-url', $comment->url );\n\t\t\t\t\t$c->addAttribute( 'user-email', $comment->email );\n\n\t\t\t\t\t// these are habari extensions to BlogML\n\t\t\t\t\t$c->addAttribute( 'user-ip', $comment->ip );\n\t\t\t\t\t$c->addAttribute( 'type', $comment->typename );\n\t\t\t\t\t$c->addAttribute( 'status', $comment->statusname );\n\n\n\t\t\t\t\t$c->addChild( 'title' );\n\n\t\t\t\t\t$c->addCData('content', $comment->content);\n\t\t\t\t\t$c->content['type'] = 'text';\n\t\t\t\t}\n\n\t\t\t\t$p->addChild( 'authors' )->addChild( 'author' )->addAttribute( 'ref', $post->author->id );\n\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static function export_posts_wxr ( $export, $content_type = array( 'entry', 'page' ) ) {\n\n\t\t\t$posts = Posts::get( array( 'nolimit' => 1, 'content_type' => $content_type ) );\n\t\t\tforeach ( $posts as $post ) {\n\n\t\t\t\t// create the item object\n\t\t\t\t$item = $export->addChild( 'item' );\n\n\t\t\t\t// add all the basic post info\n\t\t\t\t$item->id = $post->id;\n\t\t\t\t$item->pubDate = $post->pubdate->format( DateTime::RSS );\n\t\t\t\t$item->{'dc:creator'} = $post->author->username;\n\t\t\t\t$item->guid = $post->permalink;\n\t\t\t\t$item->guid['isPermalink'] = 'true';\n\t\t\t\t$item->description = '';\n\t\t\t\t$item->{'content:encoded'} = $post->content;\n\n\t\t\t\t// the post title is already being escaped somewhere, so don't use overloading to escape it again\n\t\t\t\t$item->addCData( 'title', $post->title );\n\n\t\t\t\t$item->{'wp:post_id'} = $post->id;\n\t\t\t\t$item->{'wp:post_date'} = $post->pubdate->format( DateTime::ISO8601 );\n\t\t\t\t$item->{'wp:post_date_gmt'} = $post->pubdate->set_timezone( 'UTC' )->format( DateTime::ISO8601 );\n\t\t\t\t$item->{'wp:comment_status'} = $post->info->comments_disabled ? 'closed' : 'open';\n\t\t\t\t$item->{'wp:ping_status'} = $post->info->comments_disabled ? 'closed' : 'open';\n\t\t\t\t$item->{'wp:post_name'} = $post->slug;\n\t\t\t\t$item->{'wp:status'} = $post->status == Post::status('published') ? 'publish' : 'draft';\n\t\t\t\t$item->{'wp:post_parent'} = 0;\n\t\t\t\t$item->{'wp:menu_order'} = 0;\n\t\t\t\t$item->{'wp:post_type'} = ($post->typename == \"entry\" ? \"post\" : $post->typename);\n\t\t\t\t$item->{'wp:post_password'} = '';\n\n\t\t\t\t$tags = $post->tags;\n\t\t\t\tforeach ( $tags as $tag ) {\n\n\t\t\t\t\t$category = $item->addChild( 'category', $tag->term_display );\n\t\t\t\t\t$category['domain'] = 'post_tag';\n\t\t\t\t\t$category['nicename'] = $tag->term;\n\n\t\t\t\t}\n\n\t\t\t\t// now add the post comments\n\t\t\t\t// @todo add support for trackbacks from the pingback plugin?\n\t\t\t\tforeach ( $post->comments as $comment ) {\n\n\t\t\t\t\t$c = $item->addChild( 'wp:comment' );\n\t\t\t\t\t$c->{'wp:comment_id'} = $comment->id;\n\t\t\t\t\t$c->{'wp:comment_author'} = $comment->name;\n\t\t\t\t\t$c->{'wp:comment_author_email'} = $comment->email;\n\t\t\t\t\t$c->{'wp:comment_author_url'} = $comment->url;\n\t\t\t\t\t$c->{'wp:comment_author_IP'} = $comment->ip;\n\t\t\t\t\t$c->{'wp:comment_date'} = $comment->date->format( DateTime::RSS );\n\t\t\t\t\t$c->{'wp:comment_date_gmt'} = $comment->date->set_timezone( 'UTC' )->format( DateTime::RSS );\n\t\t\t\t\t$c->{'wp:comment_content'} = $comment->content;\n\t\t\t\t\t$c->{'wp:comment_approved'} = $comment->status == Comment::STATUS_APPROVED ? 'true' : 'false';\n\t\t\t\t\t$c->{'wp:comment_type'} = Comment::type_name( $comment->type );\n\t\t\t\t\t$c->{'wp:comment_parent'} = 0;\n\n\t\t\t\t\t$user = User::get_by_email( $comment->email );\n\n\t\t\t\t\tif ( $user ) {\n\t\t\t\t\t\t$c->{'wp:comment_user_id'} = $user->id;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n?>\n","markers":{"markers":{"1":{"id":1,"range":[[187,0],[187,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":9,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"5":{"id":5,"range":[[30,0],[30,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[30,0],[30,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"23":{"id":23,"range":[[29,0],[30,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"75":{"id":75,"range":[[187,0],[187,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"77":{"id":77,"range":[[187,0],[187,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"89":{"id":89,"range":[[187,0],[187,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"91":{"id":91,"range":[[187,0],[187,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"101":{"id":101,"range":[[187,0],[187,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[186,58],[186,58]],"newRange":[[186,58],[187,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[187,0],[187,0]],"newRange":[[187,0],[187,4]],"oldText":"","newText":"\t\t\t\t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,4],[187,4]],"newRange":[[187,4],[187,5]],"oldText":"","newText":"$","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,5],[187,5]],"newRange":[[187,5],[187,6]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,6],[187,6]],"newRange":[[187,6],[187,7]],"oldText":"","newText":"u","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,7],[187,7]],"newRange":[[187,7],[187,8]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,8],[187,8]],"newRange":[[187,8],[187,9]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,9],[187,9]],"newRange":[[187,9],[187,10]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,10],[187,10]],"newRange":[[187,10],[187,11]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,11],[187,11]],"newRange":[[187,11],[187,12]],"oldText":"","newText":"-","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,12],[187,12]],"newRange":[[187,12],[187,13]],"oldText":"","newText":">","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,13],[187,13]],"newRange":[[187,13],[187,15]],"oldText":"","newText":"{}","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,14],[187,14]],"newRange":[[187,14],[187,16]],"oldText":"","newText":"''","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,15],[187,15]],"newRange":[[187,15],[187,16]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,16],[187,16]],"newRange":[[187,16],[187,17]],"oldText":"","newText":"u","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,17],[187,17]],"newRange":[[187,17],[187,18]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,18],[187,18]],"newRange":[[187,18],[187,19]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,19],[187,19]],"newRange":[[187,19],[187,20]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,20],[187,20]],"newRange":[[187,20],[187,21]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,21],[187,21]],"newRange":[[187,21],[187,22]],"oldText":"","newText":"_","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,22],[187,22]],"newRange":[[187,22],[187,23]],"oldText":"","newText":"l","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,23],[187,23]],"newRange":[[187,23],[187,24]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,24],[187,24]],"newRange":[[187,24],[187,25]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,25],[187,25]],"newRange":[[187,25],[187,26]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,26],[187,26]],"newRange":[[187,26],[187,27]],"oldText":"","newText":"_","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,27],[187,27]],"newRange":[[187,27],[187,28]],"oldText":"","newText":"n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,28],[187,28]],"newRange":[[187,28],[187,29]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,29],[187,29]],"newRange":[[187,29],[187,30]],"oldText":"","newText":"m","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,30],[187,30]],"newRange":[[187,30],[187,31]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,33],[187,33]],"newRange":[[187,33],[187,34]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,34],[187,34]],"newRange":[[187,34],[187,35]],"oldText":"","newText":"=","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,35],[187,35]],"newRange":[[187,35],[187,36]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[186,58],[186,58]],"newRange":[[186,58],[187,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[187,0],[187,0]],"newRange":[[187,0],[187,4]],"oldText":"","newText":"\t\t\t\t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,4],[187,4]],"newRange":[[187,4],[187,5]],"oldText":"","newText":"$","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,5],[187,5]],"newRange":[[187,5],[187,6]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,6],[187,6]],"newRange":[[187,6],[187,7]],"oldText":"","newText":"u","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,7],[187,7]],"newRange":[[187,7],[187,8]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,8],[187,8]],"newRange":[[187,8],[187,9]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[187,9],[187,9]]},"newParams":{"range":[[187,8],[187,9]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,8],[187,9]],"newRange":[[187,8],[187,8]],"oldText":"o","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,8],[187,8]],"newRange":[[187,8],[187,9]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,9],[187,9]],"newRange":[[187,9],[187,10]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,10],[187,10]],"newRange":[[187,10],[187,11]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,11],[187,11]],"newRange":[[187,11],[187,12]],"oldText":"","newText":"-","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,12],[187,12]],"newRange":[[187,12],[187,13]],"oldText":"","newText":">","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,13],[187,13]],"newRange":[[187,13],[187,15]],"oldText":"","newText":"{}","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,14],[187,14]],"newRange":[[187,14],[187,16]],"oldText":"","newText":"''","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,15],[187,15]],"newRange":[[187,15],[187,16]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,16],[187,16]],"newRange":[[187,16],[187,17]],"oldText":"","newText":"u","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,17],[187,17]],"newRange":[[187,17],[187,18]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,18],[187,18]],"newRange":[[187,18],[187,19]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,19],[187,19]],"newRange":[[187,19],[187,20]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,20],[187,20]],"newRange":[[187,20],[187,21]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,21],[187,21]],"newRange":[[187,21],[187,22]],"oldText":"","newText":"_","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,22],[187,22]],"newRange":[[187,22],[187,23]],"oldText":"","newText":"f","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,23],[187,23]],"newRange":[[187,23],[187,24]],"oldText":"","newText":"i","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,24],[187,24]],"newRange":[[187,24],[187,25]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,25],[187,25]],"newRange":[[187,25],[187,26]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,26],[187,26]],"newRange":[[187,26],[187,27]],"oldText":"","newText":"t","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,27],[187,27]],"newRange":[[187,27],[187,28]],"oldText":"","newText":"_","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,28],[187,28]],"newRange":[[187,28],[187,29]],"oldText":"","newText":"n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,29],[187,29]],"newRange":[[187,29],[187,30]],"oldText":"","newText":"a","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,30],[187,30]],"newRange":[[187,30],[187,31]],"oldText":"","newText":"m","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,31],[187,31]],"newRange":[[187,31],[187,32]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,34],[187,34]],"newRange":[[187,34],[187,35]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,35],[187,35]],"newRange":[[187,35],[187,36]],"oldText":"","newText":"=","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,36],[187,36]],"newRange":[[187,36],[187,37]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[187,34],[188,4]]},"newParams":{"tailed":false,"range":[[188,4],[188,4]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,34],[188,4]],"newRange":[[187,34],[187,35]],"oldText":" = \n\t\t\t\t","newText":",","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,35],[187,35]],"newRange":[[187,35],[187,36]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,68],[187,68]],"newRange":[[187,68],[187,69]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,69],[187,69]],"newRange":[[187,69],[187,70]],"oldText":"","newText":"x","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,70],[187,70]],"newRange":[[187,70],[187,71]],"oldText":"","newText":"p","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,71],[187,71]],"newRange":[[187,71],[187,72]],"oldText":"","newText":"l","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,72],[187,72]],"newRange":[[187,72],[187,73]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,73],[187,73]],"newRange":[[187,73],[187,74]],"oldText":"","newText":"d","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,74],[187,74]],"newRange":[[187,74],[187,75]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,75],[187,75]],"newRange":[[187,75],[187,77]],"oldText":"","newText":"()","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,76],[187,76]],"newRange":[[187,76],[187,78]],"oldText":"","newText":"''","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,77],[187,77]],"newRange":[[187,77],[187,78]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,79],[187,79]],"newRange":[[187,79],[187,80]],"oldText":"","newText":",","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,80],[187,80]],"newRange":[[187,80],[187,81]],"oldText":"","newText":" ","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,81],[187,81]],"newRange":[[187,81],[187,99]],"oldText":"","newText":"$user->displayname","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[187,100],[187,100]],"newRange":[[187,100],[187,101]],"oldText":"","newText":";","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[186,58],[186,58]],"newRange":[[186,58],[187,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[187,0],[187,0]],"newRange":[[187,0],[187,4]],"oldText":"","newText":"\t\t\t\t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[187,4],[187,4]]},"newParams":{"reversed":true,"range":[[187,3],[187,4]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,3],[187,4]],"newRange":[[187,3],[187,3]],"oldText":"\t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[187,3],[187,3]]},"newParams":{"range":[[187,2],[187,3]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,2],[187,3]],"newRange":[[187,2],[187,2]],"oldText":"\t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[187,2],[187,2]]},"newParams":{"range":[[187,1],[187,2]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,1],[187,2]],"newRange":[[187,1],[187,1]],"oldText":"\t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[187,1],[187,1]]},"newParams":{"range":[[187,0],[187,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,0],[187,1]],"newRange":[[187,0],[187,0]],"oldText":"\t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[188,0],[189,0]],"newRange":[[188,0],[188,0]],"oldText":"\t\t\t\t$author->{'author_first_name'}, $author->{'author_last_name'} = explode(' ', $user->displayname);\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[188,0],[188,0]]},"newParams":{"reversed":true,"range":[[187,0],[188,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[187,0],[188,0]],"newRange":[[187,0],[187,0]],"oldText":"\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lildude/Sites/habari/user/plugins/export/export.plugin.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"124996bbdabc0e55407929553d95be32a8495dab","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":9,"softTabs":false,"displayBuffer":{"id":10,"softWrap":false,"editorWidthInChars":null,"scrollTop":3441,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lildude/Sites/habari/user/plugins/export/export.plugin.php","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lildude/Sites/habari/user/plugins/export/export.plugin.php","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"metrics":{"sessionLength":6565405},"fuzzy-finder":{"/Users/lildude/Sites/habari/user/plugins/export/export.plugin.php":1408626961688},"keybinding-resolver":{"attached":false},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/lildude/Sites/habari/user/plugins/export/export.plugin.php","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}