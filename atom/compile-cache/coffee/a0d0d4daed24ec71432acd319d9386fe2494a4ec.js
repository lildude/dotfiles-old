(function() {
  describe('Linter Behavior', function() {
    var bottomContainer, getLinter, getMessage, linter, linterState, trigger;
    linter = null;
    linterState = null;
    bottomContainer = null;
    getLinter = require('./common').getLinter;
    trigger = function(el, name) {
      var event;
      event = document.createEvent('HTMLEvents');
      event.initEvent(name, true, false);
      return el.dispatchEvent(event);
    };
    getMessage = function(type, filePath) {
      return {
        type: type,
        text: "Some Message",
        filePath: filePath,
        range: [[0, 0], [1, 1]]
      };
    };
    beforeEach(function() {
      return waitsForPromise(function() {
        return atom.packages.activatePackage('linter').then(function() {
          linter = atom.packages.getActivePackage('linter').mainModule.instance;
          linterState = linter.state;
          return bottomContainer = linter.views.bottomContainer;
        });
      });
    });
    describe('Bottom Tabs', function() {
      it('defaults to file tab', function() {
        return expect(linterState.scope).toBe('File');
      });
      it('changes tab on click', function() {
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(linterState.scope).toBe('Project');
      });
      it('toggles panel visibility on click', function() {
        expect(linter.views.panel.getVisibility()).toBe(true);
        trigger(bottomContainer.getTab('File'), 'click');
        expect(linter.views.panel.getVisibility()).toBe(false);
        trigger(bottomContainer.getTab('File'), 'click');
        return expect(linter.views.panel.getVisibility()).toBe(true);
      });
      it('re-enables panel when another tab is clicked', function() {
        expect(linter.views.panel.getVisibility()).toBe(true);
        trigger(bottomContainer.getTab('File'), 'click');
        expect(linter.views.panel.getVisibility()).toBe(false);
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(linter.views.panel.getVisibility()).toBe(true);
      });
      return it('updates count on pane change', function() {
        var messages, provider;
        provider = getLinter();
        expect(bottomContainer.getTab('File').count).toBe(0);
        messages = [getMessage('Error', __dirname + '/fixtures/file.txt')];
        linter.setMessages(provider, messages);
        linter.messages.updatePublic();
        return waitsForPromise(function() {
          return atom.workspace.open('file.txt').then(function() {
            expect(bottomContainer.getTab('File').count).toBe(1);
            return atom.workspace.open('/tmp/non-existing-file');
          }).then(function() {
            return expect(bottomContainer.getTab('File').count).toBe(0);
          });
        });
      });
    });
    return describe('Markers', function() {
      return it('automatically marks files when they are opened if they have any markers', function() {
        var messages, provider;
        provider = getLinter();
        messages = [getMessage('Error', '/etc/passwd')];
        linter.setMessages(provider, messages);
        linter.messages.updatePublic();
        return waitsForPromise(function() {
          return atom.workspace.open('/etc/passwd').then(function() {
            var activeEditor;
            activeEditor = atom.workspace.getActiveTextEditor();
            return expect(activeEditor.getMarkers().length > 0).toBe(true);
          });
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2xpbGR1ZGUvLmF0b20vcGFja2FnZXMvbGludGVyL3NwZWMvbGludGVyLWJlaGF2aW9yLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxFQUFBLFFBQUEsQ0FBUyxpQkFBVCxFQUE0QixTQUFBLEdBQUE7QUFDMUIsUUFBQSxvRUFBQTtBQUFBLElBQUEsTUFBQSxHQUFTLElBQVQsQ0FBQTtBQUFBLElBQ0EsV0FBQSxHQUFjLElBRGQsQ0FBQTtBQUFBLElBRUEsZUFBQSxHQUFrQixJQUZsQixDQUFBO0FBQUEsSUFHQyxZQUFhLE9BQUEsQ0FBUSxVQUFSLEVBQWIsU0FIRCxDQUFBO0FBQUEsSUFJQSxPQUFBLEdBQVUsU0FBQyxFQUFELEVBQUssSUFBTCxHQUFBO0FBQ1IsVUFBQSxLQUFBO0FBQUEsTUFBQSxLQUFBLEdBQVEsUUFBUSxDQUFDLFdBQVQsQ0FBcUIsWUFBckIsQ0FBUixDQUFBO0FBQUEsTUFDQSxLQUFLLENBQUMsU0FBTixDQUFnQixJQUFoQixFQUFzQixJQUF0QixFQUE0QixLQUE1QixDQURBLENBQUE7YUFFQSxFQUFFLENBQUMsYUFBSCxDQUFpQixLQUFqQixFQUhRO0lBQUEsQ0FKVixDQUFBO0FBQUEsSUFTQSxVQUFBLEdBQWEsU0FBQyxJQUFELEVBQU8sUUFBUCxHQUFBO0FBQ1gsYUFBTztBQUFBLFFBQUMsTUFBQSxJQUFEO0FBQUEsUUFBTyxJQUFBLEVBQU0sY0FBYjtBQUFBLFFBQTZCLFVBQUEsUUFBN0I7QUFBQSxRQUF1QyxLQUFBLEVBQU8sQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQUQsRUFBUyxDQUFDLENBQUQsRUFBRyxDQUFILENBQVQsQ0FBOUM7T0FBUCxDQURXO0lBQUEsQ0FUYixDQUFBO0FBQUEsSUFhQSxVQUFBLENBQVcsU0FBQSxHQUFBO2FBQ1QsZUFBQSxDQUFnQixT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

//# sourceURL=/Users/lildude/.atom/packages/linter/spec/linter-behavior-spec.coffee
