(function() {
  var BLOCKQUOTE_REGEX, LIST_OL_REGEX, LIST_OL_TASK_REGEX, LIST_UL_REGEX, LIST_UL_TASK_REGEX, LineMeta, TYPES;

  LIST_UL_TASK_REGEX = /^(\s*)([*+-])\s+\[[xX ]\]\s*(.*)$/;

  LIST_UL_REGEX = /^(\s*)([*+-])\s+(.*)$/;

  LIST_OL_TASK_REGEX = /^(\s*)(\d+)\.\s+\[[xX ]\]\s*(.*)$/;

  LIST_OL_REGEX = /^(\s*)(\d+)\.\s+(.*)$/;

  BLOCKQUOTE_REGEX = /^(\s*)(>)\s*(.*)$/;

  TYPES = [
    {
      name: ["list", "ul", "task"],
      regex: LIST_UL_TASK_REGEX,
      nextLine: function(matches) {
        return "" + matches[1] + matches[2] + " [ ] ";
      }
    }, {
      name: ["list", "ul"],
      regex: LIST_UL_REGEX,
      nextLine: function(matches) {
        return "" + matches[1] + matches[2] + " ";
      }
    }, {
      name: ["list", "ol", "task"],
      regex: LIST_OL_TASK_REGEX,
      nextLine: function(matches) {
        return "" + matches[1] + (parseInt(matches[2], 10) + 1) + ". [ ] ";
      }
    }, {
      name: ["list", "ol"],
      regex: LIST_OL_REGEX,
      nextLine: function(matches) {
        return "" + matches[1] + (parseInt(matches[2], 10) + 1) + ". ";
      }
    }, {
      name: ["blockquote"],
      regex: BLOCKQUOTE_REGEX,
      nextLine: function(matches) {
        return "" + matches[1] + "> ";
      }
    }
  ];

  module.exports = LineMeta = (function() {
    function LineMeta(line) {
      this.line = line;
      this.types = [];
      this.head = "";
      this.body = "";
      this.indent = "";
      this.nextLine = "";
      this._findMeta();
    }

    LineMeta.prototype._findMeta = function() {
      var matches, type, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = TYPES.length; _i < _len; _i++) {
        type = TYPES[_i];
        if (matches = type.regex.exec(this.line)) {
          this.types = type.name;
          this.indent = matches[1];
          this.head = matches[2];
          this.body = matches[3];
          this.nextLine = type.nextLine(matches);
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    LineMeta.prototype.isTaskList = function() {
      return this.types.indexOf("task") !== -1;
    };

    LineMeta.prototype.isList = function(type) {
      return this.types.indexOf("list") !== -1 && (!type || this.types.indexOf(type) !== -1);
    };

    LineMeta.prototype.isContinuous = function() {
      return !!this.nextLine;
    };

    LineMeta.prototype.isEmptyBody = function() {
      return !this.body;
    };

    LineMeta.isList = function(line) {
      return LIST_UL_REGEX.test(line) || LIST_OL_REGEX.test(line);
    };

    LineMeta.isOrderedList = function(line) {
      return LIST_OL_REGEX.test(line);
    };

    LineMeta.isUnorderedList = function(line) {
      return LIST_UL_REGEX.test(line);
    };

    return LineMeta;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2xpbGR1ZGUvLmF0b20vcGFja2FnZXMvbWFya2Rvd24td3JpdGVyL2xpYi9oZWxwZXJzL2xpbmUtbWV0YS5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsdUdBQUE7O0FBQUEsRUFBQSxrQkFBQSxHQUFxQixtQ0FBckIsQ0FBQTs7QUFBQSxFQUNBLGFBQUEsR0FBcUIsdUJBRHJCLENBQUE7O0FBQUEsRUFFQSxrQkFBQSxHQUFxQixtQ0FGckIsQ0FBQTs7QUFBQSxFQUdBLGFBQUEsR0FBcUIsdUJBSHJCLENBQUE7O0FBQUEsRUFLQSxnQkFBQSxHQUFxQixtQkFMckIsQ0FBQTs7QUFBQSxFQU9BLEtBQUEsR0FBUTtJQUNOO0FBQUEsTUFDRSxJQUFBLEVBQU0sQ0FBQyxNQUFELEVBQVMsSUFBVCxFQUFlLE1BQWYsQ0FEUjtBQUFBLE1BRUUsS0FBQSxFQUFPLGtCQUZUO0FBQUEsTUFHRSxRQUFBLEVBQVUsU0FBQyxPQUFELEdBQUE7ZUFBYSxFQUFBLEdBQUcsT0FBUSxDQUFBLENBQUEsQ0FBWCxHQUFnQixPQUFRLENBQUEsQ0FBQSxDQUF4QixHQUEyQixRQUF4QztNQUFBLENBSFo7S0FETSxFQU1OO0FBQUEsTUFDRSxJQUFBLEVBQU0sQ0FBQyxNQUFELEVBQVMsSUFBVCxDQURSO0FBQUEsTUFFRSxLQUFBLEVBQU8sYUFGVDtBQUFBLE1BR0UsUUFBQSxFQUFVLFNBQUMsT0FBRCxHQUFBO2VBQWEsRUFBQSxHQUFHLE9BQVEsQ0FBQSxDQUFBLENBQVgsR0FBZ0IsT0FBUSxDQUFBLENBQUEsQ0FBeEIsR0FBMkIsSUFBeEM7TUFBQSxDQUhaO0tBTk0sRUFXTjtBQUFBLE1BQ0UsSUFBQSxFQUFNLENBQUMsTUFBRCxFQUFTLElBQVQsRUFBZSxNQUFmLENBRFI7QUFBQSxNQUVFLEtBQUEsRUFBTyxrQkFGVDtBQUFBLE1B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

//# sourceURL=/Users/lildude/.atom/packages/markdown-writer/lib/helpers/line-meta.coffee
